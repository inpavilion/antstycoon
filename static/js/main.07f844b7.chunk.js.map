{"version":3,"sources":["units/units/db.js","components/CodeMirrorEditor.js","managers/KeyboardManager.js","managers/TimerManager.js","units/main.js","units/units/brand.js","units/units/bubbleBoard.js","units/units/bubbleFlow.js","units/units/bubbleGuns.js","units/units/bubbleTest.js","units/units/bubbleTypes.js","units/units/parseStringIntoComp.js","units/units/prettyScode.js","units/units/reactAssembler.js","components/MyInput.js","units/units/reactUtils.js","units/units/store.js","units/units/testDataGenerator.js","units/units/testMolds.js","units/units/testTplAssembling.js","units/units/tplObjParse.js","units/units/treeCardsBuilder.js","units/units/treeIterator.js","units/units/uids.js","units/init.js","units/index.js","FlatAnt1.js","App.js","serviceWorker.js","index.js","../../data-department/dataManager.js","logo.svg"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","faker__WEBPACK_IMPORTED_MODULE_1__","faker__WEBPACK_IMPORTED_MODULE_1___default","pouchdb__WEBPACK_IMPORTED_MODULE_2__","pouchdb_find__WEBPACK_IMPORTED_MODULE_3__","PouchDB","plugin","PouchDBFind","cu","window","ub","ctx","serialize","obj","_","cloneDeepWith","value","isFunction","TYPE","body","toString","deserialize","item","fn","eval","e","save","id","db","this","uid","generateUid","_id","get","then","doc","rev","_rev","put","i","catch","err","load","_this","cfg","state","nextId","prefix","init","name","auto_compaction","Date","getTime","Math","random","Object","create","destroy","alert","loadfilter","selector","count","sort","find","test","result","x","y","obj2","run","def","debug","require","Component","DataManager","KeyboardManager","setup","isInitialized","$","on","evt","handleKey","setTrigger","layout","getValue","altKey","push","ctrlKey","metaKey","shiftKey","key","toLowerCase","comb","join","action","TimerManager","wallet","timers","start","delay","clearTimeout","timer","setTimeout","cancel","date","set","end","getRandomFn","str","seed","charCodeAt","sin","floor","getBrand","randomFn","baseBrand","brand","mainColor_hsl","getColor","complementColor_hsl","mainColor","complementColor","fadedColor","baseColor","hue","color","chroma","hsl","getRandom","scale","max","pointsStar","polies","_loop","j","map","points","col","classname","round","concat","getLogo","logo","console","log","bubbleBoard","addItem","getId","mergeItem","data","minStep","changed","appendTo","results","versions","isReady","undefined","completedAt","rewindTo","tb","onchanged","step","createdAt","values","items","hasChanges","slot","bubbleid","isString","charAt","substring","isObject","isMatch","version","evalItems","affected","_evalItems","isCompleteValues","evalItem","node","getNode","bubble","defaultsDeep","trails","rels","bellow","above","uses","checkIfComplete","type","tpl","val","master","evaluateflow","getVersion","bubbleFlow","fns","doubleCheck","evaluate","target","checks","check","shaddow","score","subs","total","resolved","unresolved","tplParams","defined","parameters","mold","param","model","v","targetId","opt","_setup","assign","shaft","fullPath","getFull","route","base","relPath","fetch","it","collection","cb","oldValues","info","sub","paths","stateCurrentId","currentItem","targetid","path","compile","clues","needes","provides","collections","subScore","params","undefinedCount","length","definedCount","bubbleGuns","bubbleTypes","dispatch","bubbleTest","nodeType","tplObjParse","viewAs","dataNode","reactNode","neededValues","reactAssembler","op","cues","pins","mirror","description","newItem","cloneDeep","bubbles","cache","newId","newValues","mirrorBubble","types","phase1","html","trim","nest","document","createElement","innerHTML","specs","childNodes","el","spec","_spec","nodeValue","props","attributes","attr","indexOf","replace","all","char","toUpperCase","class","className","style","_style","componentName","nodeName","children","htmlSlot","keys","forEach","child","match","reg","css","exec","phase2","attrs","_this2","payload","ops","watchAttrs","isArray","iterate","a","b","stage","opValues","handleObj","childrenPath","subPath","handleProp","pin","parent","addOp","prepareAction","concatOp","_this3","split","filter","index","concatParent","parseStringIntoComp","nextUID","makestr","indent","usequouts","js_beautify","indent_size","indent_level","preserve_newlines","max_preserve_newlines","indent_inner_html","trimStart","lines","isObjectLike","isNil","beautify","prettyScode","getter","applyOps","tplid","newOps","MyInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","setState","nextProps","text","React","customComponents","myinput","makeComponent","flattenDeep","component","error","reactUtils","tplComponent","createStore","hapi","store","tpls","parents","change","runWith","src","getItem","getSubs","registerTpl","args","cases","faker","company","catchPhrase","setter","level","generated","uuid","arrayElement","oldPayload","prepare","ret","integrate","addPayload","_case","testDataGenerator","parser","testMolds","parseTpl","renderTpl","assembleTpl","molds","iterateBubbles","shouldAssemble","isRegistered","addBubble","computedAtStep","uids","addedAtStep","inputs","salut","testTplAssembing","value_setter","content","#test","tplId","isUnparsedTpl","isList","parseHtml","_check","payload1","tplsMapping","defaultTpl","usedGlobalStyles","addSubs","nodes","card","useTemplate","skipGlobalStyle","root","globalStyle","title","getMolds","buildTpls","iterator","addGlobalStyles","gbs","styles","makeSelector","treeCardsBuilder","repo","mappings","treeIterator","mub","tests","pending","passes","shift","group","groupEnd","ctxpins","newAPI","TimerManagerBuilder","showhud","currentView","goToCard","placeorder","which","flow","place","restart","parseinput","parse","select","focus","bridge","myUB","bridgeLoader","loadBridge","selectMap","mapview","loadMap","setCombined","input","substr","editStartedAt","firstCharAt","antsDbState","getParent","actions","main","prevStep","startedAt","getWallet","selectItem","add","createMap","merge","ant","allSubs","placedAt","mergeRoot","loader","fnsub","make","old","setupAll","makeUb","tb.db","goSetup","extra","autostart","waiting","c","onready","promise","Promise","resolve","opts","loadItems","saveItems","request_save","setupUb","getItemsToSave","promises","loadFilter","startIds","related","ids","top","notdb","recent","docs","ant1","_this4","customTpl","generateId","triggerChange","setRel","rel","mapView","frame","topic","entry","other","handle","bridgeTitle","mapTitle","uistate","rows","selected","otherTpl","moldsMap","cardMold","background","colors","getBody","setV","memo","cleanV","list","getBodyList","isSelected","getHandle","String","fromCharCode","moldName","titleMold","addVFn","tplSpecs","byLevel","borderColor","makeItem","makeList","stack","clean","getList","stacks","pop","_this5","onbeforeunload","saveAll","loadAll","_this6","tosave","savings","saveitem","loaditem","onload","runOn","starter","done","bubbleitem","orderText","order","viewState","view","changeOrder","bumbAction","placeOrder","dim","height","width","barHeight","label","bubbleList","bumb","textColor","historyManager","recording","runToStart","Frame","_this7","_this8","components","FlatAnt","_this9","scode","react_default","FlatAnt1_Frame","App","FlatAnt1","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","currentStack","startStack","prevStack","addInfo","skipClone","endStack","_DataManager","gettingValue","meta","loadersCache","triggers","currentVersion","dependencies","agenda","names","tasks","toStart","flags","setCtx","basePath","ctxPath","getCtx","runFn","fnName","targetPath","getInfluenced","influenced","dep","skipPartialValueCheck","checkCache","partialPath","slice","partialResult","partialSlot","partialValue","listToValue","setCache","shouldUpdate","ignoreUpdates","prepareCache","contains","dependsOn","diffCache","oldCache","addDependency","remDependency","newC","oldC","updateVersionsMap","depOn","walletValue","srcPath","rootPath","_item","_i","silentSet","skipPathAffected","getAffectedPaths","postponedSteps","hasSteps","snoozeCount","getFromLoader","addLog","lhs","rhs","cachedValue","xcache","requester","force","logger","prism","loadedPrism","getFromDispatch","_value","TB","skipCache","runUtils","apply","mergeValue","oldValue","changedPaths","addPath","pauseAll","setObObj","updateVersionForAll","req_triggers","runningReqTriggers_timer","clearInterval","runningAgendaTriggers_timer","setInterval","callback","stop","requestAnimationFrame","stopFn","asyncTriggers","affected_checked","lazy_checkTriggers","req_Agenda","asyncTriggersAgenda","trigger","runTrigger","listener","token","sortAgenda","taskA","taskB","salience","source","appendToArray","setVersion","setByLoader","isLoaders","strPath","markChangeOn","skipTrigger","markChangedPaths","checkTriggers","setUpdateFlag","runTriggers","fetchValues","onlyPaths","_path","_path2","KEY","loaders","loadersPaths","afterOp","isEmpty","currentPins","_pin","pinKey","isLoader","dest","hasVersion","updateVersion","hasLoaders","lPath","buildModel","tokens","modelName","MODEL","handleTokens","modelObj","modelSpec","_value2","newObj","setLoader","getStaticValue","getUID","getTrigger","remTrigger","listenerPath","oldTrigger","loaderPath","destination","prepareLoader","deepTransformObj","setMap","versionsTree","getVersionTree","objectDiff","oldObject","newObject","changes","oldO","newO","from","to","subChanges","act","ACT","go","toolbox","run_fetch","singlePath","SINGLEPATH","subPrefix","_subPrefix","pathOf","last_src","left","detach","detached","feed","arguments","in","module","exports","p"],"mappings":"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","file":"static/js/main.07f844b7.chunk.js","sourcesContent":["import _ from \"lodash\"\nimport faker from \"faker\"\nimport PouchDB from \"pouchdb\"\nimport PouchDBFind from 'pouchdb-find';\nPouchDB.plugin(PouchDBFind);\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {},\n\n    serialize : function( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( _.isFunction( value ) ) return { TYPE : \"FN\", body : value.toString() };\n        })\n\n        return item;\n    },\n\n    deserialize : function ( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( value && value.TYPE == \"FN\" ) {\n                let fn;\n                try  { \n                    eval( \"fn=\" + value.body )\n                } catch (e ) {\n\n                }\n                return fn;\n            } \n        })\n\n        return item;\n    },\n\n    save: function (value, id) {\n        var db = this.ctx.db;\n\n        let item = this.serialize( value );\n        if (!item.uid) item.uid = id || item.id || this.generateUid();\n        if (!item._id) item._id = item.uid;\n  \n        return db.get(item._id)\n          .then((doc) => {\n            let rev = doc.rev;\n            let _rev = doc._rev;\n\n            item.rev = rev;\n            item._rev = _rev;\n            return db.put(item).then( ( i)=> {\n            })\n          })\n          .catch(err => {\n            return db.put(item);\n          })\n\n\n\n    },\n\n\n\n    load: function (id) {\n        return this.ctx.db.get(id).catch( e => {\n            return null\n        })\n        .then ( item => {\n            if ( item ) item = this.deserialize( item );\n            return item;\n        })\n    },\n\n\n    generateUid : function ( ) {\n        this.cfg.state.nextId++;\n        return this.cfg.state.prefix + \"_\" + this.cfg.state.nextId;\n    },\n\n    init: function (name) {\n        let ctx = {\n            db: new PouchDB(name, {auto_compaction: true}),\n            state: {\n                prefix: new Date().getTime().toString() + \"_\" + Math.random().toString(),\n                nextId: 0,\n                id : \"state\"\n            }\n        }\n\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        item.load(\"state\").then(state => {\n            if ( state ) item.ctx.state = state\n            else item.save( item.ctx.state )\n        })\n\n        return item;\n    },\n\n    destroy : function ( ) {\n        this.ctx.db.destroy( ) \n            .then ( () => {\n\n                alert( \"done cleanup\")\n            })\n    },\n\n    loadfilter : function ( selector, count, sort ) {\n        return this.ctx.db.find( { selector  });\n    }\n\n}\n\nvar test = (result) => {\n    result.obj = ub.serialize( {x : function ( ) {} , y : \"test\"})\n\n    result.obj2 = ub.deserialize( result.obj );\n\n    ub.init(\"testdb\")\n}\n\n\ncu.db = {\n    //test,\n    run: function (name) {\n        return ub.init(name);\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/javascript/javascript');\n\nclass CodeMirrorEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.changeValue = this.changeValue.bind(this);\n    this.changeCursor = this.changeCursor.bind(this);\n    this.isBlured = this.isBlured.bind(this);\n  }\n\n  changeValue(editor, data, value) {\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    //window.editor = editor;\n\n\n    let cursor = editor.getCursor();\n    if (data.origin != undefined) {\n      this.props.valueChanged({ scode: value, cursor: { line: cursor.line, ch: cursor.ch } });\n    }\n    else {\n      this.props.valueChanged({ scode: value })\n    }\n\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n  }\n\n  changeCursor(editor, cursor) {\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n\n    if (cursor.sticky == undefined) return;\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    this.props.valueChanged({ cursor: { line: cursor.line, ch: cursor.ch } });\n\n  }\n  isBlured() {\n    if (this.props.blured)\n      this.props.blured()\n  }\n\n  render() {\n\n    //this means that setting the value with null will delete the value from wallet ?!?\n    let text = this.props.data.scode || \"\";\n    if (!text.length) text = \"\";\n\n    let cursor = this.props.data.cursor;\n    if (!cursor || !cursor.ch) cursor = 0;\n\n    let popup;\n    let caret = this.state.caret || { right : 0, bottom : 0} \n    if (caret) {\n\n      let left = caret.right + 30;\n      let top = caret.bottom + 0;\n\n      popup = <div className=\"popup\" style={{ transform: \"translate(\" + left + \"px ,\" + top + \"px)\", zIndex: 100 }} > Salut  </div>\n    }\n    else popup = null;\n\n    let style = `\n      .popup { border : 1px solid #999; background : #bbb; padding : 10px; min-width:40px; width : 100px; transition : all 0.2s ease; }\n\n      .popup { opacity : 0.05; position : absolute;pointer-events: none;}\n    `\n    return <div style={{position:\"relative\"}}>\n      <style>{style}</style>\n      {popup}\n      <CodeMirror\n        value={text}\n\n        options={{\n          mode: 'javascript',\n          lineNumbers: true, \n          smartIndent : true,\n        }}\n\n        autoCursor={false}\n\n        cursor={cursor}\n        ///onBeforeChange={this.changeValue}\n        onChange={this.changeValue}\n        onCursor={this.changeCursor}\n        onBlur={this.isBlured}\n      />\n    </div>\n  }\n}\n\nexport default CodeMirrorEditor;","import React, { Component } from 'react';\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"../libs/dataManager\";\nvar DataManager = window.DataManager;\n\n\nvar KeyboardManager = {\n    setup: function () {\n        if (this.isInitialized) return;\n\n        $(\"body\").on(\"keydown\", (evt) => {\n            this.handleKey(evt)\n        })\n\n        DataManager.setTrigger(\"keyboardShortcuts.layout\", \"kbdManager\", {\n            run: () => {\n                this.load();\n            }\n        })\n        this.load();\n    },\n\n    load: function () {\n        let layout = DataManager.getValue(\"keyboardShortcuts.layout\");\n        this.layout = layout || {};\n    },\n\n    handleKey: function (evt) {\n        var name = [];\n        if (evt.altKey) name.push(\"alt\");\n        if (evt.ctrlKey) name.push(\"ctrl\");\n        if (evt.metaKey) name.push(\"meta\");\n        if (evt.shiftKey) name.push(\"shift\");\n\n        name.push(evt.key.toLowerCase())\n        let comb = name.join(\"+\");\n\n        if (this.layout[comb])\n            return this.run(this.layout[comb], comb)\n    },\n\n    run: function (action,comb) {\n        if (_.isFunction(action)) return action(comb, action);\n        else if (action.run)\n            return action.run(comb, action)\n    }\n}\n\nKeyboardManager.setup();\n\nexport default KeyboardManager","var TimerManager = {\n    init : function ( DataManager ) {\n      var item = Object.create( this );\n\n      item.DataManager = DataManager;\n      item.wallet = {timers : {} }\n      return item;\n    },\n    wallet: { timers: {} },\n  \n    start: function (name, action, delay) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n  \n      var timer = window.setTimeout(() => {\n        this.cancel( name );\n        action(name, action, delay);\n      }, delay)\n  \n      this.wallet.timers[name] = timer;\n\n      let date = new Date();\n      this.DataManager.set(\"TimerManager.timer.\"  + name , { start : date.getTime(), end : date.getTime() + delay })\n    },\n  \n    cancel: function (name) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n      delete this.wallet.timers[name]\n      this.DataManager.set(\"TimerManager.timer.\"  + name , \"\")\n\n    }\n  }\n\n  export {TimerManager};","\nvar cu = {}\n\nwindow.cu = cu;\n\nexport default cu;\n","import _ from \"lodash\"\nimport faker from \"faker\"\nimport chroma from \"chroma-js\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    getRandomFn : function ( str ) {\n      var seed = 0;\n      for (var i in str) {\n        seed += str.charCodeAt(i) * i\n      }\n      function getRandom() {\n        var x = Math.sin(seed++) * 10000;\n        return x - Math.floor(x);\n      }\n\n      return getRandom;\n\n    },\n\n    getBrand : function( uid ) {\n      let randomFn = this.getRandomFn( uid );\n\n      let baseBrand = {\n        mainColor : \"#007abc\",\n        complementColor : \"\"\n      }\n\n      let brand = {\n        mainColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n        complementColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n      }\n\n      brand.mainColor = \"hsl( \" + brand.mainColor_hsl[0] + \",\" + brand.mainColor_hsl[1] + \"% ,\" + (brand.mainColor_hsl[2]) + \"%  )\"\n      brand.complementColor = \"hsl( \" + brand.complementColor_hsl[0] + \",\" + brand.complementColor_hsl[1] + \"% ,\" + (brand.complementColor_hsl[2]) + \"%  )\"\n\n      brand.fadedColor = \"hsla( \" + brand.mainColor_hsl[0] + \",\" + 10 + \"% ,\" + (brand.mainColor_hsl[2]) + \"%, 0.5  )\"\n\n      return brand;\n    },\n\n    getColor : function ( seed, baseColor  ) {\n\n        baseColor = baseColor || \"#007abc\";\n        let hue = seed * 360;\n        let color = chroma(\"#007abc\").set(\"hsi.h\", hue).hsl();\n    \n        color[1] = color[1] * 100;\n        color[2] = color[2] * 100;\n\n        return color;\n    },\n    get : function ( seed, count)  {\n\n        var str = seed; //faker.lorem.sentence(10);\n        var seed = 0;\n        for (var i in str) {\n          seed += str.charCodeAt(i) * i\n        }\n        function getRandom() {\n          var x = Math.sin(seed++) * 10000;\n          return x - Math.floor(x);\n        }\n\n        count = Math.max( 2, Math.floor( (getRandom() * 5 )) )\n\n        \n        \n        let scale =  50 / count ;\n\n        let color = this.getColor( getRandom() );\n\n        let pointsStar = [\n            [0, 0, 0.5, 0.5, 1, 0],\n            [0, 0, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 1, 0],\n        ]\n\n\n        \n        let polies = [];\n        for (var i = 0; i < count; i++) {\n          for (var j = 0; j < count; j++) {\n              let lum = 10; //points[i][j];\n              let x = i;\n              let y = j;\n              let poly = pointsStar.map((points) => {\n                let col = \"hsl( \" + color[0] + \",\" + color[1] + \"% ,\" + (color[2]) + \"%  )\";\n                let classname = Math.round( getRandom( ) * 5 );\n                polies.push(`<polygon\n                  class='poligon poligon_${classname}'\n                  points=\"` + points.join(\" \") + `\" stroke=\"transparent\" fill=\"transparent\" \n                  style=\" strokeWidth: ` + (1 / scale) + `;\n                  fill: `+ col + `;\n                  opacity : `+ getRandom() + `; \n                  transform: scale(` + scale + `) translate( ` + x + `px, ` + y + `px)\" />`)\n\n              })\n            }\n          }\n\n        return \"<svg> \" + polies.join( \"\" ) + \"</svg>\"\n\n\n    }\n}\n\nvar test = (result) => {\n    \n}\n\ncu.brand = {\n    //test,\n\n    getLogo: function (seed, scale, count) {\n        let logo=  ub.get(seed,  count );\n        console.log( logo )\n        return logo;\n    },\n\n    getBrand : function ( uid ) {\n      return ub.getBrand( uid );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleBoard = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n\n    addItem : function ( obj ) {\n        let id = this.getId();\n        obj.id = id;\n        this.mergeItem( id, obj );\n        return id;\n    },\n\n    getId : function ( ) {\n        this.ctx.data.state.nextId++;\n\n        let id = \"bubble_\" + this.ctx.data.state.nextId;\n\n        return id;\n    },\n    mergeItem: function (id, value) {\n        let ctx = this.ctx;\n        let result = ctx.data.result[id];\n\n\n        ctx.changed = {};\n\n        this.appendTo(id, value)\n\n        let minStep;\n        let results = ctx.data.result;\n        let changed = ctx.changed;\n\n        console.log( ctx.data );\n        let versions = ctx.data.versions;\n\n        for ( var i in changed ) {\n            if ( !versions[i] ) versions[i] = 0;\n            versions[i]++;\n            let result = results[ i ];\n            if ( !result ) continue;\n            if ( !result.isReady ) continue;\n            if ( minStep == undefined ) minStep = result.completedAt;\n            if ( minStep > result.completedAt ) minStep = result.completedAt;\n        }\n\n        if (minStep !== undefined) {\n            this.rewindTo(minStep)\n        }\n\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( changed )\n        \n        return minStep;\n    },\n\n    rewindTo: function (step) {\n        let ctx = this.ctx;\n        for (var id in ctx.data.result) {\n            let result = ctx.data.result[id];\n            if (result.isReady && (result.completedAt >= step || result.createdAt > step)) {\n                result.isReady = false;\n                result.completedAt = 0;\n            }\n        }\n\n        ctx.data.step = step;\n    },\n\n    appendTo: function (id, values) {\n        let ctx = this.ctx;\n        let item = ctx.data.items[id];\n        let hasChanges = false;\n\n        if (!item) {\n            ctx.data.step++;\n            ctx.data.items[id] = item = {}\n            ctx.data.result[id] = { createdAt: ctx.data.step }\n            hasChanges = true;\n        }\n\n        for (var slot in values) {\n            let value = values[slot];\n            if ( value == \"REMOVE\" && item[slot] !== undefined ) {\n                delete item[slot];\n                hasChanges = true;\n                continue;\n            }\n            if ( value === null && item[slot] !== undefined ) {\n                delete item[slot]\n                hasChanges = true;\n                continue;\n\n            }\n\n            if ( !value ) continue;\n\n            let bubbleid = item[slot] ? item[slot].id : null;\n            if (_.isString(value) && value.charAt(0) == \"#\") {\n                value = {id : value.substring(1) };\n            }\n\n            if ( value.id !== undefined) {\n                if ( value.id == \"#\"  || value.id==\"\" ) value.id = null;\n                value.id = value.id || bubbleid || this.getId();\n                item[slot] = { id: value.id };\n            }\n\n\n            if (value.id && _.isObject(value)) {\n                if ( value.id != bubbleid ) hasChanges = true;\n                this.appendTo(value.id, value)\n            }\n\n            else if ( _.isObject( value ) && !_.isMatch(item[slot], value )) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n            else if ( item[slot]!=value) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n\n        }\n\n        if( hasChanges ) {\n            if ( item.version ) {\n                item.version = item.version ? item.version+1 : 1;\n            }\n            this.ctx.changed[ id ] =true;\n        }\n    },\n\n    evalItems: function (count) {\n        this.ctx.affected = {};\n        this._evalItems( count );\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( this.ctx.affected )\n        \n    },\n\n    _evalItems : function ( count ) {\n\n        if (count<=0) return;\n\n        let ctx = this.ctx;\n\n        let hasChanges = false;\n\n        for (var id in ctx.data.items) {\n            let item = ctx.data.items[id];\n            let result = ctx.data.result[id];\n\n            if (result && result.isReady) continue;\n            let values = this.isCompleteValues(item, id);\n            if (values) {\n                if (!ctx.data.result[id]) ctx.data.result[id] = {};\n\n                this.evalItem(item, id, values, ctx.data.result[id]);\n                if ( ctx.data.result[id].isReady )\n                    hasChanges = true;\n            }\n        }\n\n\n        if (hasChanges) this._evalItems(count - 1);\n    },\n\n    evalItem: function (item, id, values, result) {\n        let ctx = this.ctx;\n\n        result.isReady = true;\n        result.values = values;\n\n        let node = this.ctx.tb.getNode(item, values, result, ctx);\n        if ( node ) \n            result.node = node;\n\n        if ( result.isReady ) {\n            ctx.data.step++;\n            result.completedAt = ctx.data.step;\n            this.ctx.affected[ id ] = true;\n        }\n\n    },\n\n    isCompleteValues(item) {\n        //if (!this.ctx.tb.checkIfComplete(item)) return false;\n\n        let ctx = this.ctx;\n\n        let values = {};\n\n        let bellow = [];\n\n        for (var slot in item) {\n            let value = item[slot];\n            if (value.id) {\n                let bubble = ctx.data.result[value.id];\n\n                if (!bubble || !bubble.isReady) return false;\n\n                let node = bubble.node;\n\n                if ( item[slot+\"_path\"]) {\n                    node = _.get( node, item[slot+\"_path\"] )\n                }\n\n                values[slot] = node;\n            }\n            else values[slot] = value\n        }\n\n        return values;\n    },\n\n    init: function (ctx) {\n        let item = Object.create(this);\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data : {\n                items : {},\n                result : {},\n                step : 1,\n                versions : {},\n                trails : {},\n                rels : {\n                    bellow : {},\n                    above  : {},\n                    uses   : {}\n                },\n\n                state : {\n                    nextId : 8\n                }\n            },  \n            tb: {\n                checkIfComplete: (item) => item.type || item.tpl || item.node,\n                getNode: (item, values, result) => { return { val: values, x: item.tpl } }\n            }\n        })\n\n        ctx.master = item; \n        return item;\n    },\n\n    evaluateflow : function () {\n        this.evalItems(5);\n    },\n\n    getVersion : function ( id ) {\n        let item = this.ctx.data.items[ id ];\n\n        if ( !item ) return null;\n        return item.version;\n    }\n}\n\nvar test = (result) => {\n    let ctx = {\n        data: {\n            items: {},\n            result: {},\n            versions : {},\n            ants : {},\n            step: 1,\n        }\n    }\n\n    let nub = ub.init(ctx);\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salut\",\n        testval: \"#\"\n    })\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n    nub.evalItems(0);\n\n\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n\n\n    nub.evalItems(0);\n\n\n    result.ctx = ctx;\n}\n\ncu.bubbleFlow = {\n    //test,\n\n\n    run: function (ctx) {\n        return ub.init( ctx );\n    },\n    init: function () {\n\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\nvar fns = {}\n\nvar ub = {\n\n    ctx: {\n    },\n\n    doubleCheck: function (id) {\n        let tb = fns.evaluate.setup({ data: this.ctx.data, state: this.ctx.state }).target(id);\n\n        for (var i in checks)\n            tb.run(checks[i])\n    },\n\n    check: function (id) {\n        let item = this.ctx.data.items[id];\n        let result = this.ctx.data.result[id];\n        let shaddow = this.ctx.data.shaddow[id];\n\n        if (!shaddow)\n            shaddow = this.ctx.data.shaddow[id] = {}\n\n        let results = this.ctx.data.result;\n\n        let score = shaddow.score = {\n            subs: {\n                total: 0,\n                resolved: [],\n                unresolved: []\n            },\n        };\n\n        for (var slot in item) {\n            if (item[slot].id) {\n                score.subs.total++;\n\n                if (results[item[slot].id] && results[item[slot].id].isReady)\n                    score.subs.resolved.push({ slot: slot, id: item[slot].id });\n                else\n                    score.subs.unresolved.push({ slot: slot, id: item[slot].id });\n\n            }\n        }\n\n        if (result && result.values && result.values.tpl) {\n            let tpl = result.values.tpl;\n            score.tplParams = { total: 0, defined: 0, resolved: 0, unresolved: [] }\n            let parameters = tpl.mold.parameters;\n\n            for (var param in parameters) {\n                score.tplParams.total++;\n                if (result.values[param] || item[param]) {\n                    score.tplParams.defined++;\n                }\n                else {\n                    score.tplParams.unresolved.push(param)\n                }\n            }\n        }\n\n    },\n\n    setup: function (ctx) {\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data: {\n                items: {},\n                result: {},\n                shaddow: {},\n                trails: {}\n            }\n        })\n\n        return item;\n    }\n}\n\n\n\nfns.evaluate = {\n    target: function (id) {\n\n        let model = this.model || this;\n\n        var item = Object.create(model);\n\n        item.model = model;\n\n        item.setup();\n\n        item.v.targetId = id;\n\n        return item;\n    },\n    setup: function (opt) {\n        this._setup(opt);\n        return this;\n    },\n    _setup: function (opt) {\n        if (opt) Object.assign(this, opt)\n\n        if (this.model && this.model.shaft) {\n            this.shaft = {};\n        }\n\n        this.v = { result: {} };\n    },\n    get: function (key) {\n        if (!_.isString(key)) return key;\n        let id = this.v.targetId;\n\n        let fullPath;\n        if (key == \"values\")\n            fullPath = [\"result\", this.v.targetId, \"values\"]\n        if (key == \"item\")\n            fullPath = [\"items\", this.v.targetId]\n        else\n            fullPath = [key, \"id\"];\n        return _.get(this.data, fullPath)\n    },\n\n    getFull: function (route) {\n        let base = route[0];\n        let id = route[1];\n        let relPath = route[2];\n\n        if (!base) base = \"items\";\n        if (base == \"item\") base = \"items\";\n\n        if (!id) id = this.v.targetId;\n\n        let fullPath = [base, id]\n        if (relPath) fullPath.push(relPath);\n\n        return _.get(this.data, fullPath.join(\".\"))\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.v[i] = this.getFull(map[i])\n        }\n        return this;\n    },\n\n    it: function (collection, cb) {\n        collection = this.get(collection);\n\n        //let subTb = Object.create( this );\n        //subTb.v  = Object.create( this.v )\n\n        //prepare\n        let subTb = this;\n        let oldValues = {\n            slot: subTb.v.slot,\n            value: subTb.v.value,\n            info: subTb.v.info,\n            sub: subTb.v.sub\n        }\n        subTb.v.slot = null;\n        subTb.v.value = null;\n        subTb.v.info = null;\n        subTb.v.sub = null;\n        for (var i in collection) {\n            subTb.v.slot = i;\n            subTb.v.value = collection[i];\n            subTb.v.info = i;\n            subTb.v.sub = {};\n            cb(subTb, subTb.v)\n        }\n\n        //cleanup\n        for (var i in oldValues)\n            subTb[i] = oldValues[i]\n\n    },\n\n    run: function (cb) {\n        try {\n            let result = cb(this, this.v)\n        } catch (e) {\n            if (e && e.type == \"notApplicable\") {\n                return;\n            }\n            console.log(e)\n        }\n\n        if (this.v.result) {\n\n            if (!this.data.trails[this.v.targetId]) {\n                this.data.trails[this.v.targetId] = {};\n            }\n            Object.assign(this.data.trails[this.v.targetId], this.v.result)\n        }\n    },\n\n    result: function (name, value) {\n        this.v.result[name] = value;\n    },\n\n    check: function (paths) {\n        for (var i in paths) {\n            let path = paths[i];\n\n            if (path == \"isCurrentItem\") {\n                let stateCurrentId = this.state.currentItem.targetid;\n                if (!stateCurrentId || this.v.targetId != stateCurrentId)\n                    throw { type: \"notApplicable\", path: paths[i] }\n            }\n            else {\n                let value = _.get(this.v, paths[i]);\n                if (value === undefined) throw { type: \"notApplicable\", path: paths[i] }\n            }\n        }\n    }\n}\n\nfns.compile = Object.assign({}, fns.evaluate, {\n    setup: function (opt) {\n        this._setup(opt);\n\n        this.clues = {\n            needes: {},\n            provides: {},\n            collections: []\n        }\n\n        return this;\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.clues.needes[i] = { key: map[i] }\n            this.v[i] = { test: \"test\" }\n        }\n        return this;\n    },\n\n\n    check: function (check) {\n\n    },\n\n    result: function (name, value) {\n        this.clues.provides[name] = value;\n    },\n\n    it: function (collection, cb) {\n        this.clues.collections.push(collection)\n    },\n\n    run: function (cb) {\n        let result = cb(this, this.v);\n    }\n});\n\n\nvar checks = [\n\n    (tb, v) => {\n\n        tb.fetch({\n            item: [\"item\"]\n        })\n\n        v.score = {\n            total: 0,\n            resolved: [],\n            unresolved: []\n        }\n\n        tb.it(v.item, (tb, v) => {\n            let sub = v.value;\n            if (!sub.id) return;\n\n            v.score.total++;\n\n            let result = tb.getFull([\"result\", sub.id]);\n\n            if (!result || !result.isReady) v.score.unresolved.push(sub.id)\n            else v.score.resolved.push(sub.id)\n        })\n\n        tb.result(\"subScore\", v.score)\n        return { subScore: v.score }\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch({\n            values: [\"result\", \"\", \"values\"],\n            item: [\"item\"],\n            parameters: [\"result\", \"\", \"values.tpl.mold.parameters\"]\n        })\n\n        tb.check([\n            \"values.tpl\"\n        ])\n\n        v.score = { total: 0, defined: 0, undefined: [] }\n        v.params = {};\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n            v.score.total++;\n            if (!v.item[param] && !v.values[param])\n                v.score.undefined.push(param)\n        })\n\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n        })\n\n\n        v.score.undefinedCount = v.score.undefined.length;\n        v.score.definedCount = v.score.total - v.score.undefinedCount;\n\n        tb.result(\"tplParamsScore\", v.score);\n        tb.result(\"tplParams\", v.params)\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch(  {\n            trails : [\"trails\"],\n\n        })\n        tb.check([\n            \"isCurrentItem\"\n        ])\n\n        console.log(\"trails is currentItem\", v.trails);\n    }\n\n]\n\nvar test = (result) => {\n\n    ub.ctx.data = {\n        items: {\n            bubble1: {\n                slot1: \"salut\",\n                slot2: { id: \"bubble2\" }\n            },\n            bubble2: {\n                test: \"salut\"\n            }\n        },\n        result: {},\n        trails: {}\n    }\n\n    let tb = fns.evaluate.target(\"bubble1\");\n\n    tb.run(checks[0]);\n    tb.run(checks[1]);\n\n    result.tb = tb.v.result;\n    result.trails = ub.ctx.data.trails;\n}\n\ncu.bubbleGuns = {\n    //test,\n\n    setup: function (ctx) {\n        return ub.setup(ctx);\n    },\n    init: function () {\n\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n    ctx: {\n        tb: {\n\n            onchanged: function (changed) { },\n            getNode: function (item, values, result, ctx) {\n                return cu.bubbleTypes.dispatch.getNode(item, values, result, ctx)\n            }\n        },\n\n        data: {\n            state: {\n                nextId: 0\n            }\n        }\n    }\n}\n\n\nvar test = (result) => {\n    ub.ctx.data = { state: { nextId: 0 } };\n    ub.ctx.tb.guns = cu.bubbleGuns.setup(ub.ctx);\n    ub.ctx.tb.flow = cu.bubbleFlow.run(ub.ctx)\n\n    ub.ctx.tb.flow.mergeItem(\"item1\", {\n        id: \"item1\",\n        tpl: {\n            id: \"item2\",\n            type: \"tpl\",\n            main: \"<div style='border:1px solid #007abc'>{h1} {salut} {someothervalue}</div>\"\n        },\n        tpl_path: \"main\",\n        h1: \"noh\",\n        salut: {\n            id: \"item3\",\n            tpl: {\n                id: \"item4\",\n                type: \"tpl\",\n                main: \"<div style='border:1px solid #007abc'>{text}</div>\"\n            },\n            tpl_path: \"main\",\n            text: \"salutare\"\n        }\n    });\n\n\n    ub.ctx.tb.flow.mergeItem(\"item5\", {\n        id: \"item5\",\n        type: \"mirror\",\n        model: \"item1\",\n        data: {\n            id: \"item6\",\n            version: 1,\n            node: {\n                h1: \"hh1\",\n                salut: {\n                    text: \"hey\"\n                }\n            }\n        }\n    })\n\n\n\n    ub.ctx.tb.flow.evaluateflow();\n\n    ub.ctx.tb.flow.mergeItem(\"item6\", {\n        node: {\n            h1: \"hh11\",\n            salut: {\n                text: \"testchanged\"\n            }\n        }\n    })\n\n    ub.ctx.tb.flow.evaluateflow();\n\n\n    result.items = ub.ctx.data.items;\n    result.result = ub.ctx.data.result;\n    result.shaddow = ub.ctx.data.shaddow;\n    //result.item6_1 = ub.ctx.data.result.item5.mirror.node.children[0][0];\n    //result.item6_2 = ub.ctx.data.result.item5.mirror.node.children[0][2].children\n}\n\ncu.bubbleTest = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar type = {}\n\n\ntype.dispatch = {\n    getNode: function (item, values, result, ctx) {\n        let nodeType = values.type;\n        if (!nodeType) {\n            if (values.tpl) nodeType = \"reactNode\"\n\n            else if (values.node) nodeType = \"dataNode\"\n        }\n\n        if (nodeType && type[nodeType]) {\n            return type[nodeType].getNode(item, values, result, ctx)\n        }\n        else result.isReady = false;\n    }\n}\n\ntype.tpl = {\n    getNode: function (item, values, result, ctx) {\n        delete values.type;\n        let tpl = cu.tplObjParse.run(values);\n        result.viewAs = \"object\";\n        return tpl;\n    }\n}\n\ntype.dataNode = {\n    getNode: function (item, values, result, ctx) {\n        return item.node;\n    }\n}\n\ntype.reactNode = {\n    getNode: function (item, values, result, ctx) {\n\n        let tpl = values.tpl;\n        if (!tpl || !tpl.mold) {\n            result.isReady = false;\n            return;\n        }\n\n        let neededValues = [];\n        let node = cu.reactAssembler.run(tpl, values, (data, path, op) => {\n            let value = _.get(data, path);\n            if (value !== undefined) return value;\n            neededValues.push(path);\n            return \"dummyvalue\"\n        });\n\n        if (neededValues.length) {\n            node = [neededValues, node];\n        }\n        result.viewAs = \"reactComponent\"\n\n        result.cues = { pins: tpl.mold.pins }\n\n        return node;\n\n    }\n\n}\n\ntype.mirror = {\n\n    description: \"\",\n\n\n    getNode: function (item, values, result, ctx) {\n\n\n        let model = ctx.data.items[item.model];\n        let data = values.data;\n\n        let newItem = _.cloneDeep(model);\n\n        if (!result.bubbles) result.bubbles = {};\n        if (!result.cache) result.cache = { data: {} };\n\n        if (!_.isMatch(result.cache.data, data)) {\n            result.cache.data = data;\n\n            for (var i in newItem) {\n                if (i != \"tpl\" && newItem[i].id && data[i]) {\n                    if (result.bubbles[i]) {\n                        ctx.master.mergeItem(result.bubbles[i].id, { data: data[i] })\n                    }\n                }\n            }\n        }\n\n        for (var i in newItem) {\n            if (i != \"tpl\" && newItem[i].id && data[i]) {\n\n                if (result.bubbles[i]) {\n                    newItem[i] = { id: result.bubbles[i].id }\n                }\n                else {\n                    let newId = ctx.master.addItem({ type: \"mirror\", data: data[i], model: newItem[i].id })\n                    result.bubbles[i] = { id: newId, model: newItem[i].id };\n                }\n\n                newItem[i] = { id: result.bubbles[i].id }\n            }\n            else if (data[i]) {\n                newItem[i] = data[i]\n            }\n        }\n\n        newItem.id = item.id;\n\n        let newValues = ctx.master.isCompleteValues(newItem);\n\n        if (!newValues) {\n            result.isReady = false;\n            return;\n        }\n\n        result.mirror = {};\n        ctx.master.evalItem(item, item.id, newValues, result.mirror)\n        if (result.mirror.viewAs) result.viewAs = result.mirror.viewAs;\n        return result.mirror.node;\n    }\n}\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleTypes = {\n    //test,\n\n    mirror: type.mirrorBubble,\n\n    types: type,\n    dispatch: type.dispatch,\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar phase1 = {\n\n    run: function (html) {\n        html = html.trim();\n\n        let nest = document.createElement('div');\n        nest.innerHTML = html;\n\n        let specs = [];\n\n        for (var i = 0; i < nest.childNodes.length; i++) {\n            let el = nest.childNodes[i];\n\n            let spec = this._spec(el);\n\n            specs.push(spec);\n        }\n\n        return specs.length == 1 ? specs[0] : specs;\n    },\n\n\n    _spec: function (el) {\n\n        if (el.nodeType == 3) {\n            return el.nodeValue\n        }\n\n        let props = {};\n        for (var i = 0; i < el.attributes.length; i++) {\n            let attr = el.attributes[i];\n            let name = attr.name;\n            if (name.indexOf(\"_\") != -1) {\n                name = name.replace(/\\_(.)/g, (all, char) => { return char.toUpperCase() })\n            }\n            props[name] = attr.value;\n        }\n\n        if (props.class) {\n            props.className = props.class;\n            delete props.class;\n        }\n\n        if (props.style) {\n            props.style = this._style(props.style);\n        }\n\n\n        let spec = {\n          type: \"node\",\n          componentName: el.nodeName.toLowerCase(),\n          props: props,\n          children: null,\n      };\n\n        if ( props.htmlSlot ) {\n          props[ props.htmlSlot ] = el.innerHTML;\n          return spec;\n        }\n\n        if (Object.keys(props) == 0) props = null;\n\n        let children = []\n        el.childNodes.forEach(child => {\n            children.push(this._spec(child))\n        })\n        if (children.length == 0) children = null;\n        spec.children = children;\n\n        return spec;\n    },\n\n    _style: function (str) {\n        str = str + \";\";\n        let reg = /\\s*([^:\\s]+)\\s*\\:\\s*([^;]+)\\s*\\;+/g\n        let css = {};\n        let match;\n        while (match = reg.exec(str)) {\n            css[match[1]] = match[2]\n        }\n\n        return css;\n    },\n\n}\n\nvar phase2 = {\n    run: function (obj , attrs ) {\n      let payload = {\n        ops: [],\n        pins: {},\n        parameters : {},\n        attrs : {},\n        watchAttrs : attrs || []\n      }\n  \n      if ( _.isArray( obj ) )\n        payload.tpl = obj.map(( obj, i)  => this.iterate(obj, [i], payload) )\n      else \n        payload.tpl = this.iterate(obj, [], payload)\n\n      payload.ops.sort ( (a,b) => a.stage - b.stage )\n  \n      return { ops: payload.ops, tpl: payload.tpl, pins : payload.pins , parameters : payload.parameters, attrs : payload.attrs}\n    },\n    iterate: function (obj, path, payload) {\n      if (!obj) return;\n  \n      if (_.isString(obj)) {\n        return this.opValues(obj, path, payload, false);\n      }\n  \n      obj = this.handleObj(obj, path, payload);\n  \n      let childrenPath = path.concat([\"children\"])\n      for (var i in obj.children) {\n        obj.children[i] = this.iterate(obj.children[i], childrenPath.concat(i), payload)\n      }\n  \n      let subPath = path.concat([\"props\"])\n      for (var i in obj.props) {\n        if (i == \"style\") continue;\n        obj.props[i] = this.handleProp(obj.props[i], subPath.concat(i), obj, payload)\n      }\n  \n      if (obj.props && obj.props.style) {\n        let subPath = path.concat([\"props\", \"style\"])\n        for (var i in obj.props.style) {\n          obj.props.style[i] = this.handleProp(obj.props.style[i], subPath.concat(i), obj, payload)\n        }\n      }\n  \n      if (obj.props && obj.props.pin) {\n        payload.pins[ obj.props.pin ] = path;\n      }\n\n      if (obj.props && obj.props.id) {\n        payload.pins[ obj.props.id ] = path;\n      }\n\n      if ( obj.props )\n        payload.watchAttrs.forEach( attr => {\n            if ( !obj.props[attr] ) return ;\n            if ( !payload.attrs[attr] ) payload.attrs[ attr ] = [];\n            payload.attrs[ attr ].push({  path, value : obj.props[attr] } );\n        })\n  \n      return obj;\n    },\n  \n    handleObj: function (obj, path) {\n      return obj;\n    },\n  \n    handleProp: function (obj, path, parent, payload) {\n      if (!_.isString(obj)) return obj;\n  \n      return this.opValues(obj, path, payload, true)\n    },\n    addOp: function (payload, path, op) {\n\n        if ( !op.stage ) op.stage = 0;\n      payload.parameters[ op.action ] = op.path;\n      payload.ops.push(op)\n    },\n  \n    prepareAction: function (item) {\n      return item;\n    },\n    opValues: function (value, path, payload, concatOp) {\n      if (!_.isString(value)) return value;\n      if (value.indexOf(\"{\") == -1) return value;\n  \n      let ops = payload.ops;\n      let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}/g);\n      values = values.map((item, i) => {\n        if (item == \"\") return null\n        if (item.charAt(0) !== \"{\") return item;\n  \n        item = item.substring(1);\n        let action = this.prepareAction(item)\n        return { type: \"value\", action: action };\n      })\n        .filter(item => item)\n  \n  \n      if (values.length == 0) return null;\n      else if (values.length == 1) {\n        values = values[0];\n        if (values.type) {\n          values.path = path;\n        }\n        if ( _.isObject( values ))\n          this.addOp(payload, values.path, values)\n        return values;\n      }\n      else if (!concatOp) {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.stage = 0;\n            this.addOp(payload, path, item);\n  \n            return item;\n          }\n          else return item;\n        })\n        return values;\n      }\n      else {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.concatParent = true;\n            item.stage = 0;\n\n            this.addOp(payload, path, item);\n            return item;\n          }\n          else return item;\n        })\n        this.addOp(payload, path, { path: path, type: \"concat\", ops: values, stage : 1 });\n        return values;\n      }\n  \n    }\n  \n  }\n\n\nvar ub = {\n    run : function ( html , attrs ) {\n        var result = phase1.run( html );\n        result = phase2.run( result, attrs );\n\n        return result;\n    }\n}\n\nvar test = (result) => {\n    result.output = ub.run( \"<div>Salut {#test} </div>\");\n}\n\ncu.parseStringIntoComp = {    \n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n    def: `\n        @obj string \n        transform it into componentsObjects\n    `\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport js_beautify from \"js-beautify\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n\n    makestr : function ( obj, indent ) {\n        if ( _.isFunction( obj ) ) return obj.toString();\n        if ( _.isString( obj ) ) {\n \n            let usequouts = '\"';\n            if ( obj.indexOf( \"\\n\") != -1 ) usequouts = \"`\";\n            if ( obj.indexOf('\"') != -1 ) usequouts = \"`\";\n            \n            if (usequouts == \"`\") {\n                obj = js_beautify.html( obj, { \n                    indent_size : 2,\n                    indent_level : indent + 1,\n                    preserve_newlines : true,\n                    max_preserve_newlines : 0,\n                    indent_inner_html: true,\n                } )\n\n                obj = obj.trimStart();\n            }\n            return usequouts + obj + usequouts\n        }\n        if ( _.isArray(obj)) {\n            let lines = [];\n            for ( var i in obj ) {\n                let value = this.makestr( obj[i] , indent + 1);\n\n                lines.push( value)\n            }\n\n            return \"[\" + lines.join(\",\\n\") + \"]\";\n        }\n\n        if ( _.isObjectLike(obj)) {\n            let lines = [];\n            let multiLine = false;\n            for ( var i in obj ) {\n                let slot = i;\n                let value = this.makestr( obj[i], indent + 1 );\n\n                if ( !slot.match( /^[a-z0-9$_]+$/) ) slot = '\"' + slot + '\"'\n\n                if ( value.indexOf(\"\\n\") != -1 ) multiLine = false;\n                lines.push( slot + \":\" + value )\n            }\n\n            return \"{\" + lines.join(\",\") + \"}\"\n        }\n        \n        if ( _.isNil( obj )) return \"null\"\n\n        return obj.toString();\n    },\n\n    beautify : function ( str ) {\n        return js_beautify.js_beautify( str, {\n            indent_size :2 ,\n            indent_level : -1, \n            max_preserve_newlines : 1,\n            preserve_newlines : true\n        } )\n    }\n}\n\nvar test = (result) => {\n\n    var obj = {\n        tpl : `<div>s\nce mai faci <span>\nsdf</span>\n        alut</div>`,\n        fn : function ( ) {\n\n        },\n        \"#b ce mai faci\" : \"\",\n        x : {\n            \"test\" : \"salut\" \n        }\n    }\n\n    result.str = ub.makestr( obj ,10 )\n    result.beuaty = js_beautify.js_beautify( result.str, {\n        indent_size :2 ,\n        indent_level : -1, \n        max_preserve_newlines : 1,\n        preserve_newlines : true\n    } )\n}\n\ncu.prettyScode = {\n    //test,\n\n    run: function (name) {\n        let str =  ub.makestr(name, 1)\n        return ub.beautify( str );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {}\n    },\n\n    run: function (model, data, getter ) {\n        model = _.cloneDeep( model );\n        let obj = model.mold.tpl;\n\n        this.applyOps( model.mold.ops, obj , data,  getter );\n\n\n        if ( obj.props ) \n            obj.props.tplid = model.uid;\n        \n\n        return obj;\n    },\n\n    applyOps : function ( ops, obj, data, getter ) {\n        let get = getter || _.get;\n\n        let newOps = [];\n        for (var i = 0; i < ops.length; i++) {\n\n            let op = ops[i];\n\n            if (op.type == \"value\") {\n                let value = get(data, op.action, op, newOps);\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"computedValue\") {\n                let value = op.value;\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"concat\") {\n                let value = get(obj, op.path, op, newOps).join(\"\");\n                _.set(obj, op.path, value)\n            }\n        }\n\n        if ( newOps.length ) \n            this.applyOps( newOps, obj, data, getter )\n    },\n\n\n}\n\n\nvar inputs = {\n    data: {\n        \"#color\": 12,\n        \"#handle\": \"handle\",\n        \"#test2\": \"test2\",\n        \"#test1\": \"test1\",\n        \"#title\": \"title it is\",\n    }\n}\n\nvar test = (result) => {\n\n    let mold = cu.tests.get(\"mold.x\");\n\n    if (!mold) return \"pending\";\n\n    let value = ub.run(mold, inputs.data);\n\n    result.value = value;\n    result.mold = mold;\n\n    cu.tests.pin( \"reactTree\", value)\n\n    //result.mold = value;\n}\n\ncu.reactAssembler = {\n    //test,\n\n    run: function (mold, data, getter) {\n        return ub.run(mold, data, getter)\n    },\n\n    init: function () {\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\n\nclass MyInput extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        value : \"\"\n      }\n\n      this.onChange = this.onChange.bind( this );\n    }\n\n    onChange ( evt ) {\n      this.setState( {value : evt.target.value});\n\n      if ( this.props.onChange ) this.props.onChange( evt );\n    }\n  \n\n    componentWillReceiveProps(nextProps) {\n      if ( nextProps.value!==undefined && nextProps.value.text!==undefined) this.setState({value : nextProps.value.text})\n    }\n\n    render () {\n\n      let props = Object.assign({}, this.props, {value : this.state.value, onChange : this.onChange })\n      \n      return React.createElement(\"input\", props, null);\n    }\n  }\n\n  export default MyInput;","import _ from \"lodash\"\nimport faker from \"faker\"\nimport React, { Component } from 'react';\nimport MyInput from \"../../components/MyInput\"\nvar cu = window.cu;\n\n\nvar customComponents = {\n  myinput : MyInput\n}\n\n\nvar ub = {\n\n    makeComponent : function (obj, i ) {\n        if (!obj) return null;\n        if (_.isString(obj)) return obj;\n        if (_.isArray(obj)) return obj.map((obj, i) => this.makeComponent(obj, i))\n        if ( !obj.componentName) return null;\n    \n        let children = null;\n        if (obj.children) children = obj.children.map((obj, i) => this.makeComponent(obj, i));\n    \n        let props = null;\n        if (obj.props) props = _.cloneDeep(obj.props);\n    \n        if (props && !props.key) props.key = i;\n        if (!props) props = { key: i }\n    \n        if (obj.componentName == \"style\") {\n          children = [_.flattenDeep(children).join(\"\")]\n        }\n    \n        let component = obj.componentName;\n        if (customComponents[component]) component = customComponents[component];\n    \n        var node;\n        try {\n          node = React.createElement(component, props, children)\n        } catch (e) {\n          console.error(e)\n          node = \"error\"\n        }\n        return node;\n        },\n\n}\n\nvar test = (result) => {\n}\n\ncu.reactUtils = {\n    //test,\n\n    makeComponent: function (tplComponent) {\n        return ub.makeComponent(tplComponent, 1)\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport $ from \"jquery\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    createStore : function ( tb, hapi, fns  ) {\n        if ( tb.cache.store ) return tb.cache.store;\n\n        let tpls = {\n          changeValueTpl : ( path ) =>  {\n            return function ( evt ) {\n              let value = evt.target.value;\n              hapi.set( path, value )\n            }\n          }, \n          runActionTpl : ( action ) => {\n            return function ( evt ) {\n              if ( hapi[action] ) return hapi[action]( evt );\n            }\n          },\n          runWithActionTpl : ( action ) => {\n            return function ( evt ) {\n                let target = evt.target;\n                let attr = $(target).attr( action[1])\n                if ( attr === undefined ) {\n                    target = $(target).parents(\"[\" + action[1] + \"]\")\n                    attr = $(target[0]).attr( action[1])\n\n                }\n\n              if ( hapi[action[0]] ) return hapi[action[0]]( attr, evt );\n            }\n          }\n\n        }\n\n\n        let store = {}\n  \n        for ( var i in fns.change ) {\n          store[i]  = tpls.changeValueTpl( fns.change[ i ])\n        }\n  \n  \n        for ( var i in fns.run ) {\n            store[i]  = tpls.runActionTpl( fns.run[ i ])\n          }\n\n          \n            \n        for ( var i in fns.runWith ) {\n            store[i]  = tpls.runWithActionTpl( fns.runWith[ i ])\n          }\n  \n        tb.cache.store = store;\n        return store;\n      }\n\n}\n\nvar test = (result) => {\n}\n\ncu.store = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    get : function ( tb, hapi,  fns ) {\n        return ub.createStore( tb, hapi, fns )\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            data: {\n\n                items: {},\n                subs: {},\n            },\n\n            src: {\n                getItem: function (id) {\n\n                },\n\n                getSubs: function (id) {\n\n                }\n            },\n\n            tpls: [],\n            registerTpl: function (args, master) {\n                this.tpls.push(args.path);\n            },\n\n            cases: [\n                result => {\n                    let isApplicable = !result.obj.item;\n\n                    if (!isApplicable) return;\n\n                    let id = result.obj.id;\n                    let item = ub.ctx.payload.data.items[id]\n\n                    if (!item) {\n                        item = {\n                            text: faker.company.catchPhrase(),\n                            id: id\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"items\", id], _.cloneDeep(item) )\n                    }\n\n\n                    result.obj.item = item;\n                    return \"applied\";\n                },\n\n                result => {\n                    let isApplicable = !result.obj.subs && result.obj.item && result.obj.level < 4;\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let id = result.obj.id;\n\n                    let subs = ub.ctx.payload.data.subs[id];\n\n                    if (!subs && !ub.ctx.payload.generated) {\n                        subs = {};\n\n                        let count = 4;\n                        for (var i = 0; i < count; i++) {\n                            let id = faker.random.uuid();\n                            let tpl = null;\n                            if (obj.level == 1) tpl = faker.random.arrayElement([null, \"columns\"]);\n                            let sub = {\n                                id: id,\n                                level: result.obj.level + 1,\n                                tpl: tpl\n                            }\n\n                            subs[id] = sub;\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"subs\", id], _.cloneDeep( subs ) )\n\n                    }\n\n                    if ( !subs ) subs = {}\n\n                    result.obj.subs = subs;\n                    result.subs = subs;\n\n                    return \"applied\";\n                }\n            ]\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run: function (obj, attrs) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs || [];\n\n        let mold = this.it(obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar inputs = {\n    items: { level: 0 },\n    subs: {},\n}\nvar test = (result) => {\n    let value = ub.run(inputs.items);\n\n    result.x = value;\n\n\n    cu.tests.pin(\"testRepo\", value)\n    //result.mold = value;\n}\n\ncu.testDataGenerator = {\n    //test,\n\n    run: function (id, data, generated,  setter) {\n\n        ub.ctx.payload.data = data;\n        ub.ctx.payload.setter = setter;\n        ub.ctx.payload.generated = generated;\n\n        return ub.run({ id: id || \"root\", level: 0 }, [])\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb : {}\n    },\n\n    run : function ( str ) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run( mold , [\"comp\"] );\n\n        return mold;\n    },\n\n\n}\n\n\nvar inputs = {\n    tplTree : {\n        x : `<div> <div id='title' comp='salut' class='{#test1} {#test2}' style='color : {#color}'> {#handle} : {#title}\n        \n        \n            <style>\n                @input \n                .column  { x : 12; background : {styleforred}red;}\n            </style>\n        </div> `\n    }\n}\nvar test = (result) => {\n    let value = ub.run( inputs.tplTree);\n\n    result.x = value.x.mold;\n\n    cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n}\n\ncu.testMolds = {\n    //test,\n\n    run: function (obj) {\n        return ub.run(obj, [])\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport $ from \"jquery\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n\n        wallet: {}\n    },\n\n    run: function (str) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run(mold, [\"comp\"]);\n\n        return mold;\n    },\n\n    parseTpl: function (obj) {\n        let mold = this.ctx.tb.parser.run(obj, [\"comp\"]);\n        return mold;\n    },\n\n    renderTpl: function (mold, data, getter) {\n        return this.ctx.tb.reactAssembler.run(mold, data, getter)\n    },\n\n    assembleTpl: function (mold, data) {\n        if (_.isString(mold)) mold = _.get(this.ctx.payload.molds, mold);\n        return this.ctx.tb.reactAssembler.run(mold, data, (data, path) => {\n            let value = _.get( data, path );\n            if ( value.node ) return value.node;\n            return value;\n        })\n    },\n\n\n    iterateBubbles: function (bubbles, count ) {\n        if ( count == undefined ) count = 0;\n\n        if ( count && count > 5 ) return;\n\n        bubbles = bubbles || this.ctx.payload.bubbles;\n\n        let changed = false;\n        for (var i = 0; i< bubbles.length; i++ ) {\n            let bubble = bubbles[i];\n\n            if ( bubble.isReady ) continue;\n\n\n            let shouldAssemble = true;\n\n            for (var j in bubble) {\n                if (bubble[j].tpl) {\n                    if ( !bubble[j].isRegistered ) {\n                        bubble[j].isRegistered = true;\n                        this.addBubble( bubble[j] )\n                    }\n                    if (!bubble[j].isReady) {\n                        shouldAssemble = false;\n                        continue;\n                    }\n                }\n            }\n\n            if (shouldAssemble) {\n                let node = ub.assembleTpl(bubble.tpl, bubble);\n                bubble.node = node;\n                bubble.isReady = true;\n                bubble.computedAtStep = this.ctx.payload.step++;\n                changed = true;\n            }\n        }\n        if ( changed)\n            this.iterateBubbles( bubbles, count+1)\n\n    },\n\n    addBubble: function (bubble) {\n        bubble.uid = cu.uids.run(\"bubble\");\n        bubble.addedAtStep = this.ctx.payload.step;\n        this.ctx.payload.bubbles.push(bubble);\n        //this.iterateBubbles();\n    },\n\n    start: function (molds) {\n        this.ctx.payload = {\n            bubbles: [],\n            molds: molds,\n            step : 0,\n        }\n    }\n\n}\n\n\nvar inputs = {\n    tplTree: {\n        x: `\n            <div><input id='order' syncwith={value} />\n            {value} \n            <div id='menu'> </div>\n            <div id='bar'> </div>\n            <div id='window' > {content}</div>\n            </div>\n        `,\n        y: \"salut {#test} salutare din alt template \"\n    }\n}\nvar test = (result) => {\n\n    ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n    ub.addBubble({\n        tpl: \"x\", \n        value : \"salutare\", \n        value_setter : () => { console.log( \"setting\")},\n        content : {\n            tpl : \"y\",\n            \"#test\" : \"yo\"\n        }\n    })\n\n    ub.iterateBubbles();\n\n    result.bubbles = ub.ctx.payload;\n    //cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n    //return nodes;\n}\n\nlet data = window.salut = { value: \"elefant\" }\ncu.testTplAssembing = {\n    //test,\n\n    run: function () {\n        ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n        ub.addBubble({\n            tpl: \"x\", \n            value : \"salutare\", \n            value_setter : () => { console.log( \"setting\")},\n            content : {\n                tpl : \"y\",\n                \"#test\" : \"yo\"\n            }\n        })\n    \n        ub.iterateBubbles();\n    \n        //result.bubbles = ub.ctx.payload;\n        return ub.ctx.payload.bubbles[0].node;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            tpls: {},\n            registerTpl: function (args, result,  master) {\n\n                result.obj.uid = cu.uids.run();\n\n                if ( result.obj.mold.props ) result.obj.mold.props.tplId = result.obj.uid;\n                //this.tpls.push(args.path);\n\n                this.tpls[ args.path.join(\".\") ] = result.obj.uid;\n            }\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: obj,\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.sub) {\n            let ret = this.it(result.sub[i], path.concat(i));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n        let checks = {\n            isString: result => result.obj && result.obj.trim,\n            isUnparsedTpl: result => result.obj && result.obj.html && !result.obj.mold,\n            isList: result => true\n        }\n\n        let cases = {\n            \"isString\": (result) => {\n                result.values = result.obj = { html: result.obj };\n                result.sub = [];\n                return \"applied\";\n            },\n            \"isUnparsedTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseHtml.run( result.obj.html, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n        }\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _check = checks[i];\n                if (!_check(result)) continue;\n\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op, result, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.values;\n    }\n}\n\nvar test = (result) => {\n    let value = ub.run({ x: `\n        <div pin = \"test\" > \n        <input id=\"dalut\" test=\"{salut}\" />\n            <div> \n                    <div xid='x{#tes}'> \n                    </div>\n            </div>\n\n        </div>\n    `, y: { a: { b: `\n    \n        <div id='yo'> Salutare </div>\n    ` } } }, []);\n    //value = ub.it(value, []);\n\n    result.mold = value;\n}\n\ncu.tplObjParse = {\n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parseHtml = cu.parseStringIntoComp;\n    },\n    \n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n        payload1: {\n            tplsMapping: [\n                \"map\",\n                \"topic\",\n                \"item\",\n                \"entry\"\n            ],\n            defaultTpl: \"item\",\n            usedGlobalStyles: {},\n\n\n            addSubs: function (args, result, master) {\n                result.obj.subs = result.values;\n                //console.log( arguments );\n\n                let obj = result.obj;\n                let content = [];\n                for (var i in result.values) {\n                    let item = result.values[i];\n                    if (item.nodes && item.nodes.card)\n                        content.push(item.nodes.card)\n                }\n\n                if (content) {\n                    result.obj.nodes.content = master.ctx.payload.useTemplate(obj.tpl + \".content\", { subs: content });\n                }\n\n                let data = result.obj.nodes;\n                result.obj.nodes.card = master.ctx.payload.useTemplate(obj.tpl + \".card\", data)\n\n            },\n\n            useTemplate: function (tpl, data, skipGlobalStyle) {\n\n                if (!skipGlobalStyle) {\n                    let route = tpl.split(\".\");\n                    let root = ub.ctx.wallet.molds;\n\n                    for (var i = 0; i < route.length; i++) {\n                        let step = route[i];\n                        if (root[step].globalStyle) {\n                            let id = root[step].globalStyle.uid;\n                            this.usedGlobalStyles[id] = { parent: root[step] };\n                        }\n                        if (root[step])\n                            root = root[step];\n                        else break;\n                    }\n                }\n\n                let mold = _.get(ub.ctx.wallet.molds, tpl); // .item.title;\n                return ub.ctx.tb.reactAssembler.run(mold, data)\n            },\n            cases: [\n                (result, master) => {\n\n                    let isApplicable = !result.obj.data\n                    if (!isApplicable) return;\n\n                    let tpls = master.ctx.payload.tplsMapping;\n\n                    let defaultTpl = tpls[result.obj.level] || master.ctx.payload.defaultTpl;\n\n\n                    let obj = {\n                        tpl: result.obj.tpl || defaultTpl,\n                        data: result.obj.item,\n                        level: result.obj.level,\n                        nodes: {}\n                    }\n\n                    result.subs = result.obj.subs;\n                    result.obj = obj;\n                    result.ops.push({ name: \"addSubs\", args: \"subs\" })\n\n                    return \"applied\"\n                },\n\n                (result, master) => {\n                    let isApplicable = !result.obj.nodes.title\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let mold = ub.ctx.wallet.molds.item.title;\n                    let values = {\n                        title: result.obj.data.text,\n                        level: result.obj.level\n                    }\n\n                    result.obj.nodes.title = master.ctx.payload.useTemplate(obj.tpl + \".title\", values);\n\n                    return \"applied\"\n                },\n\n\n            ]\n\n        },\n\n    },\n\n    getMolds: function (tpls) {\n        let molds = this.ctx.tb.parser.run(tpls);\n        return molds;\n    },\n\n\n    buildTpls: function (data) {\n        let node = this.ctx.tb.iterator.run(data, { payload: this.ctx.payload1 });\n        return node;\n    },\n\n    addGlobalStyles: function (nodes, gbs) {\n        let styles = [];\n        gbs = gbs || this.ctx.payload1.usedGlobalStyles\n\n\n        var parent;\n\n        let makeSelector = (path) => \"[tplid='\" + parent[path].uid + \"']\";\n\n        let getter = (data, path) => {\n            if (parent[path]) {\n                return makeSelector(path)\n            }\n            else if (path == \"*\")\n\n                return Object.keys(parent).filter(item => item != \"globalStyle\").map(item => makeSelector(item)).join(\",\")\n\n            return _.get(data, path)\n        }\n\n        let data = { color: \"red\" }\n        for (var i in gbs) {\n            parent = gbs[i].parent;\n            let style = ub.ctx.tb.reactAssembler.run(parent.globalStyle, data, getter)\n            styles.push(style)\n        }\n\n        if (styles.length) {\n            nodes = [nodes, styles];\n        }\n        return nodes;\n    }\n}\n\nvar input = {\n    tpls: {\n        map: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div>{subs}</div>\",\n            card: \"<div class='map'>{title} {content} </div>\",\n            style: `\n\n            `\n        },\n        topic: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='topic'>{title} {content} </div>\"\n        },\n        item: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='item'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n        entry: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\"\n        },\n\n        summart: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>summary</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n\n        columns: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='columns'>{title} {content} </div>\",\n            globalStyle: `<style htmlSlot='content'>\n               {content} { display : flex; background : hsla(100, 50%, 70%, 0.4)}\n               {content}>* { flex-basis : 100px; padding :0px 10px; border-left : 1px solid red; }\n         \n            </style>`\n        },\n    }\n}\n\nvar test = (result) => {\n    let wallet = {\n        molds: ub.getMolds(input.tpls),\n        repo: cu.tests.get(\"testRepo\"),\n    }\n\n    ub.ctx.wallet = wallet;\n\n    wallet.tpls = ub.buildTpls(wallet.repo);\n\n    let card = wallet.tpls.nodes.card;\n    card = ub.addGlobalStyles(card)\n    cu.tests.pin(\"testRoot\", card)\n    Object.assign(result, wallet)\n}\n\ncu.treeCardsBuilder = {\n    //test,\n\n    run: function (obj) {\n\n        let wallet = ub.ctx.wallet = {\n            molds : obj.molds,\n            repo  : obj.data\n        };\n\n        Object.assign(ub.ctx.payload1, {\n            tplsMapping: obj.mappings.tplsMapping,\n            defaultTpl: obj.mappings.defaultTpl, \n            usedGlobalStyles: {},\n        });\n\n        wallet.tpls = ub.buildTpls(wallet.repo);\n\n        let card = wallet.tpls.nodes.card;\n        card = ub.addGlobalStyles(card)\n\n        return card;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n        ub.ctx.tb.iterator = cu.treeIterator;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result, this);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, result,  this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar test = (result) => {\n}\n\ncu.treeIterator = {\n    //test,\n\n    run: function (obj, ctx ) {\n        let mub = Object.create( ub )\n        mub.ctx = ctx;\n        if ( !ctx.payload ) ctx.payload = { cases : [] }\n        return mub.run(obj, [])\n    },\n\n    init : function ( ) {\n        //ub.ctx.tb.parser = cu.tplObjParse;\n        //ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n}\n\nvar test = (result) => {\n}\n\ncu.uids = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\nfor (var i in cu) {\n    if (cu[i].init) cu[i].init();\n}\n\n\n\ncu.tests = {\n    wallet: {\n        test: {},\n        pins: {},\n        pending: []\n    },\n    pin: function (name, value) {\n        this.wallet.pins[name] = value;\n    },\n    get: function (name) {\n        let value = _.get(this.wallet.pins, name);\n        if (!value) value = _.get(this.wallet.test, name);\n        return value;\n    }\n}\n\n\nfor (var i in cu) {\n    if (cu[i].test) {\n        cu.tests.wallet.pending.push(i);\n\n    }\n}\n\n\nlet passes = 0;\nwhile (passes < 5 && cu.tests.wallet.pending.length) {\n    let i = cu.tests.wallet.pending.shift();\n    passes++;\n    let result = {};\n    let ret;\n    try {\n        ret = cu[i].test(result);\n    } catch (e) {\n        console.log(\"error when running \", i, e)\n    }\n\n    if (ret == \"pending\") {\n        cu.tests.wallet.pending.push(i)\n        continue;\n    }\n    console.group(\"test for \", i)\n\n    cu.tests.wallet.test[i] = result;\n\n    if (ret) console.log(ret)\n    if (Object.keys(result)) {\n        for (var i in result) console.log(i, result[i])\n    }\n    console.groupEnd();\n}\n\nif (cu.tests.wallet.pending.length)\n    console.error(\"error with tests : \")\n\n\n","\nimport cu from './main.js';\nimport './units/brand.js';\nimport './units/bubbleBoard.js';\nimport './units/bubbleFlow.js';\nimport './units/bubbleGuns.js';\nimport './units/bubbleTest.js';\nimport './units/bubbleTypes.js';\nimport './units/db.js';\nimport './units/parseStringIntoComp.js';\nimport './units/prettyScode.js';\nimport './units/reactAssembler.js';\nimport './units/reactUtils.js';\nimport './units/store.js';\nimport './units/testDataGenerator.js';\nimport './units/testMolds.js';\nimport './units/testTplAssembling.js';\nimport './units/tplObjParse.js';\nimport './units/treeCardsBuilder.js';\nimport './units/treeIterator.js';\nimport './units/uids.js';\nimport './init.js';\nexport default cu;\n   ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager\";\nimport KeyboardManager from \"./managers/KeyboardManager\"\nimport StaticManager from \"./managers/StaticManager\"\nimport { TimerManager as TimerManagerBuilder } from \"./managers/TimerManager\"\nimport PouchDB from \"pouchdb\"\nimport js_beautify from \"js-beautify\"\nimport { fchown, link, fstat } from 'fs';\nimport { debug } from 'util';\nimport faker from 'faker'\nimport { timingSafeEqual } from 'crypto';\nimport cu from \"./units/\"\nimport { delay } from 'q';\n\nvar fns = window.fns = {}\n\nvar ctxpins = window.ctxpins = {};\n\nvar customComponents = {\n  codemirror: CodeMirrorEditor\n}\n\nvar DataManager = window.DataManager;\nDataManager.newAPI = true;\n\nvar TimerManager = TimerManagerBuilder.init(DataManager);\n\n//--------------------\nwindow.$ = $;\n\nvar pinedTasks = `\n`\n\nvar hapi = {\n  showhud: function () {\n    let currentView = DataManager.getValue(\"workingant.viewState.path\");\n\n    console.log(currentView);\n    currentView = currentView == \"antView.map.nodes\" ? \"bridge\" : \"map\"\n\n    this.goToCard(currentView);\n\n    //DataManager.set(\"workingant.viewState.path\", currentView);\n  },\n  placeorder: function (evt) {\n    if (evt.which !== 13) return;\n\n    flow.place();\n    DataManager.set(\"workingant.data.input\", { text: \"\" })\n    flow.restart();\n  },\n  set: function (path, value) {\n    DataManager.set(path, value)\n  },\n  parseinput: function () {\n    let text = DataManager.getValue(\"workingant.data.input\");\n    if (_.isString(text))\n      flow.parse(text)\n  },\n\n  select: function (id) {\n    console.log( \"selecting\", id )\n    flow.change({ parent: id })\n    DataManager.set(\"repo.uistate.selected\", id)\n\n    $(\"#order\").focus();\n  },\n\n  goToCard: function (id) {\n    var cards = {\n      bridge: \"antView.bridge.nodes\",\n      map: \"antView.map.nodes\"\n    }\n\n    let path = cards[id];\n\n    if (id == \"bridge\") {\n      myUB.bridgeLoader.loadBridge();\n    }\n\n    DataManager.set(\"workingant.viewState.path\", path);\n\n  },\n\n  selectMap: function (id) {\n    console.log(\"selecting map\", id);\n    myUB.mapview.loadMap(id)\n    this.goToCard(\"map\");\n  },\n}\n\nDataManager.setTrigger(\"workingant.data.input\", \"ada\", {\n  run: hapi.parseinput\n})\n\n\nDataManager.setCombined(\"ub.flow\", {\n  start: function () {\n    this.wallet = {\n      step: { createdAt: new Date().getTime() },\n    }\n  },\n\n  parse: function (input) {\n    var result = input.match(/^(\\.[^\\s]+\\s+)*/)\n    var text = input.substr(result[0].length)\n    var dirs = result[0].trim().split(\" \");\n\n    if (!this.wallet.step.editStartedAt) this.wallet.step.firstCharAt = new Date().getTime();\n\n    this.wallet.step.text = text;\n  },\n\n  place: function () {\n    let ant = {\n      text: this.wallet.text,\n      id: myUB.antsDbState.getId(),\n      times: {\n        createdAt: this.wallet.step.createdAt,\n        firstCharAt: this.wallet.step.firstCharAt,\n        addedAt: new Date().getTime()\n      }\n    };\n\n    let parent = this.getParent();\n\n\n\n  }\n\n})\n\nvar flow = {\n\n  start: function () {\n    this.wallet = {\n      step: {},\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  restart: function () {\n    let prevStep = this.wallet.step;\n    this.wallet = {\n      step: {\n        parent: prevStep.parent\n      },\n      startedAt: new Date().getTime(),\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  parse: function (text) {\n    this.wallet.parser.parse(this.wallet, text)\n  },\n\n  change: function (values) {\n    this.wallet.actions.change(this.wallet, values)\n  },\n\n  place: function () {\n    this.wallet.actions.place(this.wallet)\n  },\n\n  parser: {\n    parse: function (wallet, text) {\n      wallet.actions.change(wallet, { text: text, x: text.substr(1) })\n    }\n  },\n\n  main: {\n    place: function (wallet) {\n      if (wallet.step.text == \"destroy\") {\n        myUB.db.destroy();\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".m\") == 0) {\n        let id = this.createMap(wallet.step.text.substr(2).trim());\n        hapi.selectMap(id);\n        return;\n      }\n      else if ( wallet.step.text.indexOf(\".t\") == 0 ) {\n        let text = wallet.step.text.substr( 2 ).trim();\n        let root = DataManager.getWallet(\"repo.root\");\n        let parent = root.id;\n\n        wallet.step.text = text;\n        wallet.step.parent = parent;\n        wallet.step.selectItem = true;\n      }\n\n      this.add(wallet)\n    },\n    change: function (wallet, values) {\n      _.merge(wallet.step, values)\n    },\n\n    createMap: function (name) {\n      let ant = {\n        id: myUB.antsDbState.getId(),\n        text: name,\n        startedAt: myUB.antsDbState.getTime(),\n        type: \"map\",\n\n        rels: {\n          sub: {},\n          allSubs: {}\n        }\n      }\n\n      myUB.mapview.mergeItem(ant.id, ant);\n      DataManager.set(\"repo.items.\" + ant.id, ant);\n\n      return ant.id;\n    },\n    add: function (wallet) {\n\n      let parent = wallet.step.parent;\n      if (!parent) {\n        let root = DataManager.getWallet(\"repo.root\");\n        parent = root.id;\n      }\n\n      let state = DataManager.getWallet(\"repo.state\");\n      state.nextId++;\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: wallet.step.text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime()\n      }\n\n\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeRoot(_.set({}, \"rels.sub.\" + parent + \".\" + id, { id: id, parent: parent }))\n      myUB.mapview.mergeRoot(_.set({}, \"rels.allSubs.\" + id, { id: id, parent: parent }))\n      //DataManager.markChangeOn(\"repo\")\n      //DataManager.markChangeOn(\"repo.items\")\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.sub.\" + parent + \".\" + id, { id: id, parent: parent })\n      DataManager.set(\"repo.root.rels.allSubs.\" + id, { id: id, parent: parent })\n\n      if ( wallet.step.selectItem ) {\n        hapi.select( id );\n      }\n    }\n  }\n}\nflow.start();\n\n\nlet myUB = window.myUB = {};\n\nDataManager.setCombined(\"fnsub\", {\n  loader: {\n    get: function () {\n\n      let fns = myUB;\n\n      if (!fns.fnsub || !fns.fnsub.isReady) {\n        this.make(fns, \"fnsub\", \"ub.fnsub\", {\n          old: fns.fnsub\n        })\n\n        this.setupAll(fns);\n      }\n\n      fns.fnsub.makeUb(\"mapview\", \"ub.mapView\", {\n        \"tb.db\": \"db\",\n        \"state\": \"antsDbState\",\n      })\n\n      fns.fnsub.makeUb(\"antsDbState\", \"ub.antsDbState\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"bridgeLoader\", \"ub.loaders.bridge\", {\n        \"tb.db\": \"db\"\n      })\n\n      fns.fnsub.makeUb(\"db\", \"ub.db\", {})\n\n      fns.fnsub.setupAll();\n\n    },\n\n    setupAll: function (fns) {\n      for (var i in fns) {\n        if (fns[i].goSetup)\n          this.setup(fns, fns[i])\n      }\n\n      return true;\n    },\n\n    make: function (fns, name, path, extra) {\n      let obj = Object.create(DataManager.getValue(path));\n      obj.goSetup = true;\n      obj.extra = extra;\n      obj.uid = cu.uids.run();\n\n      if (fns[name]) _.merge(fns[name], obj)\n      else\n        fns[name] = obj;\n    },\n\n    setup: function (fns, obj) {\n      delete obj.goSetup;\n\n      let values = {};\n      for (var i in obj.extra) {\n        let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n        if (!target) {\n          target = {};\n          _.set(fns, obj.extra[i], target)\n        }\n        _.set(values, i, target)\n      }\n\n      if (obj.setup)\n        obj.setup(values);\n\n      obj.isReady = true;\n    },\n\n    autostart: true\n\n  }\n})\n\nmyUB.fnsub = {\n  subs: [],\n  waiting: {},\n  makeUb: function (a, b, c) {\n    this.subs.push([a, b, c])\n  },\n  onready: function (sub) {\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n}\n\n\nDataManager.setCombined(\"ub.antsDbState\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      state: {\n        prefix: \"ants\",\n        id: \"antsDbState\",\n        nextId: 1\n      }\n    };\n\n    myUB.fnsub.onready(this.tb.db)\n      .then(() => {\n        return this.tb.db.loadItems([\"antsDbState\"])\n      })\n      .catch(() => {\n      })\n      .then((state) => {\n        console.log(\"state\", state)\n        if (!state[0]) {\n          console.log(\"state\", this.wallet.state)\n\n          this.tb.db.saveItems(this.uid, [this.wallet.state])\n        }\n        else {\n          console.log(\"state\", state[0])\n          this.wallet.state = state[0];\n          this.isReady = true;\n        }\n      })\n  },\n\n  getId: function () {\n    this.wallet.state.nextId++;\n    this.tb.db.request_save(this.uid, [this.wallet.state], 100)\n    return \"ant_\" + this.wallet.state.nextId;\n  },\n\n  getTime: function () {\n    return new Date().getTime();\n  }\n})\n\nDataManager.setCombined(\"ub.fnsub\", {\n  setup: function (opts) {\n\n    _.merge(this, opts)\n\n    this.fns = myUB;\n\n    this.waiting = this.waiting || {};\n\n    if (this.old.subs) {\n      for (var i in this.old.subs) {\n        let sub = this.old.subs[i];\n        this.makeUb(sub[0], sub[1], sub[2])\n      }\n      this.setupAll();\n      delete this.subs;\n    }\n  },\n\n\n  setupAll: function () {\n    let fns = this.fns;\n    for (var i in fns) {\n      if (fns[i].goSetup)\n        this.setupUb(fns[i])\n    }\n\n    return true;\n  },\n\n  makeUb: function (name, path, extra) {\n\n    let fns = this.fns;\n    let obj = Object.create(DataManager.getValue(path));\n    obj.goSetup = true;\n    obj.extra = extra;\n    obj.uid = fns[name] && fns[name].id ? fns[name].uid : cu.uids.run();\n\n\n    if (fns[name]) _.merge(fns[name], obj)\n    else\n      fns[name] = obj;\n  },\n\n  setupUb: function (obj) {\n    let fns = this.fns;\n    delete obj.goSetup;\n\n    let values = {};\n    for (var i in obj.extra) {\n      let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n      if (!target) {\n        target = { uid: cu.uids.run() };\n        _.set(fns, obj.extra[i], target)\n      }\n      _.set(values, i, target)\n    }\n\n    if (obj.setup)\n      obj.setup(values);\n\n    obj.isReady = true;\n\n    if (this.waiting[obj.uid]) {\n      this.waiting[obj.uid].forEach(payload => {\n        payload.resolve()\n      })\n\n      this.waiting[obj.uid] = [];\n    }\n  },\n\n  onready: function (sub) {\n\n    if (sub.isReady) return Promise.resolve();\n\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n\n\n});\n\nDataManager.setCombined(\"ub.db\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    this.timers = {};\n  },\n\n  destroy: function () {\n    this.db.destroy();\n  },\n  request_save: function (id, src, delay) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    this.timers[id] = window.setTimeout(() => {\n      this.saveItems(id, src)\n    }, delay || 1000)\n  },\n\n  saveItems: function (id, src) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.save(items[i], items[i].id));\n\n    return Promise.all(promises).then(() => { console.log(\"saved all\", id) })\n  },\n\n  loadItems: function (src) {\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.load(items[i]))\n\n    return Promise.all(promises);\n  },\n\n  loadFilter: function (filter, count, sort) {\n    return this.db.loadfilter(filter, count, sort)\n  }\n})\n\nDataManager.setCombined(\"ub.loaders.map\", {\n  load: function (id) {\n    let startIds = [id, \"info_\" + id]\n    this.tb.db.loadItems(startIds)\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0])\n          this.wallet.root = items[0];\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n});\n\n\nDataManager.setCombined(\"ub.loaders.bridge\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  loadBridge: function () {\n    let items = {\n      top: {\n        notdb: true,\n        text: \"top\",\n        id: \"top\"\n      },\n      recent: {\n        notdb: true,\n        text: \"recent\",\n        id: \"recent\"\n      },\n      all: {\n        notdb: true,\n        text: \"all\",\n        id: \"all\"\n      },\n\n      root: {\n        notdb: true,\n        text: \"\",\n        id: \"root\"\n      }\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        console.log(\"loaded bridges\", result.docs)\n\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\nDataManager.setCombined(\"ub.mapView\", {\n  setup: function (args) {\n    this.wallet = {\n      items: {},\n      root: {\n        id: \"ant1\",\n        text: \"the first map\",\n        rels: { sub: {} },\n        type: \"map\",\n        notdb : true,\n      },\n      changed: {},\n      state: { nextId: 1 }\n    };\n\n    this.wallet.items.ant1 = this.wallet.root;\n\n    _.merge(this, args)\n\n    return this;\n  },\n  loadMap: function (id) {\n    let startIds = [id, \"info_\" + id]\n\n    let root = DataManager.getWallet(\"repo.root\")\n\n    let start = Promise.resolve();\n\n    if (root.id !== id) {\n      if (!root.notdb)\n        start = start.then(  () => this.saveItems() ) ;\n\n\n      start = start.then ( ()=> {\n      this.wallet.items = {}\n      this.wallet.root = {\n        id: id,\n        notdb: true,\n        rels: { sub: {} },\n      }\n      this.wallet.items[id] = this.wallet.root;\n      DataManager.set(\"repo.items\", this.wallet.items)\n      DataManager.set(\"repo.root\", this.wallet.root)\n    })\n    }\n\n    console.log(\"loading\", id)\n\n    start.then( ()=> this.tb.db.loadItems(startIds) )\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0]) {\n          let item = items[0];\n          this.wallet.root = item;\n          if ( true || !item.brand ) item.brand = cu.brand.getBrand(item.id + item.startedAt)\n\n          let customTpl =  {\n            logo : cu.brand.getLogo( item.id + item.startedAt,  10, 5)\n          }\n          let customMolds = cu.tplObjParse.run(customTpl);\n          DataManager.setCombined( \"customTpl\", customTpl);\n\n        }\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        console.log(\"done\", this.wallet)\n\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n  getItemsToSave: function () {\n    let changed = this.wallet.changed;\n    this.wallet.changed = {};\n\n    let items = [];\n    for (var i in changed) {\n      if (this.wallet.items[i].notdb) continue;\n      items.push(this.wallet.items[i])\n    }\n    return items;\n  },\n  saveItems: function () {\n    let items = this.getItemsToSave();\n    return this.tb.db.saveItems(this.uid, items);\n  },\n  generateId: function () {\n    return this.tb.state.getId();\n  },\n  mergeItem: function (id, value) {\n    if (!id) id = this.generateId();\n    if (!this.wallet.items[id]) this.wallet.items[id] = { id: id, createdAt: new Date().getTime() };\n    _.merge(this.wallet.items[id], value);\n    this.triggerChange(id);\n    return id;\n  },\n  mergeRoot: function (value) {\n    _.merge(this.wallet.root, value);\n    this.triggerChange(this.wallet.root.id);\n\n  },\n\n  triggerChange: function (id) {\n    this.wallet.changed[id] = true;\n    this.tb.db.request_save(this.uid, this);\n  },\n\n  setRel: function (rel, a, b, value) {\n    _.set(this.wallet.root, [\"rels\", rel, a, b], value);\n    this.triggerChange(this.wallet.root.id)\n  },\n\n})\nDataManager.setCombined(\"repo\", {\n  items: {},\n  root: {\n    id: \"ant1\",\n    text: \"the first map\",\n    rels: { sub: {} }\n  },\n  state: {\n    nextId: 2\n  }\n})\n\n\nDataManager.setCombined(\"antView.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      title: `<div >item : {value.text}</div>`,\n      item: `<div on_click={actions.select} antid={id}>item : {item.text}</div>`,\n      mapView: {\n        logo: cu.brand.getLogo(faker.company.catchPhrase(), 10, 5),\n\n        frame: `<div class='map'>{title} {content}\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        \n        <style>\n          .map { font-size : 15px; margin : 10px;\n            line-height: 23px;\n            background : {colors.background}\n            }\n          .topic>.text { \n              border-bottom : 1px solid {root.brand.fadedColor} ; \n              display : inline-block;\n              padding-left : 5px;\n              padding-right: 25px;\n            }\n          .topic { \n            margin-bottom : 5px;\n            margin-top : 20px;\n            position : sticky;\n            top : 20px;\n            background : {colors.background}\n          }\n          .content { margin-left : 1px; padding-left : 10px;}\n\n          .mapviewtitle { position:sticky; top : -30px; margin-bottom : 20px; background : {background}; z-index:200; } \n          .logo { display : inline-block;width : 50px; height : 50px; }\n\n          .selected.title { font-size : 19px;}\n\n          .selected.content { \n            border-left :  1px dotted {root.brand.fadedColor};\n          }\n\n          .selected.content::after {\n            content: \">\";\n            display: inline-block;\n            border-bottom: 1px solid {root.brand.fadedColor} ;\n            overflow: hidden;\n            position: relative;\n            left: -10px;\n            padding-left : 10px;\n            top: 8px;\n            width: 40px;\n            margin: 0px;\n          }\n\n          .mapviewtitle { font-variant: petite-caps;}\n\n          polygon.poligon {\n            fill: {root.brand.mainColor} !important;\n          }\n\n          .handle { \n            display: inline-block;\n            font-variant: petite-caps;\n            font-size: 0.7em;\n            color: #999;          }\n        </style>\n      </div>`,\n\n        title: `\n        <div class='mapviewtitle '> <svg class='logo'>{logo}</svg> {item.text}</div>`,\n      },\n\n\n      map: {\n        topic: \"<div on_click={actions.select} antid={id} class='title topic {isSelected}'><span class='text'>{handle} {item.text} </span></div>\",\n        item: \"<div on_click={actions.select} antid={id} class='title item {isSelected}'>{handle} {item.text}</div>\",\n        entry: \"<div on_click={actions.select} antid={id} class='title entry {isSelected}'>{handle} {item.text}</div>\",\n        other: `<div on_click={actions.select} antid={id} class='{isSelected}'>{item.text}</div>`,\n        card: `<div class='{isSelected}'>{title} <div id='content' class='content {isSelected}'>{content}</div></div>`,\n\n      },\n\n      handle : \"<span class='handle'>{handle}.</span>\",\n\n      bridgeTitle: `<div>{value.text}</div>`,\n      frame: \"<div>{maptitle}{items}</div>\",\n\n      mapTitle: \"\"\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.map\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          uistate: \"repo.uistate\",\n          items: \"repo.items\",\n          root: \"repo.root\",\n          repo: \"repo\",\n          molds: \"antView.molds\",\n          customTpl : \"customTpl\"\n        }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"select\", \"antid\"] } });\n\n        v.selected = v.uistate.selected;\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = [\"map.topic\", \"map.item\", \"map.entry\"]\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n\n        v.colors = {\n          background : \"#000\"\n        }\n\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      setV: function (value, v, memo) {\n        memo = memo || {};\n        for (var i in value) {\n          if (memo[i] === undefined)\n            memo[i] = v[i];\n          v[i] = value[i]\n        }\n\n        return memo;\n      },\n      cleanV: function (v, memo) {\n        for (var i in memo)\n          v[i] = memo[i];\n      },\n\n      getBody: function (v, id, sub) {\n        let list = this.getBodyList(v, id, sub);\n\n        let logo = v.customTpl.logo ? cu.reactAssembler.run(v.customTpl.logo, v) : \"\";\n        let memo = this.setV({ logo: logo, item: v.repo.root }, v, memo)\n\n        let title = cu.reactAssembler.run(v.molds.mapView.title, v);\n        memo = this.setV({ content: list, title: title }, v, memo)\n        let node = cu.reactAssembler.run(v.molds.mapView.frame, v)\n        this.cleanV(v, memo);\n        return node;\n      },\n      getBodyList: function (v, id, sub) {\n        let related = sub[id];\n\n        if (!related) return null;\n        if (v.level > 5) return null;\n        let level = v.level != undefined ? v.level + 1 : 0\n\n        let list = [];\n        let memo = this.setV({\n          id: null,\n          item: null,\n          level: 0,\n          isSelected: null,\n          content: null,\n          title: null,\n          handle : null,\n        }, v, memo);\n\n\n        let count = 1;\n        for (var i in related) {\n\n          _.merge(v, {\n            id: i,\n            item: v.items[i],\n            level: level,\n            isSelected: v.selected == i ? \"selected\" : \"\",\n            count : count \n          })\n\n          let item = this.getItem(v, sub);\n          list.push(item);\n\n          count++;\n        }\n\n        this.cleanV(v, memo);\n        return list;\n      },\n\n      getHandle : function ( v, level, count ) {\n        let handle;\n        if ( level == 0 ) {\n          handle =  String.fromCharCode(64 + count) \n        }\n\n        else if ( level == 1 )  {\n          handle =  count + \"\" ;\n        }\n\n          if ( handle == undefined ) return \"\";\n\n          let node =  cu.reactAssembler.run( v.molds.handle, { handle : handle });\n\n          console.log( \"handle\", node);\n          return node;\n        },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n\n        if (!moldName) moldName = v.otherTpl;\n        let titleMold = _.get(v.molds, moldName);\n\n        console.log( v.handle );\n        v.handle = this.getHandle( v, v.level, v.count );\n\n        v.title = cu.reactAssembler.run(titleMold, v);\n        v.content = this.getBodyList(v, v.id, sub);\n\n        if (v.isSelected && !v.content) v.content = [];\n\n\n        let node;\n        if (v.content) {\n          let cardMold = _.get(v.molds, v.cardMold);\n\n          node = cu.reactAssembler.run(cardMold, v)\n        }\n        else node = v.title;\n\n        return node;\n      },\n\n\n\n    }\n  }\n})\n\n\n\n\nDataManager.setCombined(\"antViewBridge.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      root: {\n        bridge: `<div class='bridge'>{content}</div>`,\n        card: `<div class='card'><div class='title'><span>{item.text}</span></div> <div class='content'>{content}</div></div>`,\n        item: `<div class='title' antid='{id}' on_click='{actions.select}' style='--color:{item.brand.fadedColor}'>{item.text}</div>`,\n        style: `\n          <style>\n            .title { \n              border-left : 2px solid var(--color);\n              margin-bottom : 5px;\n              padding-left : 4px;\n            }\n\n            .card {\n              margin : 20px 10px;\n            \n              border : 1px solid {brand.borderColor};\n\n              padding : 10px;\n            }\n            .bridge { font-size : 18px; margin : 10px;\n              line-height: 25px;\n              }\n\n            .card>.content { \n            }\n            .card>.title{\n              position: sticky;\n              top: 0px;\n              background : {brand.background};\n              padding-bottom : 10px;\n\n            }\n\n            .card>.title>span{ \n              border-bottom : 1px solid {brand.borderColor};\n              width : fit-content;\n              padding-left: 5px;\n              padding-right : 24px;\n              padding-bottom : 5px;\n              display : inline-block;\n              font-variant: petite-caps;\n            }\n          </style>\n        `\n      },\n    }\n  }\n})\n\nDataManager.setCombined(\"antView.bridge\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          items: \"bridgeRepo.items\",\n          root: \"bridgeRepo.root\",\n          repo: \"bridgeRepo\",\n          molds: \"antViewBridge.molds\"\n        }, v);\n\n\n        this.addVFn(v);\n\n        v.tplSpecs = {\n          byLevel: [\"root.bridge\", \"root.card\", \"root.item\"],\n\n        }\n\n        v.brand = {\n          borderColor: \"#333\",\n          background : \"#000\"\n        }\n\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"selectMap\", \"antid\"] } });\n\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = []\n        v.defaultTpl = {\n          card: \"root.card\",\n          title: \"root.title\"\n        }\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n        v.level = 0;\n        v.subs = v.root.rels.sub;\n\n        v.id = \"root\";\n        v.item = v.root;\n\n        let node = this.makeItem(v);\n\n        let style = cu.reactAssembler.run(v.molds.root.style, v)\n\n        return [node, style];\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      makeItem: function (v) {\n        let moldName = v.mold || v.tplSpecs.byLevel[v.level];\n        if (!moldName) console.error(\"no mold\", v);\n        let mold = _.get(v.molds, moldName);\n\n        let params = mold.mold.parameters;\n\n\n        if (params.content) {\n          let collection = v.subs[v.id];\n          let level = v.level + 1;\n          v.content = this.makeList(v, collection, (value, i) => {\n            return {\n              id: i,\n              item: v.items[i],\n              level: level\n            }\n          })\n        }\n\n\n        let node = cu.reactAssembler.run(mold, v)\n\n        return node;\n      },\n\n\n      makeList: function (v, collection, prepare) {\n        let list = [];\n        v.stack();\n\n        for (var i in collection) {\n          v.set(prepare(collection[i], i));\n          let node = this.makeItem(v);\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n      getBody: function (v, id, sub) {\n\n        v.stack();\n\n\n        v.set({\n          content: this.getList(v, id, sub),\n        })\n\n\n        debugger;\n        let moldName = v.moldsMap[v.level] || v.defaultTpl.card || \"other\";\n        let mold = _.get(v.molds, moldName)\n        let node = cu.reactAssembler.run(mold, v)\n\n\n        v.clean();\n        return node;\n      },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n\n\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n        if (!moldName) moldName = v.defaultTpl.title;\n        let titleMold = _.get(v.molds, moldName);\n\n        v.set({\n          title: cu.reactAssembler.run(titleMold, v),\n          content: this.getList(v, v.id, sub)\n        })\n\n        let node;\n        if (v.content) {\n          let moldName = v.moldsMap[v.level] || v.defaultTpl.card || \"other\";\n          let mold = _.get(v.molds, moldName)\n          node = cu.reactAssembler.run(mold, v)\n        }\n        else\n          node = this.getList(v, v.id, sub)\n\n        return node;\n      },\n\n\n      getList: function (v, id, sub) {\n        let related = sub[id];\n        let list = [];\n        v.stack();\n\n        for (var i in related) {\n\n          let item = v.items[i];\n          v.set({\n            id: i,\n            item: v.items[i],\n            level: v.level + 1\n          });\n\n          let node = this.getItem(v, sub);\n\n          console.log(\"related\", i, node, related)\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n      addVFn: function (v) {\n        v.set = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n\n        }\n\n        v.get = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n        }\n\n        v.clean = function () {\n          let v = this;\n          let memo = v.memo;\n\n          for (var i in memo)\n            v[i] = memo[i];\n\n          v.memo = v.stacks.pop();\n        }\n\n        v.stack = function () {\n\n          let v = this;\n\n          if (!v.stacks) v.stacks = [];\n\n          v.stacks.push(v.memo);\n\n          v.memo = {};\n        }\n\n\n      },\n\n\n    }\n  }\n})\n\nDataManager.setCombined(\"dbSavings\", {\n  items: {\n    /*\n    repoitems: { path: \"repo.items\", onload: [\"repo\", \"evaluateflow\"] },\n    bubblestate: \"repo.state\",\n    antsitems: \"repo.ants\",\n    */\n  }\n})\n\nDataManager.setCombined(\"tb.persisitence\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    window.onbeforeunload = () => { return this.saveAll() };\n    this.loadAll();\n\n  },\n\n  request_save: function () {\n    if (this.timer) window.clearTimeout(this.timer);\n\n    this.timer = window.setTimeout(() => {\n      this.saveAll()\n    }, 60000)\n  },\n\n  saveAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items\n    let savings = []\n    for (var i in tosave) {\n      savings.push(this.saveitem(i, tosave[i]))\n    }\n\n  },\n  saveitem: function (id, target) {\n    let path = target.path || target;\n    let repo = DataManager.getWallet(path);\n    return this.db.save({ repo }, id)\n  },\n\n  loadAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items;\n\n    for (var i in tosave)\n      this.loaditem(i, tosave[i]);\n  },\n\n  loaditem: function (id, target) {\n    let path = target.path || target;\n    let onload = target.onload || null;\n    this.db.load(id).then((items) => {\n      if (items && items.repo) DataManager.set(path, items.repo)\n      if (onload) DataManager.runOn(onload[0], onload[1])\n    })\n  },\n\n  starter: {\n    loader: {\n      autostart: true,\n      get: (tb) => {\n        if (tb.cache.done) return 1;\n        tb.cache.done = true;\n        let v = tb.fetch({ tb: \"tb.persisitence\" });\n        v.tb.setup();\n\n        return 1;\n      }\n    }\n  }\n\n})\n\n\n\n\nDataManager.setCombined(\"ui.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      main: `\n          <div id='frame'>\n            <div id='easel'>{view}</div>\n            <div id='bar'>\n              <myinput id='order' auto_complete=\"off\" value={order.value} on_key_press={order.place} on_change={order.change}></myinput>\n              <div id='bumb' on_click='{bumb.action}'>{picture}</div>\n            </div>\n          </div>\n          <style>\n            * { box-sizing : border-box}\n            body , window, html {\n              color : {textColor};\n              height : 100%; width : 100%; background : {background} }\n            #frame { height : 100%; width : 100%;}\n            #frame { display : flex; flex-direction : column; }\n            #easel { flex : 1; overflow : auto; }\n            #bar   { border-top: 1px solid #999; width : 100%; flex-basis : {dim.barHeight}px ; display : flex;flex-direction:row; }\n\n            #order {  padding-left : 10px; outline: none; flex : 1; border : 0px none transparent; width: 100%;}\n            #bumb  { flex-basis : {dim.barHeight}px; background : {color} } \n\n          </style>\n          \n  `,\n      bubbleitem: `<div on_click={selectitem} targetid={targetid}>{label}</div>`,\n\n    }\n  }\n})\n\nDataManager.setCombined(\"workingant\", {\n  data: {\n    input: { text: \"\" },\n    currentView: 'main',\n\n    selected: \"\"\n  }\n})\n\n\nDataManager.setCombined(\"antsFrame.ui\", {\n  loader: {\n    paths: { molds: \"ui.molds\", orderText: \"workingant.data\", node: \"antsFrame.prepare\" },\n    get: function (tb, v) {\n\n      tb.fetch(this.paths, v);\n\n      _.set(v.node, v.molds.main.mold.pins.order.concat([\"props\", \"value\"]), v.orderText.input)\n\n      return v.node;\n    }\n  }\n\n})\n\nDataManager.setCombined(\"workingant.viewState\", {\n  path: \"antView.map.nodes\"\n})\n\nDataManager.setCombined(\"antsFrame.prepare\", {\n  loader: {\n    paths: { molds: \"ui.molds\", data: \"bubbles.data\", repo: \"repo\", viewState: \"workingant.viewState\" },\n    get: function (tb, v) {\n      tb.fetch(this.paths, v);\n\n      tb.fetch({ view: v.viewState.path }, v)\n\n\n      let store = cu.store.get(tb, hapi,\n        { change: { changeOrder: \"workingant.data.input\" }, run: { bumbAction: \"showhud\", placeOrder: \"placeorder\" } });\n\n      v.dim = {\n        window: {\n          height: \"400\",\n          width: \"200\",\n        },\n        barHeight: \"50\"\n      }\n\n      v.data = {\n        label: \"main\",\n        bubbleList: \"TestList\",\n        order: {\n          change: store.changeOrder,\n          place: store.placeOrder\n        },\n        bumb: {\n          action: store.bumbAction\n        },\n        dim: v.dim,\n\n        view: v.view,\n\n        color: \"#007abc\",\n        background: \"#000\",\n        textColor: \"#eee\"\n      }\n\n\n      v.node = cu.reactAssembler.run(v.molds.main, v.data)\n      return v.node;\n    },\n    autostart: true\n  }\n})\n\n\n\nDataManager.setCombined(\"test\", {\n  loader: {\n    get: function () {\n      myUB.mapview.loadMap(\"ant1\")\n      myUB.bridgeLoader.loadBridge();\n    },\n    autostart: true\n  }\n})\n\n//DataManager = window._DataManager.setup();\nDataManager.historyManager.recording = false;\nDataManager.runToStart();\n//------------------\n\n\n\nclass Frame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  path = \"antsFrame.ui\"\n\n  componentDidMount() {\n    DataManager.setTrigger(this.path, \"asd\", {\n      run: () => {\n        this.setState({ \"version\": new Date().getTime() })\n      }\n    })\n  }\n\n  render() {\n    let components = DataManager.getValue(this.path);\n    let node = cu.reactUtils.makeComponent(components || []) || \"empty\";\n    return node\n  }\n}\n\nclass FlatAnt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: { scode: \"salut\" }\n    }\n  }\n\n  _style() {\n    return `\n      html, window, body{ width : 100%; height : 100%; overflow : auto; padding: 0px; margin:0px;}\n      #root, .main { width : 100%; height : 100%;}\n      \n    `\n  }\n\n  render() {\n    let style = this._style();\n    let components = [\n      <Frame key=\"1\"></Frame>\n    ]\n    return [\n      <style>{style}</style>,\n      components]\n      ;\n  }\n}\n\nexport default FlatAnt;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager.js\";\n\nimport FlatAnt from \"./FlatAnt1\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = <FlatAnt />\n    return content;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","var historyManager = {\n  setup: function setup(info) {\n    var item = Object.create(this);\n    item.wallet = {\n      currentStack: {\n        info: [{\n          type: \"startedWith\",\n          info: info\n        }]\n      },\n      stacks: []\n    };\n    item.recording = true;\n    item.wallet.stacks.push(item.wallet.currentStack);\n    return item;\n  },\n  startStack: function startStack(info) {\n    if (!this.recording) return;\n    var stack = {\n      info: [],\n      prevStack: this.wallet.currentStack,\n      index: this.wallet.stacks.length,\n      start: info\n    };\n    this.addInfo({\n      type: \"subStack\",\n      stack: stack\n    }, true);\n    this.wallet.stacks.push(stack);\n    this.wallet.currentStack = stack;\n    if (info) this.addInfo(info);\n  },\n  addInfo: function addInfo(info, skipClone) {\n    if (!this.recording) return;\n    if (!skipClone) info = _.cloneDeep(info);\n    this.wallet.currentStack.info.push(info);\n  },\n  endStack: function endStack(info) {\n    if (!this.recording) return;\n    if (info) this.addInfo(info);\n    this.wallet.currentStack = this.wallet.currentStack.prevStack;\n  }\n};\nvar _DataManager = {\n  setup: function setup() {\n    var item = Object.create(this);\n    item.state = {\n      ctx: {},\n      gettingValue: {},\n      wallet: {},\n      meta: {},\n      cache: {},\n      version: {},\n      loadersCache: {},\n      triggers: {},\n      currentVersion: 1,\n      dependencies: {},\n      nextUID: 1,\n      agenda: {\n        names: {},\n        tasks: []\n      },\n      pins: {},\n      toStart: [],\n      flags: {}\n    };\n    item.historyManager = historyManager.setup(this);\n    return item;\n  },\n  state: {\n    gettingValue: {},\n    wallet: {},\n    meta: {},\n    cache: {},\n    version: {},\n    loadersCache: {},\n    triggers: {},\n    currentVersion: 1,\n    dependencies: {},\n    nextUID: 1,\n    agenda: {\n      names: {},\n      tasks: []\n    },\n    pins: {},\n    toStart: [],\n    flags: {}\n  },\n  setCtx: function setCtx(basePath, ctxPath, value, names) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    if (!ctx) _.set(this.state.ctx, [basePath, \"ctx\"].join(\".\"), ctx = {\n      names: []\n    });\n\n    _.set(ctx, ctxPath, value);\n\n    ctx.names.push({\n      names: names,\n      path: ctxPath\n    });\n  },\n  getCtx: function getCtx(basePath, name) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    ;\n    if (!ctx) return null;\n    var ctxPath;\n\n    for (var i in ctx.names) {\n      if (ctx.names[i].names.indexOf(name) != -1) {\n        ctxPath = ctx.names[i].path;\n        break;\n      }\n    }\n\n    if (!ctxPath) return null;\n\n    var target = _.get(ctx, ctxPath);\n\n    return target;\n  },\n  runOn: function runOn(basePath, name, args) {\n    var target = this.getCtx(basePath, name);\n    if (!target) return null;\n    return target[name](args);\n  },\n  runFn: function runFn(path, args) {\n    var route = path.split(\".\");\n    var fnName = route.pop();\n    var targetPath = route.join(\".\");\n    var target = this.getValue(targetPath);\n    if (!target[fnName]) return undefined;\n\n    if (_.isFunction(target[fnName])) {\n      return target[fnName](args, path, this);\n    } else if (_.isFunction(target[fnName].run)) {\n      return target[fnName].run(args, path, this);\n    }\n  },\n  getInfluenced: function getInfluenced(path) {\n    var influenced = [];\n\n    var dep = _.get(this.state.dependencies, path + \".DEP\");\n\n    if (!dep) return [];\n\n    for (var i in dep) {\n      influenced.push(i);\n      influenced = influenced.concat(this.getInfluenced(i));\n    }\n\n    return influenced;\n  },\n  getValue: function getValue(path, skipPartialValueCheck) {\n    var route = path.split(\".\");\n    var value = this.checkCache(path);\n    if (value) return value;\n    if (!skipPartialValueCheck) for (var i = 0; i < route.length; i++) {\n      var partialPath = route.slice(0, i).join(\".\");\n\n      if (this.state.gettingValue[partialPath]) {\n        var partialResult = this.state.gettingValue[partialPath].partialResult;\n        var partialSlot = route.slice(i);\n\n        var partialValue = _.get(partialResult, partialSlot);\n\n        if (partialValue !== undefined) return partialValue;\n      }\n    }\n    this.state.gettingValue[path] = true;\n    var list = this.makeList(path);\n    value = this.listToValue(list, path);\n    delete this.state.gettingValue[path];\n\n    if (value !== undefined) {\n      // let shouldUpdate = (  list.length == 1 && list[0].src == \"wallet\" )\n      this.setCache(path, value); //, shouldUpdate);\n      //this.diffCache( oldCache, path );\n    }\n\n    return value;\n  },\n  setCache: function setCache(path, value, shouldUpdate) {\n    this.state.cache[path] = {\n      value: value,\n      shouldUpdate: shouldUpdate || false,\n      version: this.state.currentVersion\n    };\n  },\n  checkCache: function checkCache(path, ignoreUpdates) {\n    if (!this.state.cache[path]) return null;\n    if (ignoreUpdates) return this.state.cache[path].value;\n    if (this.state.cache[path].shouldUpdate) return null;\n    return this.state.cache[path].value;\n  },\n  prepareCache: function prepareCache(path) {\n    var cache = this.state.loadersCache[path];\n\n    if (!cache) {\n      cache = this.state.loadersCache[path] = {\n        old: {},\n        contains: {},\n        dependsOn: {}\n      };\n    }\n\n    var old = {\n      contains: cache.contains || {},\n      dependsOn: cache.dependsOn || {}\n    };\n    cache.old = old;\n    delete cache.contains;\n    delete cache.dependsOn;\n    return old;\n  },\n  diffCache: function diffCache(oldCache, path) {\n    if (!this.state.loadersCache[path]) this.state.loadersCache[path] = {};\n    var cache = this.state.loadersCache[path] || {};\n    var dependencies = this.state.dependencies;\n\n    var addDependency = function addDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) _.set(dependencies, a + \".DEP\", dep = {});\n      dep[b] = true; //_.set( dependencies, a + \".DEP\",dep );\n    };\n\n    var remDependency = function remDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) return;\n      delete dep[b];\n    };\n\n    var check = function check(newC, oldC) {\n      for (var i in newC) {\n        if (!oldC || !oldC[i]) addDependency(i, path);\n      }\n\n      for (var i in oldC) {\n        if (!newC || !newC[i]) remDependency(i, path);\n      }\n    };\n\n    check(cache.contains, oldCache.contains);\n    check(cache.dependsOn, oldCache.dependsOn);\n  },\n  updateVersionsMap: function updateVersionsMap(path) {\n    var cache = this.state.loadersCache[path] || {};\n    var depOn = cache.dependsOn;\n\n    for (var i in depOn) {\n      var currentVersion = this.getVersion(i);\n      depOn[i].version = currentVersion;\n    }\n  },\n  makeList: function makeList(path) {\n    var list = [];\n    var route = path.substr ? path.split(\".\") : path;\n\n    var walletValue = _.get(this.state.wallet, path);\n\n    if (walletValue !== undefined) {\n      if (!_.isObjectLike(walletValue)) {\n        list.push({\n          src: \"wallet\",\n          value: walletValue,\n          path: [],\n          srcPath: path,\n          version: 1\n        });\n        return list;\n      }\n\n      walletValue = _.cloneDeep(walletValue);\n      list.push({\n        src: \"wallet\",\n        value: walletValue,\n        path: [],\n        srcPath: path,\n        version: 1\n      });\n    }\n\n    var meta = this.state.meta;\n\n    for (var i = 0; i < route.length; i++) {\n      if (!meta) break;\n\n      if (meta.loader) {\n        var item = {\n          src: \"root\",\n          loader: meta.loader,\n          path: [],\n          srcPath: route.slice(0, i),\n          select: route.slice(i)\n        };\n        list.push(item);\n      }\n\n      meta = meta[route[i]];\n    }\n\n    var rootPath = route;\n\n    var iterate = function iterate(obj, route, list) {\n      if (!obj) return;\n\n      if (obj.loader) {\n        var _item = {\n          src: \"sub\",\n          loader: obj.loader,\n          path: route,\n          srcPath: rootPath.concat(route)\n        };\n        list.push(_item);\n      }\n\n      for (var _i in obj) {\n        if (_i == \"loader\") continue;\n        iterate(obj[_i], route.concat(_i), list);\n      }\n    };\n\n    iterate(meta, [], list);\n    return list;\n  },\n  silentSet: function silentSet(path, value, skipPathAffected) {\n    this.historyManager.addInfo({\n      type: \"silentSet\",\n      path: path,\n      value: value\n    });\n\n    _.set(this.state.wallet, path, value);\n\n    if (this.state.cache[path]) this.state.cache[path].shouldUpdate = true;\n    if (!skipPathAffected) this.getAffectedPaths(path);\n  },\n  listToValue: function listToValue(list, path) {\n    if (list.length == 1 && list[0].value) return list[0].value;\n    var result = {};\n    this.state.gettingValue[path] = {\n      partialResult: result\n    };\n    var postponedSteps = list;\n    var hasSteps = true;\n    var snoozeCount = 0;\n\n    while (hasSteps) {\n      snoozeCount++;\n\n      if (snoozeCount > 5) {\n        //console.log( \"postponed more than 5 times\", path, result, _.cloneDeep( this.state.gettingValue ) );\n        this.state.cache[path].shouldUpdate = true;\n        return result;\n      }\n\n      list = postponedSteps;\n      postponedSteps = [];\n      hasSteps = false;\n\n      for (var i = 0; i < list.length; i++) {\n        var step = list[i];\n        var value = void 0;\n\n        if (step.value) {\n          value = step.value;\n        } else if (step.loader) {\n          try {\n            value = this.getFromLoader(step, result, path);\n          } catch (e) {\n            if (e == \"postpone\") {\n              this.state.cache[path].shouldUpdate = true;\n              postponedSteps.push(step);\n              hasSteps = true;\n            } else {\n              console.error(e);\n            }\n\n            continue;\n          }\n        }\n\n        if (step.select) value = _.get(value, step.select);\n\n        if (step.path.length) {\n          _.set(result, step.path, value);\n        } else {\n          if (Object.values(result).length == 0) {\n            result = value;\n          } else //console.log( \"merging\" , _.cloneDeep( result ), value, result);\n            _.merge(result, value);\n        }\n      }\n    }\n\n    return result;\n  },\n  loadersCache: {},\n  addLog: function addLog(lhs, rel, rhs, value) {\n    if (!this.state.loadersCache[lhs]) this.state.loadersCache[lhs] = {\n      version: this.state.currentVersion,\n      cachedValue: {}\n    };\n    var xcache = this.state.loadersCache[lhs];\n    if (!xcache[rel]) xcache[rel] = {};\n    xcache[rel][rhs] = value || true;\n  },\n  getFromLoader: function getFromLoader(step, result, requester, force) {\n    var _this = this;\n\n    var srcPath = step.srcPath.join(\".\");\n    var value;\n\n    try {\n      var logger = {\n        add: function add(path, name) {\n          _this.addLog(srcPath, \"dependsOn\", path, {\n            version: true,\n            name: name,\n            path: path,\n            srcPath: srcPath\n          });\n        }\n      };\n      var loader = step.loader;\n\n      if (loader.prism) {\n        if (loader.loadedPrism) loader = loader.loadedPrism;else {\n          var loadedPrism = this.getFromDispatch(loader.prism);\n          loader.loadedPrism = loadedPrism;\n          loader = loadedPrism;\n        }\n      }\n\n      if (loader.load) {\n        if (this.state.cache[srcPath]) {\n          return {};\n        }\n\n        value = loader.load(result, this, logger, step.loader, step);\n\n        _.set(this.state.wallet, srcPath, value);\n\n        this.state.cache[srcPath] = {\n          loader: true,\n          value: {}\n        };\n        return value;\n      }\n\n      if (!force) {\n        var _value = this.checkCache(srcPath);\n\n        if (_value) return _value;\n      }\n\n      if (step.src == \"sub\") this.addLog(requester, \"contains\", srcPath);\n      var oldCache = this.prepareCache(srcPath);\n\n      if (loader.get) {\n        try {\n          var tb = TB.init(result, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n          if (DataManager.newAPI) value = loader.get(tb, tb.v);else value = loader.get(tb, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n        } catch (e) {\n          if (e && e.type == \"return\") {\n            value = e.value;\n          } else {\n            throw e;\n          }\n        }\n      }\n\n      if (value === \"forceCache\") {\n        return this.checkCache(srcPath, true);\n      } else if (value !== undefined) {\n        this.setCache(srcPath, value);\n        this.diffCache(oldCache, srcPath);\n        if (loader.updateVersionsMap) this.updateVersionsMap(srcPath);\n\n        _.set(this.state.version, srcPath + \".version\", this.state.currentVersion);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (loader && loader.skipCache) this.state.cache[srcPath].shouldUpdate = true;\n    return value;\n  },\n  runUtils: function runUtils(path, args) {\n    var fn = this.getValue(path);\n    if (fn && fn.run) return fn.run.apply(fn, args);\n  },\n  getWallet: function getWallet(path) {\n    return _.get(this.state.wallet, path);\n  },\n  mergeValue: function mergeValue(path, value) {\n    var _this2 = this;\n\n    this.historyManager.addInfo({\n      type: \"mergeValue\",\n      path: path,\n      value: value\n    });\n    var oldValue = path ? _.get(this.state.wallet, path) : this.state.wallet; //this.getValue( path );\n\n    if (!oldValue) {\n      oldValue = {};\n\n      _.set(this.state.wallet, path, oldValue);\n    }\n\n    var changedPaths = [];\n    this.state.currentVersion++;\n    var route = _.isString(path) ? path.split(\".\") : path || [];\n    if (route.length == 1 && route[0] == \"\") route = [];\n    var fn = {\n      addPath: function addPath(relPath) {\n        var fullPath = route.concat(relPath);\n        changedPaths.push(fullPath);\n\n        _.set(_this2.state.version, fullPath.join(\".\") + \".version\", _this2.state.currentVersion);\n      }\n    };\n    this.pauseAll();\n\n    if (_.isObjectLike(value)) {\n      this.setObObj(oldValue, value, fn, []);\n    } else {\n      console.log(\"it's not object\");\n    }\n\n    for (var i in changedPaths) {\n      this.updateVersionForAll(changedPaths[i]);\n      this.getAffectedPaths(changedPaths[i].join(\".\"));\n    }\n\n    this.req_triggers();\n  },\n  pauseAll: function pauseAll() {\n    if (this.state.runningReqTriggers_timer) {\n      this.clearInterval(this.state.runningReqTriggers_timer);\n      delete this.state.runningReqTriggers_timer;\n    }\n\n    if (this.state.runningAgendaTriggers_timer) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n    }\n  },\n  setInterval: function setInterval(callback, delay, name) {\n    var stop = false;\n\n    var fn = function fn() {\n      if (stop) return; //console.log( \"interval\", name );\n\n      callback();\n      window.requestAnimationFrame(fn);\n    };\n\n    window.requestAnimationFrame(fn);\n    return function () {\n      stop = true;\n    };\n  },\n  clearInterval: function clearInterval(stopFn) {\n    if (!stopFn) return;\n    return stopFn();\n  },\n  req_triggers: function req_triggers() {\n    var _this3 = this;\n\n    if (this.state.runningReqTriggers_timer) return; //if ( Object.keys( this.affected ).length == 0 ) return;\n\n    this.state.runningReqTriggers_timer = this.setInterval(function () {\n      //console.log( \"affected::\", _.cloneDeep(this.affected ) );\n      _this3.asyncTriggers();\n    }, 0, \"triggers\");\n  },\n  asyncTriggers: function asyncTriggers() {\n    var keys = Object.keys(this.affected);\n\n    if (keys.length == 0) {\n      this.clearInterval(this.state.runningReqTriggers_timer); //console.log( \"affected_checked\", this.affected_checked );\n\n      this.affected_checked = {};\n      delete this.state.runningReqTriggers_timer;\n      return;\n    } //console.log( \"checking\", keys[0 ] );\n\n\n    this.affected_checked[keys[0]] = this.affected[keys[0]];\n    delete this.affected[keys[0]];\n    this.lazy_checkTriggers(keys[0]);\n  },\n  req_Agenda: function req_Agenda() {\n    var _this4 = this;\n\n    if (this.state.runningAgendaTriggers_timer) return;\n    if (this.state.agenda.tasks.length == 0) return;\n    this.state.runningAgendaTriggers_timer = this.setInterval(function () {\n      _this4.asyncTriggersAgenda();\n    }, 0, \"agenda\");\n  },\n  asyncTriggersAgenda: function asyncTriggersAgenda() {\n    if (this.state.agenda.tasks.length == 0) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n      return;\n    }\n\n    var trigger = this.state.agenda.tasks.shift();\n    if (!trigger) return console.error(trigger); //console.log( \"checking\", keys[0 ] );\n\n    delete this.state.agenda.names[trigger.id];\n    this.runTrigger(trigger, trigger.target, trigger.listener); //this.lazy_checkTriggers( keys[0] );\n  },\n  lazy_checkTriggers: function lazy_checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      if (this.state.agenda.names[path]) return;\n      var triggers = this.state.triggers[path];\n\n      for (var i in triggers) {\n        var trigger = triggers[i];\n        var id = trigger.id || path + \"___\" + i;\n        if (this.state.agenda.names[i]) continue;\n        if (!trigger.path) trigger.target = path;\n        if (!trigger.token) trigger.listener = i;\n        if (!trigger.id) trigger.id = id;\n        this.state.agenda.names[id] = true;\n        this.state.agenda.tasks.push(trigger);\n      }\n\n      this.sortAgenda();\n      this.req_Agenda();\n    }\n  },\n  sortAgenda: function sortAgenda() {\n    this.state.agenda.tasks.sort(function (taskA, taskB) {\n      if (!taskB.salience) return 1;\n      if (!taskA.salience) return -1;\n      return taskA.salience - taskB.salience;\n    });\n  },\n  setObObj: function setObObj(target, source, fn, path) {\n    for (var i in source) {\n      if (source[i] === undefined) continue;else if (_.isObjectLike(source[i])) {\n        if (!target[i]) target[i] = {};\n        this.setObObj(target[i], source[i], fn, path.concat(i));\n      } else {\n        if (target[i] != source[i]) {\n          target[i] = source[i];\n          fn.addPath(path.concat(i));\n        }\n      }\n    }\n  },\n  appendToArray: function appendToArray(path, value, setVersion) {\n    var target = _.get(this.state.wallet, path);\n\n    if (!target) {\n      value = [value];\n      return this.set(path, value, false, setVersion);\n    }\n\n    var index = target.length;\n    var route = _.isArray(path) ? path : path.split(\".\");\n    route.push(index);\n    return this.set(route, value, false, setVersion);\n  },\n  setByLoader: function setByLoader(path, value) {\n    if (_.isArray(path)) path = path.join(\".\");\n\n    var prism = _.get(this.state.meta, path);\n\n    if (!prism || !prism.loader || !prism.loader.set) return false;\n    var tb = TB.init({}, this, {}, prism.loader, {}, this.state.loadersCache[path]);\n    value = prism.loader.set(tb, value);\n    return true;\n  },\n  set: function set(path, value, isLoaders, setVersion) {\n    this.historyManager.startStack({\n      type: \"set\",\n      path: path,\n      value: value\n    });\n\n    try {\n      if (this.setByLoader(path, value)) {\n        return;\n      }\n\n      var target = isLoaders ? this.state.meta : this.state.wallet;\n\n      _.set(target, path, value); //if ( setVersion ) {\n\n\n      this.state.currentVersion++; //}\n\n      this.updateVersionForAll(path.split(\".\"));\n\n      _.set(this.state.version, path + \".version\", this.state.currentVersion);\n\n      var strPath = _.isArray(path) ? path.join(\".\") : path;\n      this.getAffectedPaths(strPath);\n      this.req_triggers();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.historyManager.endStack();\n    }\n  },\n  affected: {},\n  affected_checked: {},\n  markChangeOn: function markChangeOn(path, skipTrigger) {\n    this.getAffectedPaths(path);\n    if (!skipTrigger) this.req_triggers();\n  },\n  getAffectedPaths: function getAffectedPaths(path) {\n    if (this.state.cache[path]) {\n      this.state.cache[path].shouldUpdate = true;\n    }\n\n    if (this.affected[path]) {\n      return;\n    }\n\n    this.affected[path] = {\n      version: this.state.currentVersion,\n      state: 1\n    };\n    var route = path.split(\".\");\n    var strPath = route[0];\n    this.getAffectedPaths(route[0]);\n\n    for (var i = 1; i < route.length - 1; i++) {\n      strPath += \".\" + route[i];\n      this.getAffectedPaths(strPath);\n    }\n\n    var influenced = this.getInfluenced(path);\n\n    for (var i in influenced) {\n      this.getAffectedPaths(influenced[i]);\n    }\n  },\n  markChangedPaths: function markChangedPaths(path) {\n    //let influenced = this.getInfluenced( path );\n    var route = path.split(\".\");\n    var strPath = route[0];\n\n    for (var i = 1; i < route.length; i++) {\n      strPath += \".\" + route[i];\n      if (this.state.cache[strPath]) this.state.cache[strPath].shouldUpdate = true;\n      this.checkTriggers(strPath);\n      this.setUpdateFlag(strPath);\n    }\n  },\n  changedPaths: {},\n  setUpdateFlag: function setUpdateFlag(path) {\n    var influenced = this.getInfluenced(path);\n    var cache = this.state.cache;\n\n    for (var i in influenced) {\n      if (cache[influenced[i]]) {\n        cache[influenced[i]].shouldUpdate = true;\n      }\n\n      this.setUpdateFlag(cache[influenced[i]]);\n      this.checkTriggers(influenced[i]);\n    }\n  },\n  checkTriggers: function checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      this.runTriggers(this.state.triggers[path], path);\n    }\n  },\n  runTriggers: function runTriggers(collection, path) {\n    for (var i in collection) {\n      this.runTrigger(collection[i], path, i);\n    }\n  },\n  runTrigger: function runTrigger(trigger, path, token) {\n    if (_.isFunction(trigger.run)) {\n      return trigger.run(trigger, path, token);\n    }\n\n    var fn = _.get(this.state.wallet, trigger.run);\n\n    if (_.isFunction(fn)) return fn(trigger, path, token);else if (fn.run) return fn.run(trigger, path, token);\n  },\n  run: function run(path, value) {},\n  fetchValues: function fetchValues(target, map, wallet, master, logger, onlyPaths) {\n    for (var i in map) {\n      if (i == \"type\") continue;\n      var value = map[i];\n\n      if (_.isString(value)) {\n        if (value.charAt(0) == \"$\") {\n          var _path = value.substr(2);\n\n          if (logger) logger.add(_path, i);\n          value = master.getValue(_path);\n        } else if (onlyPaths) {\n          var _path2 = value;\n          if (logger) logger.add(_path2, i);\n          value = master.getValue(_path2);\n        }\n      } else if (value.KEY == \"fullPath\") {\n        path = value.path.join(\".\");\n        if (logger) logger.add(path, i);\n        value = master.getValue(path);\n      }\n\n      if (value === undefined) throw \"postpone\";\n      var slot = i;\n      target[slot] = value;\n      if (!target.src) target.src = {};\n      target.src[slot] = {\n        key: map[i],\n        slot: i\n      };\n    }\n\n    return target;\n  },\n  setCombined: function setCombined(path, value) {\n    this.historyManager.startStack({\n      type: \"setCombined\",\n      path: path,\n      value: value\n    });\n    var payload = {\n      loaders: {},\n      loadersPaths: [],\n      basePath: path.split(\".\"),\n      value: value,\n      pins: [],\n      afterOp: []\n    };\n    var isEmpty = this.iterate(value, [], payload);\n\n    if (payload.pins.length) {\n      var currentPins = {};\n\n      for (var i in payload.pins) {\n        var _pin = payload.pins[i];\n\n        var name = _pin.value || _pin.path.slice(-1)[0];\n\n        currentPins[name] = {\n          path: _pin.path,\n          fullPath: payload.basePath.concat(_pin.path)\n        };\n      }\n\n      var pins = _.get(this.state.pins, path + \".pins\");\n\n      if (!pins) _.set(this.state.pins, path + \".pins\", pins = {});\n\n      _.merge(pins, currentPins);\n    }\n\n    if (payload.afterOp.length) {\n      for (var i in payload.afterOp) {\n        var op = payload.afterOp[i];\n\n        if (op.type == \"gluePin\") {\n          var pin = pins[op.pin];\n          var pinKey = {\n            KEY: \"fullPath\",\n            path: pin.fullPath\n          };\n\n          if (op.isLoader) {\n            _.set(payload.loaders, op.dest, pinKey);\n          } else {\n            _.set(value, op.dest, pinKey);\n          }\n        } else if (op.type == \"flags\") {\n          if (op.flags.hasVersion) {\n            this.updateVersion(op.path);\n          }\n        }\n      }\n    }\n\n    if (!isEmpty) this.set(path, value, false, true);\n\n    if (payload.hasLoaders) {\n      //console.log( \"loaders\", payload.loadersPaths );\n      this.set(path, payload.loaders, true, true);\n\n      for (var i in payload.loadersPaths) {\n        var lPath = payload.loadersPaths[i];\n        this.setCache(lPath.join(\".\"), {}, true);\n\n        var loader = _.get(this.state.meta, lPath);\n\n        if (loader.loader && loader.loader.autostart) {\n          this.state.toStart.push({\n            path: lPath.join(\".\")\n          }); //this.getValue(lPath.join(\".\"));\n        } //console.log( \"loader\", loader );\n\n      }\n    }\n\n    this.historyManager.endStack();\n  },\n  runToStart: function runToStart() {\n    var toStart = this.state.toStart;\n\n    while (toStart.length) {\n      var item = toStart.shift();\n      this.getValue(item.path);\n    }\n  },\n  buildModel: function buildModel(input, path) {\n    var modelName = input.MODEL;\n    input = _.cloneDeep(input);\n    var tokens;\n\n    if (modelName.indexOf(\":\") != -1) {\n      tokens = modelName.split(\":\");\n      modelName = tokens.shift();\n      input.tokens = tokens;\n    }\n\n    var mold = this.getValue(modelName);\n\n    if (mold.handleTokens && tokens) {\n      mold.handleTokens(input, tokens, path);\n    }\n\n    var obj = _.cloneDeep(mold.modelObj);\n\n    if (mold.modelSpec) {\n      var spec = mold.modelSpec;\n\n      if (spec.ops) {\n        for (var i in spec.ops) {\n          var op = spec.ops[i];\n\n          if (op.type == \"replaceValue\") {\n            var value = _.get(input, op.source);\n\n            if (!op.dest) obj = value;else _.set(obj, op.dest, value);\n          } else if (op.type == \"eval\") {\n            var _value2 = op.fn(input, op);\n\n            console.log(_value2);\n\n            _.set(input, op.dest, _value2);\n          }\n        }\n      }\n\n      if (spec.isLoader) {\n        obj = {\n          loader: obj\n        };\n      }\n    }\n\n    if (input.pin !== undefined) obj.pin = input.pin;\n    this.historyManager.addInfo({\n      type: \"buildModel\",\n      path: path,\n      input: input,\n      obj: obj\n    });\n    return obj;\n  },\n  iterate: function iterate(obj, path, payload) {\n    while (obj && obj.MODEL) {\n      var newObj = this.buildModel(obj, payload.basePath.concat(path));\n\n      for (var i in obj) {\n        delete obj[i];\n      }\n\n      _.merge(obj, newObj); //really ? it was easier that way then to put inside the loop and on setCombined ? really ? \n      //yea, keeping the traditional approach\n\n    }\n\n    var isEmpty = true;\n\n    for (var i in obj) {\n      var subPath = path.concat(i);\n\n      if (i == \"pin\") {\n        payload.pins.push({\n          subPath: subPath,\n          path: path,\n          value: obj[i]\n        });\n        delete obj[i];\n      } else if (i == \"loader\") {\n        this.setLoader(payload.loaders, path, obj[i], payload.basePath, payload);\n        payload.loadersPaths.push(payload.basePath.concat(path));\n        delete obj[i];\n        payload.hasLoaders = true;\n      } else if (i == \"flags\") {\n        payload.afterOp.push({\n          type: \"flags\",\n          path: payload.basePath.concat(path).join(\".\"),\n          relPath: path,\n          flags: obj.flags\n        });\n      } else if (_.isString(obj[i]) && obj[i].charAt(0) == \"%\") {\n        obj[i] = this.getStaticValue(obj[i], i, obj, subPath, payload);\n        isEmpty = false;\n      } else if (_.isObjectLike(obj[i])) {\n        var subIsEmpty = this.iterate(obj[i], subPath, payload);\n\n        if (subIsEmpty) {//delete obj[ i ];\n        } else {\n          isEmpty = false;\n        }\n\n        isEmpty = false;\n      } else {\n        isEmpty = false;\n      }\n    }\n\n    return isEmpty;\n  },\n  getStaticValue: function getStaticValue(slot, index, obj, path, payload) {\n    if (slot == \"%PATH\") return payload.basePath.concat(path);else {\n      payload.afterOp.push({\n        type: \"gluePin\",\n        dest: path,\n        pin: slot.substring(1)\n      });\n      return {\n        KEY: \"relative path\"\n      };\n    }\n  },\n  getUID: function getUID() {\n    return this.state.nextUID++;\n  },\n  setTrigger: function setTrigger(target, listener, trigger) {\n    if (!this.state.triggers[target]) this.state.triggers[target] = {};\n    this.state.triggers[target][listener] = trigger;\n  },\n  getTrigger: function getTrigger(target, listener) {\n    if (!this.state.triggers[target]) return null;\n    return this.state.triggers[target][listener];\n  },\n  remTrigger: function remTrigger(target, listener) {\n    if (!this.state.triggers[target]) return;\n    delete this.state.triggers[target][listener];\n  },\n  setLoader: function setLoader(loaders, path, value, basePath, payload) {\n    if (_.isString(value)) {\n      var listenerPath = basePath.concat(path).join(\".\");\n      var oldTrigger = this.getTrigger(value, listenerPath);\n      if (oldTrigger && oldTrigger.path) this.remTrigger(oldTrigger.path, listenerPath);\n      this.setTrigger(value, listenerPath, {\n        run: \"base.updateLoader\",\n        loaderPath: value,\n        destination: listenerPath\n      });\n      value = this.getValue(value);\n    }\n\n    this.prepareLoader(value, basePath, path.concat(\"loader\"), payload);\n\n    _.set(loaders, path.concat(\"loader\"), value); //this.markChangeOn( path, true );\n\n  },\n  prepareLoader: function prepareLoader(loader, basePath, loaderPath, payload) {\n    this.deepTransformObj(loader, [], function (obj, slot, path) {\n      if (_.isString(obj) && obj.charAt(0) == \"%\") {\n        if (obj == \"%PATH\") {\n          return payload.basePath.concat(loaderPath);\n        }\n\n        payload.afterOp.push({\n          type: \"gluePin\",\n          dest: loaderPath.concat(path),\n          pin: obj.substring(1),\n          isLoader: true\n        });\n        return {\n          x: 12\n        };\n      }\n    });\n  },\n  deepTransformObj: function deepTransformObj(obj, path, test) {\n    if (!obj || !_.isObject(obj)) return;\n\n    for (var i in obj) {\n      var value = test(obj[i], i, path.concat([i]));\n\n      if (value !== undefined) {\n        obj[i] = value;\n        continue;\n      }\n\n      if (_.isObject(obj[i])) this.deepTransformObj(obj[i], path.concat([i]), test);\n    }\n  },\n  setMap: function setMap(map) {\n    for (var i in map) {\n      this.setCombined(i, map[i]);\n    }\n  },\n  getFromDispatch: function getFromDispatch(path) {\n    return this.getValue(path);\n  },\n  getVersion: function getVersion(path) {\n    var route = path.split(\".\");\n    var version = -1;\n    var versionsTree = this.state.version;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n      if (!versionsTree[slot]) return version;\n      versionsTree = versionsTree[slot];\n      if (versionsTree.version) version = versionsTree.version;\n    }\n\n    return version;\n  },\n  getVersionTree: function getVersionTree(path) {\n    var versionsTree = this.state.version;\n    return _.get(versionsTree, path);\n  },\n  updateVersionForAll: function updateVersionForAll(path) {\n    for (var i = 0; i < path.length; i++) {\n      _.set(this.state.version, path.slice(0, i).concat(\"version\"), this.state.currentVersion);\n      /*\n      \n      var node = _.get( this.state.version, path.slice(0,i) );\n      if ( !node ) break;\n      if ( node.version ) node.version = this.state.currentVersion;\n      */\n\n    }\n  },\n  updateVersion: function updateVersion(path) {\n    _.set(this.state.version, path + \".version\", this.state.currentVersion);\n  },\n  objectDiff: function difference(oldObject, newObject) {\n    function changes(oldO, newO) {\n      if (!_.isObject(oldO) || !_.isObject(newO)) return {\n        change: {\n          from: oldO,\n          to: newO\n        }\n      };\n      var result = {};\n      var hasChanges = false;\n\n      for (var i in newO) {\n        if (oldO[i] === undefined) {\n          result[i] = {\n            change: {\n              from: undefined,\n              to: newO[i],\n              type: \"added\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isFunction(newO[i]) && oldO[i] && newO[i].toString() != oldO[i].toString()) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"function changed\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isObject(newO[i])) {\n          var subChanges = changes(oldO[i], newO[i]);\n\n          if (subChanges) {\n            result[i] = subChanges;\n            hasChanges = true;\n          }\n        } else if (newO[i] != oldO[i]) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"changed\"\n            }\n          };\n          hasChanges = true;\n        }\n      }\n\n      for (var i in oldO) {\n        if (newO[i] === undefined) {\n          hasChanges = true;\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: null,\n              type: \"deleted\"\n            }\n          };\n        }\n      }\n\n      return hasChanges ? result : null;\n    }\n\n    return changes(oldObject, newObject);\n  },\n  act: function act(path, args, tb) {\n    var value = _.isObject(path) ? path : this.getValue(path);\n\n    if (!tb) {\n      tb = this.tb();\n    }\n\n    var act = ACT.init(value, this, args, path, tb);\n    return act;\n  },\n  tb: function tb() {\n    var tb = TB.init({}, this, null, {}, {}, {});\n    return tb;\n  }\n};\n\nvar DataManager = _DataManager.setup();\n\nvar ACT = {\n  master: null,\n  actions: null,\n  args: null,\n  init: function init(actions, master, args, path, tb) {\n    var item = Object.create(this);\n    item.master = master;\n    item.actions = actions;\n    item.args = args;\n    item.path = path;\n    item.tb = tb;\n    return item;\n  },\n  run: function run(name, args) {\n    return this.actions[name].apply(this.actions, [args, this.tb]);\n  }\n};\nvar TB = {\n  master: null,\n  logger: null,\n  spec: null,\n  step: null,\n  cache: null,\n  v: null,\n  init: function init(wallet, master, logger, spec, step, cache) {\n    var item = Object.create(this);\n    Object.assign(item, {\n      wallet: wallet,\n      master: master,\n      logger: logger,\n      spec: spec,\n      step: step,\n      cache: cache\n    });\n    item.v = {};\n    return item;\n  },\n  act: function act(path, args) {\n    var act = this.master.act(path, args, this);\n    return act;\n  },\n  go: function go(name, args) {\n    if (!this.toolbox) this.toolbox = DataManager.getValue(\"toolBox\");\n\n    if (!this.toolbox[name]) {\n      console.log(\"no \", name);\n      return null;\n    }\n\n    if (this.toolbox[name].run) return this.toolbox[name].run(args, this);else if (_.isFunction(this.toolbox[name])) return this.toolbox[name](args, this);\n  },\n  path: function path() {\n    return this.step.srcPath.join(\".\");\n  },\n  fetch: function fetch(paths, target) {\n    return this.run_fetch(paths, target);\n  },\n  run_fetch: function run_fetch(paths, target, prefix) {\n    var _this5 = this;\n\n    var singlePath = false;\n\n    if (_.isString(paths) || paths.KEY) {\n      singlePath = true;\n      paths = {\n        SINGLEPATH: paths\n      };\n    }\n\n    var values = {};\n    this.master.fetchValues(values, paths, this.wallet, this.master, {\n      add: function add(path, slot) {\n        if (!_this5.logger) return;\n        var name = slot !== \"SINGLEPATH\" ? (prefix || []).concat(slot) : prefix || [];\n\n        _this5.logger.add(path, name.join(\".\"));\n      }\n    }, true);\n\n    for (var i in values) {\n      if (values[i] && values[i].type == \"routes\") {\n        var subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n        values[i] = this.run_fetch(values[i], null, subPrefix);\n      } else if (values[i] && values[i].type == \"value\") {//let subPrefix = i != \"SINGLEPATH\" ? (prefix || [] ).concat( i ) : prefix;\n        //values[ i ] = this.run_fetch( values[ i ], null, subPrefix )\n      } else if (values[i] && _.isString(values[i]) && values[i].charAt(0) == \"$\") {\n        var _subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n\n        values[i] = this.run_fetch(values[i].substring(2), null, _subPrefix);\n      }\n    }\n\n    if (singlePath) values = values.SINGLEPATH;\n\n    if (target) {\n      if (target.src) {\n        var src = values.src;\n        delete values.src;\n\n        _.merge(target.src, src);\n      }\n\n      Object.assign(target, values);\n      return target;\n    } else {\n      return values;\n    }\n  },\n  pathOf: function pathOf(path) {\n    var path = this.v.src[path];\n    if (path.key) return path.key;\n    if (_.isString(path)) return path;\n  },\n  set: function set(path, value) {\n    var target = this.v;\n    var route = _.isString(path) ? path.split(\".\") : path;\n    var last_src = null;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n\n      if (target.src && target.src[slot]) {\n        last_src = {\n          src: target.src[slot],\n          left: route.slice(i + 1)\n        };\n      }\n\n      if (!target[slot]) {\n        break;\n      }\n\n      target = target[slot];\n    }\n\n    if (last_src) {\n      var basePath = _.isString(last_src.src.key) ? last_src.src.key.split(\".\") : last_src.src.key.path;\n      var fullPath = basePath.concat(last_src.left).join(\".\");\n      this.master.set(fullPath, value);\n    }\n  },\n  detach: function detach() {\n    var detached = Object.create(this);\n    detached.v = {};\n    detached.logger = null;\n    return detached;\n  },\n  feed: function feed(path) {\n    var feedModel = this.master.getValue(path);\n    var feed = feedModel.init();\n    var start = 1;\n\n    for (var i = start; i < arguments.length; i++) {\n      feed.in(arguments[i]);\n    }\n\n    return feed;\n  }\n};\n\ntry {\n  if (!window.DataManager) {\n    window.DataManager = DataManager;\n    window._DataManager = _DataManager;\n  } //eval( 'export default DataManager' );\n\n} catch (e) {}","module.exports = __webpack_public_path__ + \"static/media/logo.06a44ff7.svg\";"],"sourceRoot":""}
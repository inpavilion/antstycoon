{"version":3,"sources":["units/units/db.js","components/CodeMirrorEditor.js","managers/KeyboardManager.js","managers/TimerManager.js","units/main.js","units/units/brand.js","units/units/bubbleBoard.js","units/units/bubbleFlow.js","units/units/bubbleGuns.js","units/units/bubbleTest.js","units/units/bubbleTypes.js","units/units/parseStringIntoComp.js","units/units/prettyScode.js","units/units/reactAssembler.js","components/MyInput.js","units/units/reactUtils.js","units/units/store.js","units/units/testDataGenerator.js","units/units/testMolds.js","units/units/testTplAssembling.js","units/units/tplObjParse.js","units/units/treeCardsBuilder.js","units/units/treeIterator.js","units/units/uids.js","units/init.js","units/index.js","FlatAnt1.js","App.js","serviceWorker.js","index.js","../../data-department/dataManager.js","logo.svg"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","faker__WEBPACK_IMPORTED_MODULE_1__","faker__WEBPACK_IMPORTED_MODULE_1___default","pouchdb__WEBPACK_IMPORTED_MODULE_2__","cu","window","ub","ctx","serialize","obj","_","cloneDeepWith","value","isFunction","TYPE","body","toString","deserialize","item","fn","eval","e","save","id","db","this","uid","generateUid","_id","get","then","doc","rev","_rev","put","i","catch","err","load","_this","cfg","state","nextId","prefix","init","name","PouchDB","auto_compaction","Date","getTime","Math","random","Object","create","destroy","alert","test","result","x","y","obj2","run","def","debug","require","Component","DataManager","KeyboardManager","setup","isInitialized","$","on","evt","handleKey","setTrigger","layout","getValue","altKey","push","ctrlKey","metaKey","shiftKey","key","toLowerCase","comb","join","action","TimerManager","wallet","timers","start","delay","clearTimeout","timer","setTimeout","cancel","date","set","end","getColor","seed","hue","color","chroma","hsl","count","str","charCodeAt","getRandom","sin","floor","scale","max","pointsStar","polies","_loop","j","map","points","col","classname","round","concat","brand","getLogo","logo","console","log","bubbleBoard","addItem","getId","mergeItem","data","minStep","changed","appendTo","results","versions","isReady","undefined","completedAt","rewindTo","tb","onchanged","step","createdAt","values","items","hasChanges","slot","bubbleid","isString","charAt","substring","isObject","isMatch","version","evalItems","affected","_evalItems","isCompleteValues","evalItem","node","getNode","bubble","defaultsDeep","trails","rels","bellow","above","uses","checkIfComplete","type","tpl","val","master","evaluateflow","getVersion","bubbleFlow","fns","doubleCheck","evaluate","target","checks","check","shaddow","score","subs","total","resolved","unresolved","tplParams","defined","parameters","mold","param","model","v","targetId","opt","_setup","assign","shaft","fullPath","getFull","route","base","relPath","fetch","it","collection","cb","oldValues","info","sub","paths","stateCurrentId","currentItem","targetid","path","compile","clues","needes","provides","collections","subScore","params","undefinedCount","length","definedCount","bubbleGuns","bubbleTypes","dispatch","bubbleTest","nodeType","tplObjParse","viewAs","dataNode","reactNode","neededValues","reactAssembler","op","cues","pins","mirror","description","newItem","cloneDeep","bubbles","cache","newId","newValues","mirrorBubble","types","phase1","html","trim","nest","document","createElement","innerHTML","specs","childNodes","el","spec","_spec","nodeValue","props","attributes","attr","indexOf","replace","all","char","toUpperCase","class","className","style","_style","componentName","nodeName","children","htmlSlot","keys","forEach","child","match","reg","css","exec","phase2","attrs","_this2","payload","ops","watchAttrs","isArray","iterate","sort","a","b","stage","opValues","handleObj","childrenPath","subPath","handleProp","pin","parent","addOp","prepareAction","concatOp","_this3","split","filter","index","concatParent","parseStringIntoComp","nextUID","makestr","indent","usequouts","js_beautify","indent_size","indent_level","preserve_newlines","max_preserve_newlines","indent_inner_html","trimStart","lines","isObjectLike","isNil","beautify","prettyScode","getter","applyOps","tplid","newOps","MyInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","setState","nextProps","text","React","customComponents","myinput","makeComponent","flattenDeep","component","error","reactUtils","tplComponent","createStore","hapi","store","tpls","parents","change","runWith","src","getItem","getSubs","registerTpl","args","cases","faker","company","catchPhrase","setter","level","generated","uuid","arrayElement","oldPayload","prepare","ret","integrate","addPayload","_case","testDataGenerator","parser","testMolds","parseTpl","renderTpl","assembleTpl","molds","iterateBubbles","shouldAssemble","isRegistered","addBubble","computedAtStep","uids","addedAtStep","inputs","salut","testTplAssembing","value_setter","content","#test","tplId","isUnparsedTpl","isList","parseHtml","_check","payload1","tplsMapping","defaultTpl","usedGlobalStyles","addSubs","nodes","card","useTemplate","skipGlobalStyle","root","globalStyle","title","getMolds","buildTpls","iterator","addGlobalStyles","gbs","styles","makeSelector","treeCardsBuilder","repo","mappings","treeIterator","mub","tests","pending","passes","shift","group","groupEnd","ctxpins","newAPI","TimerManagerBuilder","showhud","currentView","placeorder","which","flow","place","restart","parseinput","parse","select","setCombined","input","substr","editStartedAt","firstCharAt","myUB","antsDbState","getParent","actions","main","prevStep","startedAt","add","merge","getWallet","ant","placedAt","mapview","mergeRoot","loader","fnsub","make","old","setupAll","makeUb","tb.db","goSetup","extra","autostart","waiting","c","onready","promise","Promise","resolve","opts","loadItems","saveItems","request_save","setupUb","getItemsToSave","promises","ant1","loadMap","startIds","related","ids","generateId","triggerChange","setRel","rel","mapView","frame","topic","entry","other","bridgeTitle","mapTitle","uistate","rows","selected","otherTpl","moldsMap","cardMold","background","getBody","setV","memo","cleanV","list","getBodyList","isSelected","moldName","titleMold","row","_this4","onbeforeunload","saveAll","loadAll","_this5","tosave","savings","saveitem","loaditem","onload","runOn","starter","done","bubbleitem","orderText","order","viewState","view","changeOrder","bumbAction","placeOrder","dim","height","width","barHeight","label","bubbleList","bumb","textColor","historyManager","recording","runToStart","Frame","_this6","_this7","components","FlatAnt","_this8","scode","react_default","FlatAnt1_Frame","App","FlatAnt1","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","currentStack","stacks","startStack","stack","prevStack","addInfo","skipClone","endStack","_DataManager","gettingValue","meta","loadersCache","triggers","currentVersion","dependencies","agenda","names","tasks","toStart","flags","setCtx","basePath","ctxPath","getCtx","runFn","fnName","pop","targetPath","getInfluenced","influenced","dep","skipPartialValueCheck","checkCache","partialPath","slice","partialResult","partialSlot","partialValue","makeList","listToValue","setCache","shouldUpdate","ignoreUpdates","prepareCache","contains","dependsOn","diffCache","oldCache","addDependency","remDependency","newC","oldC","updateVersionsMap","depOn","walletValue","srcPath","rootPath","_item","_i","silentSet","skipPathAffected","getAffectedPaths","postponedSteps","hasSteps","snoozeCount","getFromLoader","addLog","lhs","rhs","cachedValue","xcache","requester","force","logger","prism","loadedPrism","getFromDispatch","_value","TB","skipCache","runUtils","apply","mergeValue","oldValue","changedPaths","addPath","pauseAll","setObObj","updateVersionForAll","req_triggers","runningReqTriggers_timer","clearInterval","runningAgendaTriggers_timer","setInterval","callback","stop","requestAnimationFrame","stopFn","asyncTriggers","affected_checked","lazy_checkTriggers","req_Agenda","asyncTriggersAgenda","trigger","runTrigger","listener","token","sortAgenda","taskA","taskB","salience","source","appendToArray","setVersion","setByLoader","isLoaders","strPath","markChangeOn","skipTrigger","markChangedPaths","checkTriggers","setUpdateFlag","runTriggers","fetchValues","onlyPaths","_path","_path2","KEY","loaders","loadersPaths","afterOp","isEmpty","currentPins","_pin","pinKey","isLoader","dest","hasVersion","updateVersion","hasLoaders","lPath","buildModel","tokens","modelName","MODEL","handleTokens","modelObj","modelSpec","_value2","newObj","setLoader","getStaticValue","getUID","getTrigger","remTrigger","listenerPath","oldTrigger","loaderPath","destination","prepareLoader","deepTransformObj","setMap","versionsTree","getVersionTree","objectDiff","oldObject","newObject","changes","oldO","newO","from","to","subChanges","act","ACT","go","toolbox","run_fetch","singlePath","SINGLEPATH","subPrefix","_subPrefix","pathOf","last_src","left","detach","detached","feed","arguments","in","module","exports","p"],"mappings":"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","file":"static/js/main.3faa7a42.chunk.js","sourcesContent":["import _ from \"lodash\"\nimport faker from \"faker\"\nimport PouchDB from \"pouchdb\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {},\n\n    serialize : function( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( _.isFunction( value ) ) return { TYPE : \"FN\", body : value.toString() };\n        })\n\n        return item;\n    },\n\n    deserialize : function ( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( value && value.TYPE == \"FN\" ) {\n                let fn;\n                try  { \n                    eval( \"fn=\" + value.body )\n                } catch (e ) {\n\n                }\n                return fn;\n            } \n        })\n\n        return item;\n    },\n\n    save: function (value, id) {\n        var db = this.ctx.db;\n\n        let item = this.serialize( value );\n        if (!item.uid) item.uid = id || item.id || this.generateUid();\n        if (!item._id) item._id = item.uid;\n  \n        return db.get(item._id)\n          .then((doc) => {\n            let rev = doc.rev;\n            let _rev = doc._rev;\n\n            item.rev = rev;\n            item._rev = _rev;\n            return db.put(item).then( ( i)=> {\n            })\n          })\n          .catch(err => {\n            return db.put(item);\n          })\n\n\n\n    },\n\n\n\n    load: function (id) {\n        return this.ctx.db.get(id).catch( e => {\n            return null\n        })\n        .then ( item => {\n            if ( item ) item = this.deserialize( item );\n            return item;\n        })\n    },\n\n\n    generateUid : function ( ) {\n        this.cfg.state.nextId++;\n        return this.cfg.state.prefix + \"_\" + this.cfg.state.nextId;\n    },\n\n    init: function (name) {\n        let ctx = {\n            db: new PouchDB(name, {auto_compaction: true}),\n            state: {\n                prefix: new Date().getTime().toString() + \"_\" + Math.random().toString(),\n                nextId: 0,\n                id : \"state\"\n            }\n        }\n\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        item.load(\"state\").then(state => {\n            if ( state ) item.ctx.state = state\n            else item.save( item.ctx.state )\n        })\n\n        return item;\n    },\n\n    destroy : function ( ) {\n        this.ctx.db.destroy( ) \n            .then ( () => {\n\n                alert( \"done cleanup\")\n            })\n    }\n\n}\n\nvar test = (result) => {\n    result.obj = ub.serialize( {x : function ( ) {} , y : \"test\"})\n\n    result.obj2 = ub.deserialize( result.obj );\n\n    ub.init(\"testdb\")\n}\n\n\ncu.db = {\n    //test,\n    run: function (name) {\n        return ub.init(name);\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/javascript/javascript');\n\nclass CodeMirrorEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.changeValue = this.changeValue.bind(this);\n    this.changeCursor = this.changeCursor.bind(this);\n    this.isBlured = this.isBlured.bind(this);\n  }\n\n  changeValue(editor, data, value) {\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    //window.editor = editor;\n\n\n    let cursor = editor.getCursor();\n    if (data.origin != undefined) {\n      this.props.valueChanged({ scode: value, cursor: { line: cursor.line, ch: cursor.ch } });\n    }\n    else {\n      this.props.valueChanged({ scode: value })\n    }\n\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n  }\n\n  changeCursor(editor, cursor) {\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n\n    if (cursor.sticky == undefined) return;\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    this.props.valueChanged({ cursor: { line: cursor.line, ch: cursor.ch } });\n\n  }\n  isBlured() {\n    if (this.props.blured)\n      this.props.blured()\n  }\n\n  render() {\n\n    //this means that setting the value with null will delete the value from wallet ?!?\n    let text = this.props.data.scode || \"\";\n    if (!text.length) text = \"\";\n\n    let cursor = this.props.data.cursor;\n    if (!cursor || !cursor.ch) cursor = 0;\n\n    let popup;\n    let caret = this.state.caret || { right : 0, bottom : 0} \n    if (caret) {\n\n      let left = caret.right + 30;\n      let top = caret.bottom + 0;\n\n      popup = <div className=\"popup\" style={{ transform: \"translate(\" + left + \"px ,\" + top + \"px)\", zIndex: 100 }} > Salut  </div>\n    }\n    else popup = null;\n\n    let style = `\n      .popup { border : 1px solid #999; background : #bbb; padding : 10px; min-width:40px; width : 100px; transition : all 0.2s ease; }\n\n      .popup { opacity : 0.05; position : absolute;pointer-events: none;}\n    `\n    return <div style={{position:\"relative\"}}>\n      <style>{style}</style>\n      {popup}\n      <CodeMirror\n        value={text}\n\n        options={{\n          mode: 'javascript',\n          lineNumbers: true, \n          smartIndent : true,\n        }}\n\n        autoCursor={false}\n\n        cursor={cursor}\n        ///onBeforeChange={this.changeValue}\n        onChange={this.changeValue}\n        onCursor={this.changeCursor}\n        onBlur={this.isBlured}\n      />\n    </div>\n  }\n}\n\nexport default CodeMirrorEditor;","import React, { Component } from 'react';\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"../libs/dataManager\";\nvar DataManager = window.DataManager;\n\n\nvar KeyboardManager = {\n    setup: function () {\n        if (this.isInitialized) return;\n\n        $(\"body\").on(\"keydown\", (evt) => {\n            this.handleKey(evt)\n        })\n\n        DataManager.setTrigger(\"keyboardShortcuts.layout\", \"kbdManager\", {\n            run: () => {\n                this.load();\n            }\n        })\n        this.load();\n    },\n\n    load: function () {\n        let layout = DataManager.getValue(\"keyboardShortcuts.layout\");\n        this.layout = layout || {};\n    },\n\n    handleKey: function (evt) {\n        var name = [];\n        if (evt.altKey) name.push(\"alt\");\n        if (evt.ctrlKey) name.push(\"ctrl\");\n        if (evt.metaKey) name.push(\"meta\");\n        if (evt.shiftKey) name.push(\"shift\");\n\n        name.push(evt.key.toLowerCase())\n        let comb = name.join(\"+\");\n\n        if (this.layout[comb])\n            return this.run(this.layout[comb], comb)\n    },\n\n    run: function (action,comb) {\n        if (_.isFunction(action)) return action(comb, action);\n        else if (action.run)\n            return action.run(comb, action)\n    }\n}\n\nKeyboardManager.setup();\n\nexport default KeyboardManager","var TimerManager = {\n    init : function ( DataManager ) {\n      var item = Object.create( this );\n\n      item.DataManager = DataManager;\n      item.wallet = {timers : {} }\n      return item;\n    },\n    wallet: { timers: {} },\n  \n    start: function (name, action, delay) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n  \n      var timer = window.setTimeout(() => {\n        this.cancel( name );\n        action(name, action, delay);\n      }, delay)\n  \n      this.wallet.timers[name] = timer;\n\n      let date = new Date();\n      this.DataManager.set(\"TimerManager.timer.\"  + name , { start : date.getTime(), end : date.getTime() + delay })\n    },\n  \n    cancel: function (name) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n      delete this.wallet.timers[name]\n      this.DataManager.set(\"TimerManager.timer.\"  + name , \"\")\n\n    }\n  }\n\n  export {TimerManager};","\nvar cu = {}\n\nwindow.cu = cu;\n\nexport default cu;\n","import _ from \"lodash\"\nimport faker from \"faker\"\nimport chroma from \"chroma-js\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    getColor : function ( seed ) {\n\n        let hue = seed * 360;\n        let color = chroma(\"#007abc\").set(\"hsi.h\", hue).hsl();\n    \n        color[1] = color[1] * 100;\n        color[2] = color[2] * 100;\n\n        return color;\n    },\n    get : function ( seed, count)  {\n\n        var str = seed; //faker.lorem.sentence(10);\n        var seed = 0;\n        for (var i in str) {\n          seed += str.charCodeAt(i) * i\n        }\n        function getRandom() {\n          var x = Math.sin(seed++) * 10000;\n          return x - Math.floor(x);\n        }\n\n        count = Math.max( 2, Math.floor( (getRandom() * 5 )) )\n\n        \n        \n        let scale =  50 / count ;\n\n        let color = this.getColor( getRandom() );\n\n        let pointsStar = [\n            [0, 0, 0.5, 0.5, 1, 0],\n            [0, 0, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 1, 0],\n        ]\n\n\n        \n        let polies = [];\n        for (var i = 0; i < count; i++) {\n          for (var j = 0; j < count; j++) {\n              let lum = 10; //points[i][j];\n              let x = i;\n              let y = j;\n              let poly = pointsStar.map((points) => {\n                let col = \"hsl( \" + color[0] + \",\" + color[1] + \"% ,\" + (color[2]) + \"%  )\";\n                let classname = Math.round( getRandom( ) * 5 );\n                polies.push(`<polygon\n                  class='poligon poligon_${classname}'\n                  points=\"` + points.join(\" \") + `\" stroke=\"transparent\" fill=\"transparent\" \n                  style=\" strokeWidth: ` + (1 / scale) + `;\n                  fill: `+ col + `;\n                  opacity : `+ getRandom() + `; \n                  transform: scale(` + scale + `) translate( ` + x + `px, ` + y + `px)\" />`)\n\n              })\n            }\n          }\n\n        return \"<svg> \" + polies.join( \"\" ) + \"</svg>\"\n\n\n    }\n}\n\nvar test = (result) => {\n    \n}\n\ncu.brand = {\n    //test,\n\n    getLogo: function (seed, scale, count) {\n        let logo=  ub.get(seed,  count );\n        console.log( logo )\n        return logo;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleBoard = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n\n    addItem : function ( obj ) {\n        let id = this.getId();\n        obj.id = id;\n        this.mergeItem( id, obj );\n        return id;\n    },\n\n    getId : function ( ) {\n        this.ctx.data.state.nextId++;\n\n        let id = \"bubble_\" + this.ctx.data.state.nextId;\n\n        return id;\n    },\n    mergeItem: function (id, value) {\n        let ctx = this.ctx;\n        let result = ctx.data.result[id];\n\n\n        ctx.changed = {};\n\n        this.appendTo(id, value)\n\n        let minStep;\n        let results = ctx.data.result;\n        let changed = ctx.changed;\n\n        console.log( ctx.data );\n        let versions = ctx.data.versions;\n\n        for ( var i in changed ) {\n            if ( !versions[i] ) versions[i] = 0;\n            versions[i]++;\n            let result = results[ i ];\n            if ( !result ) continue;\n            if ( !result.isReady ) continue;\n            if ( minStep == undefined ) minStep = result.completedAt;\n            if ( minStep > result.completedAt ) minStep = result.completedAt;\n        }\n\n        if (minStep !== undefined) {\n            this.rewindTo(minStep)\n        }\n\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( changed )\n        \n        return minStep;\n    },\n\n    rewindTo: function (step) {\n        let ctx = this.ctx;\n        for (var id in ctx.data.result) {\n            let result = ctx.data.result[id];\n            if (result.isReady && (result.completedAt >= step || result.createdAt > step)) {\n                result.isReady = false;\n                result.completedAt = 0;\n            }\n        }\n\n        ctx.data.step = step;\n    },\n\n    appendTo: function (id, values) {\n        let ctx = this.ctx;\n        let item = ctx.data.items[id];\n        let hasChanges = false;\n\n        if (!item) {\n            ctx.data.step++;\n            ctx.data.items[id] = item = {}\n            ctx.data.result[id] = { createdAt: ctx.data.step }\n            hasChanges = true;\n        }\n\n        for (var slot in values) {\n            let value = values[slot];\n            if ( value == \"REMOVE\" && item[slot] !== undefined ) {\n                delete item[slot];\n                hasChanges = true;\n                continue;\n            }\n            if ( value === null && item[slot] !== undefined ) {\n                delete item[slot]\n                hasChanges = true;\n                continue;\n\n            }\n\n            if ( !value ) continue;\n\n            let bubbleid = item[slot] ? item[slot].id : null;\n            if (_.isString(value) && value.charAt(0) == \"#\") {\n                value = {id : value.substring(1) };\n            }\n\n            if ( value.id !== undefined) {\n                if ( value.id == \"#\"  || value.id==\"\" ) value.id = null;\n                value.id = value.id || bubbleid || this.getId();\n                item[slot] = { id: value.id };\n            }\n\n\n            if (value.id && _.isObject(value)) {\n                if ( value.id != bubbleid ) hasChanges = true;\n                this.appendTo(value.id, value)\n            }\n\n            else if ( _.isObject( value ) && !_.isMatch(item[slot], value )) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n            else if ( item[slot]!=value) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n\n        }\n\n        if( hasChanges ) {\n            if ( item.version ) {\n                item.version = item.version ? item.version+1 : 1;\n            }\n            this.ctx.changed[ id ] =true;\n        }\n    },\n\n    evalItems: function (count) {\n        this.ctx.affected = {};\n        this._evalItems( count );\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( this.ctx.affected )\n        \n    },\n\n    _evalItems : function ( count ) {\n\n        if (count<=0) return;\n\n        let ctx = this.ctx;\n\n        let hasChanges = false;\n\n        for (var id in ctx.data.items) {\n            let item = ctx.data.items[id];\n            let result = ctx.data.result[id];\n\n            if (result && result.isReady) continue;\n            let values = this.isCompleteValues(item, id);\n            if (values) {\n                if (!ctx.data.result[id]) ctx.data.result[id] = {};\n\n                this.evalItem(item, id, values, ctx.data.result[id]);\n                if ( ctx.data.result[id].isReady )\n                    hasChanges = true;\n            }\n        }\n\n\n        if (hasChanges) this._evalItems(count - 1);\n    },\n\n    evalItem: function (item, id, values, result) {\n        let ctx = this.ctx;\n\n        result.isReady = true;\n        result.values = values;\n\n        let node = this.ctx.tb.getNode(item, values, result, ctx);\n        if ( node ) \n            result.node = node;\n\n        if ( result.isReady ) {\n            ctx.data.step++;\n            result.completedAt = ctx.data.step;\n            this.ctx.affected[ id ] = true;\n        }\n\n    },\n\n    isCompleteValues(item) {\n        //if (!this.ctx.tb.checkIfComplete(item)) return false;\n\n        let ctx = this.ctx;\n\n        let values = {};\n\n        let bellow = [];\n\n        for (var slot in item) {\n            let value = item[slot];\n            if (value.id) {\n                let bubble = ctx.data.result[value.id];\n\n                if (!bubble || !bubble.isReady) return false;\n\n                let node = bubble.node;\n\n                if ( item[slot+\"_path\"]) {\n                    node = _.get( node, item[slot+\"_path\"] )\n                }\n\n                values[slot] = node;\n            }\n            else values[slot] = value\n        }\n\n        return values;\n    },\n\n    init: function (ctx) {\n        let item = Object.create(this);\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data : {\n                items : {},\n                result : {},\n                step : 1,\n                versions : {},\n                trails : {},\n                rels : {\n                    bellow : {},\n                    above  : {},\n                    uses   : {}\n                },\n\n                state : {\n                    nextId : 8\n                }\n            },  \n            tb: {\n                checkIfComplete: (item) => item.type || item.tpl || item.node,\n                getNode: (item, values, result) => { return { val: values, x: item.tpl } }\n            }\n        })\n\n        ctx.master = item; \n        return item;\n    },\n\n    evaluateflow : function () {\n        this.evalItems(5);\n    },\n\n    getVersion : function ( id ) {\n        let item = this.ctx.data.items[ id ];\n\n        if ( !item ) return null;\n        return item.version;\n    }\n}\n\nvar test = (result) => {\n    let ctx = {\n        data: {\n            items: {},\n            result: {},\n            versions : {},\n            ants : {},\n            step: 1,\n        }\n    }\n\n    let nub = ub.init(ctx);\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salut\",\n        testval: \"#\"\n    })\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n    nub.evalItems(0);\n\n\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n\n\n    nub.evalItems(0);\n\n\n    result.ctx = ctx;\n}\n\ncu.bubbleFlow = {\n    //test,\n\n\n    run: function (ctx) {\n        return ub.init( ctx );\n    },\n    init: function () {\n\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\nvar fns = {}\n\nvar ub = {\n\n    ctx: {\n    },\n\n    doubleCheck: function (id) {\n        let tb = fns.evaluate.setup({ data: this.ctx.data, state: this.ctx.state }).target(id);\n\n        for (var i in checks)\n            tb.run(checks[i])\n    },\n\n    check: function (id) {\n        let item = this.ctx.data.items[id];\n        let result = this.ctx.data.result[id];\n        let shaddow = this.ctx.data.shaddow[id];\n\n        if (!shaddow)\n            shaddow = this.ctx.data.shaddow[id] = {}\n\n        let results = this.ctx.data.result;\n\n        let score = shaddow.score = {\n            subs: {\n                total: 0,\n                resolved: [],\n                unresolved: []\n            },\n        };\n\n        for (var slot in item) {\n            if (item[slot].id) {\n                score.subs.total++;\n\n                if (results[item[slot].id] && results[item[slot].id].isReady)\n                    score.subs.resolved.push({ slot: slot, id: item[slot].id });\n                else\n                    score.subs.unresolved.push({ slot: slot, id: item[slot].id });\n\n            }\n        }\n\n        if (result && result.values && result.values.tpl) {\n            let tpl = result.values.tpl;\n            score.tplParams = { total: 0, defined: 0, resolved: 0, unresolved: [] }\n            let parameters = tpl.mold.parameters;\n\n            for (var param in parameters) {\n                score.tplParams.total++;\n                if (result.values[param] || item[param]) {\n                    score.tplParams.defined++;\n                }\n                else {\n                    score.tplParams.unresolved.push(param)\n                }\n            }\n        }\n\n    },\n\n    setup: function (ctx) {\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data: {\n                items: {},\n                result: {},\n                shaddow: {},\n                trails: {}\n            }\n        })\n\n        return item;\n    }\n}\n\n\n\nfns.evaluate = {\n    target: function (id) {\n\n        let model = this.model || this;\n\n        var item = Object.create(model);\n\n        item.model = model;\n\n        item.setup();\n\n        item.v.targetId = id;\n\n        return item;\n    },\n    setup: function (opt) {\n        this._setup(opt);\n        return this;\n    },\n    _setup: function (opt) {\n        if (opt) Object.assign(this, opt)\n\n        if (this.model && this.model.shaft) {\n            this.shaft = {};\n        }\n\n        this.v = { result: {} };\n    },\n    get: function (key) {\n        if (!_.isString(key)) return key;\n        let id = this.v.targetId;\n\n        let fullPath;\n        if (key == \"values\")\n            fullPath = [\"result\", this.v.targetId, \"values\"]\n        if (key == \"item\")\n            fullPath = [\"items\", this.v.targetId]\n        else\n            fullPath = [key, \"id\"];\n        return _.get(this.data, fullPath)\n    },\n\n    getFull: function (route) {\n        let base = route[0];\n        let id = route[1];\n        let relPath = route[2];\n\n        if (!base) base = \"items\";\n        if (base == \"item\") base = \"items\";\n\n        if (!id) id = this.v.targetId;\n\n        let fullPath = [base, id]\n        if (relPath) fullPath.push(relPath);\n\n        return _.get(this.data, fullPath.join(\".\"))\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.v[i] = this.getFull(map[i])\n        }\n        return this;\n    },\n\n    it: function (collection, cb) {\n        collection = this.get(collection);\n\n        //let subTb = Object.create( this );\n        //subTb.v  = Object.create( this.v )\n\n        //prepare\n        let subTb = this;\n        let oldValues = {\n            slot: subTb.v.slot,\n            value: subTb.v.value,\n            info: subTb.v.info,\n            sub: subTb.v.sub\n        }\n        subTb.v.slot = null;\n        subTb.v.value = null;\n        subTb.v.info = null;\n        subTb.v.sub = null;\n        for (var i in collection) {\n            subTb.v.slot = i;\n            subTb.v.value = collection[i];\n            subTb.v.info = i;\n            subTb.v.sub = {};\n            cb(subTb, subTb.v)\n        }\n\n        //cleanup\n        for (var i in oldValues)\n            subTb[i] = oldValues[i]\n\n    },\n\n    run: function (cb) {\n        try {\n            let result = cb(this, this.v)\n        } catch (e) {\n            if (e && e.type == \"notApplicable\") {\n                return;\n            }\n            console.log(e)\n        }\n\n        if (this.v.result) {\n\n            if (!this.data.trails[this.v.targetId]) {\n                this.data.trails[this.v.targetId] = {};\n            }\n            Object.assign(this.data.trails[this.v.targetId], this.v.result)\n        }\n    },\n\n    result: function (name, value) {\n        this.v.result[name] = value;\n    },\n\n    check: function (paths) {\n        for (var i in paths) {\n            let path = paths[i];\n\n            if (path == \"isCurrentItem\") {\n                let stateCurrentId = this.state.currentItem.targetid;\n                if (!stateCurrentId || this.v.targetId != stateCurrentId)\n                    throw { type: \"notApplicable\", path: paths[i] }\n            }\n            else {\n                let value = _.get(this.v, paths[i]);\n                if (value === undefined) throw { type: \"notApplicable\", path: paths[i] }\n            }\n        }\n    }\n}\n\nfns.compile = Object.assign({}, fns.evaluate, {\n    setup: function (opt) {\n        this._setup(opt);\n\n        this.clues = {\n            needes: {},\n            provides: {},\n            collections: []\n        }\n\n        return this;\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.clues.needes[i] = { key: map[i] }\n            this.v[i] = { test: \"test\" }\n        }\n        return this;\n    },\n\n\n    check: function (check) {\n\n    },\n\n    result: function (name, value) {\n        this.clues.provides[name] = value;\n    },\n\n    it: function (collection, cb) {\n        this.clues.collections.push(collection)\n    },\n\n    run: function (cb) {\n        let result = cb(this, this.v);\n    }\n});\n\n\nvar checks = [\n\n    (tb, v) => {\n\n        tb.fetch({\n            item: [\"item\"]\n        })\n\n        v.score = {\n            total: 0,\n            resolved: [],\n            unresolved: []\n        }\n\n        tb.it(v.item, (tb, v) => {\n            let sub = v.value;\n            if (!sub.id) return;\n\n            v.score.total++;\n\n            let result = tb.getFull([\"result\", sub.id]);\n\n            if (!result || !result.isReady) v.score.unresolved.push(sub.id)\n            else v.score.resolved.push(sub.id)\n        })\n\n        tb.result(\"subScore\", v.score)\n        return { subScore: v.score }\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch({\n            values: [\"result\", \"\", \"values\"],\n            item: [\"item\"],\n            parameters: [\"result\", \"\", \"values.tpl.mold.parameters\"]\n        })\n\n        tb.check([\n            \"values.tpl\"\n        ])\n\n        v.score = { total: 0, defined: 0, undefined: [] }\n        v.params = {};\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n            v.score.total++;\n            if (!v.item[param] && !v.values[param])\n                v.score.undefined.push(param)\n        })\n\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n        })\n\n\n        v.score.undefinedCount = v.score.undefined.length;\n        v.score.definedCount = v.score.total - v.score.undefinedCount;\n\n        tb.result(\"tplParamsScore\", v.score);\n        tb.result(\"tplParams\", v.params)\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch(  {\n            trails : [\"trails\"],\n\n        })\n        tb.check([\n            \"isCurrentItem\"\n        ])\n\n        console.log(\"trails is currentItem\", v.trails);\n    }\n\n]\n\nvar test = (result) => {\n\n    ub.ctx.data = {\n        items: {\n            bubble1: {\n                slot1: \"salut\",\n                slot2: { id: \"bubble2\" }\n            },\n            bubble2: {\n                test: \"salut\"\n            }\n        },\n        result: {},\n        trails: {}\n    }\n\n    let tb = fns.evaluate.target(\"bubble1\");\n\n    tb.run(checks[0]);\n    tb.run(checks[1]);\n\n    result.tb = tb.v.result;\n    result.trails = ub.ctx.data.trails;\n}\n\ncu.bubbleGuns = {\n    //test,\n\n    setup: function (ctx) {\n        return ub.setup(ctx);\n    },\n    init: function () {\n\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n    ctx: {\n        tb: {\n\n            onchanged: function (changed) { },\n            getNode: function (item, values, result, ctx) {\n                return cu.bubbleTypes.dispatch.getNode(item, values, result, ctx)\n            }\n        },\n\n        data: {\n            state: {\n                nextId: 0\n            }\n        }\n    }\n}\n\n\nvar test = (result) => {\n    ub.ctx.data = { state: { nextId: 0 } };\n    ub.ctx.tb.guns = cu.bubbleGuns.setup(ub.ctx);\n    ub.ctx.tb.flow = cu.bubbleFlow.run(ub.ctx)\n\n    ub.ctx.tb.flow.mergeItem(\"item1\", {\n        id: \"item1\",\n        tpl: {\n            id: \"item2\",\n            type: \"tpl\",\n            main: \"<div style='border:1px solid #007abc'>{h1} {salut} {someothervalue}</div>\"\n        },\n        tpl_path: \"main\",\n        h1: \"noh\",\n        salut: {\n            id: \"item3\",\n            tpl: {\n                id: \"item4\",\n                type: \"tpl\",\n                main: \"<div style='border:1px solid #007abc'>{text}</div>\"\n            },\n            tpl_path: \"main\",\n            text: \"salutare\"\n        }\n    });\n\n\n    ub.ctx.tb.flow.mergeItem(\"item5\", {\n        id: \"item5\",\n        type: \"mirror\",\n        model: \"item1\",\n        data: {\n            id: \"item6\",\n            version: 1,\n            node: {\n                h1: \"hh1\",\n                salut: {\n                    text: \"hey\"\n                }\n            }\n        }\n    })\n\n\n\n    ub.ctx.tb.flow.evaluateflow();\n\n    ub.ctx.tb.flow.mergeItem(\"item6\", {\n        node: {\n            h1: \"hh11\",\n            salut: {\n                text: \"testchanged\"\n            }\n        }\n    })\n\n    ub.ctx.tb.flow.evaluateflow();\n\n\n    result.items = ub.ctx.data.items;\n    result.result = ub.ctx.data.result;\n    result.shaddow = ub.ctx.data.shaddow;\n    //result.item6_1 = ub.ctx.data.result.item5.mirror.node.children[0][0];\n    //result.item6_2 = ub.ctx.data.result.item5.mirror.node.children[0][2].children\n}\n\ncu.bubbleTest = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar type = {}\n\n\ntype.dispatch = {\n    getNode: function (item, values, result, ctx) {\n        let nodeType = values.type;\n        if (!nodeType) {\n            if (values.tpl) nodeType = \"reactNode\"\n\n            else if (values.node) nodeType = \"dataNode\"\n        }\n\n        if (nodeType && type[nodeType]) {\n            return type[nodeType].getNode(item, values, result, ctx)\n        }\n        else result.isReady = false;\n    }\n}\n\ntype.tpl = {\n    getNode: function (item, values, result, ctx) {\n        delete values.type;\n        let tpl = cu.tplObjParse.run(values);\n        result.viewAs = \"object\";\n        return tpl;\n    }\n}\n\ntype.dataNode = {\n    getNode: function (item, values, result, ctx) {\n        return item.node;\n    }\n}\n\ntype.reactNode = {\n    getNode: function (item, values, result, ctx) {\n\n        let tpl = values.tpl;\n        if (!tpl || !tpl.mold) {\n            result.isReady = false;\n            return;\n        }\n\n        let neededValues = [];\n        let node = cu.reactAssembler.run(tpl, values, (data, path, op) => {\n            let value = _.get(data, path);\n            if (value !== undefined) return value;\n            neededValues.push(path);\n            return \"dummyvalue\"\n        });\n\n        if (neededValues.length) {\n            node = [neededValues, node];\n        }\n        result.viewAs = \"reactComponent\"\n\n        result.cues = { pins: tpl.mold.pins }\n\n        return node;\n\n    }\n\n}\n\ntype.mirror = {\n\n    description: \"\",\n\n\n    getNode: function (item, values, result, ctx) {\n\n\n        let model = ctx.data.items[item.model];\n        let data = values.data;\n\n        let newItem = _.cloneDeep(model);\n\n        if (!result.bubbles) result.bubbles = {};\n        if (!result.cache) result.cache = { data: {} };\n\n        if (!_.isMatch(result.cache.data, data)) {\n            result.cache.data = data;\n\n            for (var i in newItem) {\n                if (i != \"tpl\" && newItem[i].id && data[i]) {\n                    if (result.bubbles[i]) {\n                        ctx.master.mergeItem(result.bubbles[i].id, { data: data[i] })\n                    }\n                }\n            }\n        }\n\n        for (var i in newItem) {\n            if (i != \"tpl\" && newItem[i].id && data[i]) {\n\n                if (result.bubbles[i]) {\n                    newItem[i] = { id: result.bubbles[i].id }\n                }\n                else {\n                    let newId = ctx.master.addItem({ type: \"mirror\", data: data[i], model: newItem[i].id })\n                    result.bubbles[i] = { id: newId, model: newItem[i].id };\n                }\n\n                newItem[i] = { id: result.bubbles[i].id }\n            }\n            else if (data[i]) {\n                newItem[i] = data[i]\n            }\n        }\n\n        newItem.id = item.id;\n\n        let newValues = ctx.master.isCompleteValues(newItem);\n\n        if (!newValues) {\n            result.isReady = false;\n            return;\n        }\n\n        result.mirror = {};\n        ctx.master.evalItem(item, item.id, newValues, result.mirror)\n        if (result.mirror.viewAs) result.viewAs = result.mirror.viewAs;\n        return result.mirror.node;\n    }\n}\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleTypes = {\n    //test,\n\n    mirror: type.mirrorBubble,\n\n    types: type,\n    dispatch: type.dispatch,\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar phase1 = {\n\n    run: function (html) {\n        html = html.trim();\n\n        let nest = document.createElement('div');\n        nest.innerHTML = html;\n\n        let specs = [];\n\n        for (var i = 0; i < nest.childNodes.length; i++) {\n            let el = nest.childNodes[i];\n\n            let spec = this._spec(el);\n\n            specs.push(spec);\n        }\n\n        return specs.length == 1 ? specs[0] : specs;\n    },\n\n\n    _spec: function (el) {\n\n        if (el.nodeType == 3) {\n            return el.nodeValue\n        }\n\n        let props = {};\n        for (var i = 0; i < el.attributes.length; i++) {\n            let attr = el.attributes[i];\n            let name = attr.name;\n            if (name.indexOf(\"_\") != -1) {\n                name = name.replace(/\\_(.)/g, (all, char) => { return char.toUpperCase() })\n            }\n            props[name] = attr.value;\n        }\n\n        if (props.class) {\n            props.className = props.class;\n            delete props.class;\n        }\n\n        if (props.style) {\n            props.style = this._style(props.style);\n        }\n\n\n        let spec = {\n          type: \"node\",\n          componentName: el.nodeName.toLowerCase(),\n          props: props,\n          children: null,\n      };\n\n        if ( props.htmlSlot ) {\n          props[ props.htmlSlot ] = el.innerHTML;\n          return spec;\n        }\n\n        if (Object.keys(props) == 0) props = null;\n\n        let children = []\n        el.childNodes.forEach(child => {\n            children.push(this._spec(child))\n        })\n        if (children.length == 0) children = null;\n        spec.children = children;\n\n        return spec;\n    },\n\n    _style: function (str) {\n        str = str + \";\";\n        let reg = /\\s*([^:\\s]+)\\s*\\:\\s*([^;]+)\\s*\\;+/g\n        let css = {};\n        let match;\n        while (match = reg.exec(str)) {\n            css[match[1]] = match[2]\n        }\n\n        return css;\n    },\n\n}\n\nvar phase2 = {\n    run: function (obj , attrs ) {\n      let payload = {\n        ops: [],\n        pins: {},\n        parameters : {},\n        attrs : {},\n        watchAttrs : attrs || []\n      }\n  \n      if ( _.isArray( obj ) )\n        payload.tpl = obj.map(( obj, i)  => this.iterate(obj, [i], payload) )\n      else \n        payload.tpl = this.iterate(obj, [], payload)\n\n      payload.ops.sort ( (a,b) => a.stage - b.stage )\n  \n      return { ops: payload.ops, tpl: payload.tpl, pins : payload.pins , parameters : payload.parameters, attrs : payload.attrs}\n    },\n    iterate: function (obj, path, payload) {\n      if (!obj) return;\n  \n      if (_.isString(obj)) {\n        return this.opValues(obj, path, payload, false);\n      }\n  \n      obj = this.handleObj(obj, path, payload);\n  \n      let childrenPath = path.concat([\"children\"])\n      for (var i in obj.children) {\n        obj.children[i] = this.iterate(obj.children[i], childrenPath.concat(i), payload)\n      }\n  \n      let subPath = path.concat([\"props\"])\n      for (var i in obj.props) {\n        if (i == \"style\") continue;\n        obj.props[i] = this.handleProp(obj.props[i], subPath.concat(i), obj, payload)\n      }\n  \n      if (obj.props && obj.props.style) {\n        let subPath = path.concat([\"props\", \"style\"])\n        for (var i in obj.props.style) {\n          obj.props.style[i] = this.handleProp(obj.props.style[i], subPath.concat(i), obj, payload)\n        }\n      }\n  \n      if (obj.props && obj.props.pin) {\n        payload.pins[ obj.props.pin ] = path;\n      }\n\n      if (obj.props && obj.props.id) {\n        payload.pins[ obj.props.id ] = path;\n      }\n\n      if ( obj.props )\n        payload.watchAttrs.forEach( attr => {\n            if ( !obj.props[attr] ) return ;\n            if ( !payload.attrs[attr] ) payload.attrs[ attr ] = [];\n            payload.attrs[ attr ].push({  path, value : obj.props[attr] } );\n        })\n  \n      return obj;\n    },\n  \n    handleObj: function (obj, path) {\n      return obj;\n    },\n  \n    handleProp: function (obj, path, parent, payload) {\n      if (!_.isString(obj)) return obj;\n  \n      return this.opValues(obj, path, payload, true)\n    },\n    addOp: function (payload, path, op) {\n\n        if ( !op.stage ) op.stage = 0;\n      payload.parameters[ op.action ] = op.path;\n      payload.ops.push(op)\n    },\n  \n    prepareAction: function (item) {\n      return item;\n    },\n    opValues: function (value, path, payload, concatOp) {\n      if (!_.isString(value)) return value;\n      if (value.indexOf(\"{\") == -1) return value;\n  \n      let ops = payload.ops;\n      let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}/g);\n      values = values.map((item, i) => {\n        if (item == \"\") return null\n        if (item.charAt(0) !== \"{\") return item;\n  \n        item = item.substring(1);\n        let action = this.prepareAction(item)\n        return { type: \"value\", action: action };\n      })\n        .filter(item => item)\n  \n  \n      if (values.length == 0) return null;\n      else if (values.length == 1) {\n        values = values[0];\n        if (values.type) {\n          values.path = path;\n        }\n        if ( _.isObject( values ))\n          this.addOp(payload, values.path, values)\n        return values;\n      }\n      else if (!concatOp) {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.stage = 0;\n            this.addOp(payload, path, item);\n  \n            return item;\n          }\n          else return item;\n        })\n        return values;\n      }\n      else {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.concatParent = true;\n            item.stage = 0;\n\n            this.addOp(payload, path, item);\n            return item;\n          }\n          else return item;\n        })\n        this.addOp(payload, path, { path: path, type: \"concat\", ops: values, stage : 1 });\n        return values;\n      }\n  \n    }\n  \n  }\n\n\nvar ub = {\n    run : function ( html , attrs ) {\n        var result = phase1.run( html );\n        result = phase2.run( result, attrs );\n\n        return result;\n    }\n}\n\nvar test = (result) => {\n    result.output = ub.run( \"<div>Salut {#test} </div>\");\n}\n\ncu.parseStringIntoComp = {    \n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n    def: `\n        @obj string \n        transform it into componentsObjects\n    `\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport js_beautify from \"js-beautify\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n\n    makestr : function ( obj, indent ) {\n        if ( _.isFunction( obj ) ) return obj.toString();\n        if ( _.isString( obj ) ) {\n \n            let usequouts = '\"';\n            if ( obj.indexOf( \"\\n\") != -1 ) usequouts = \"`\";\n            if ( obj.indexOf('\"') != -1 ) usequouts = \"`\";\n            \n            if (usequouts == \"`\") {\n                obj = js_beautify.html( obj, { \n                    indent_size : 2,\n                    indent_level : indent + 1,\n                    preserve_newlines : true,\n                    max_preserve_newlines : 0,\n                    indent_inner_html: true,\n                } )\n\n                obj = obj.trimStart();\n            }\n            return usequouts + obj + usequouts\n        }\n        if ( _.isArray(obj)) {\n            let lines = [];\n            for ( var i in obj ) {\n                let value = this.makestr( obj[i] , indent + 1);\n\n                lines.push( value)\n            }\n\n            return \"[\" + lines.join(\",\\n\") + \"]\";\n        }\n\n        if ( _.isObjectLike(obj)) {\n            let lines = [];\n            let multiLine = false;\n            for ( var i in obj ) {\n                let slot = i;\n                let value = this.makestr( obj[i], indent + 1 );\n\n                if ( !slot.match( /^[a-z0-9$_]+$/) ) slot = '\"' + slot + '\"'\n\n                if ( value.indexOf(\"\\n\") != -1 ) multiLine = false;\n                lines.push( slot + \":\" + value )\n            }\n\n            return \"{\" + lines.join(\",\") + \"}\"\n        }\n        \n        if ( _.isNil( obj )) return \"null\"\n\n        return obj.toString();\n    },\n\n    beautify : function ( str ) {\n        return js_beautify.js_beautify( str, {\n            indent_size :2 ,\n            indent_level : -1, \n            max_preserve_newlines : 1,\n            preserve_newlines : true\n        } )\n    }\n}\n\nvar test = (result) => {\n\n    var obj = {\n        tpl : `<div>s\nce mai faci <span>\nsdf</span>\n        alut</div>`,\n        fn : function ( ) {\n\n        },\n        \"#b ce mai faci\" : \"\",\n        x : {\n            \"test\" : \"salut\" \n        }\n    }\n\n    result.str = ub.makestr( obj ,10 )\n    result.beuaty = js_beautify.js_beautify( result.str, {\n        indent_size :2 ,\n        indent_level : -1, \n        max_preserve_newlines : 1,\n        preserve_newlines : true\n    } )\n}\n\ncu.prettyScode = {\n    //test,\n\n    run: function (name) {\n        let str =  ub.makestr(name, 1)\n        return ub.beautify( str );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {}\n    },\n\n    run: function (model, data, getter ) {\n        model = _.cloneDeep( model );\n        let obj = model.mold.tpl;\n\n        this.applyOps( model.mold.ops, obj , data,  getter );\n\n\n        if ( obj.props ) \n            obj.props.tplid = model.uid;\n        \n\n        return obj;\n    },\n\n    applyOps : function ( ops, obj, data, getter ) {\n        let get = getter || _.get;\n\n        let newOps = [];\n        for (var i = 0; i < ops.length; i++) {\n\n            let op = ops[i];\n\n            if (op.type == \"value\") {\n                let value = get(data, op.action, op, newOps);\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"computedValue\") {\n                let value = op.value;\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"concat\") {\n                let value = get(obj, op.path, op, newOps).join(\"\");\n                _.set(obj, op.path, value)\n            }\n        }\n\n        if ( newOps.length ) \n            this.applyOps( newOps, obj, data, getter )\n    },\n\n\n}\n\n\nvar inputs = {\n    data: {\n        \"#color\": 12,\n        \"#handle\": \"handle\",\n        \"#test2\": \"test2\",\n        \"#test1\": \"test1\",\n        \"#title\": \"title it is\",\n    }\n}\n\nvar test = (result) => {\n\n    let mold = cu.tests.get(\"mold.x\");\n\n    if (!mold) return \"pending\";\n\n    let value = ub.run(mold, inputs.data);\n\n    result.value = value;\n    result.mold = mold;\n\n    cu.tests.pin( \"reactTree\", value)\n\n    //result.mold = value;\n}\n\ncu.reactAssembler = {\n    //test,\n\n    run: function (mold, data, getter) {\n        return ub.run(mold, data, getter)\n    },\n\n    init: function () {\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\n\nclass MyInput extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        value : \"\"\n      }\n\n      this.onChange = this.onChange.bind( this );\n    }\n\n    onChange ( evt ) {\n      this.setState( {value : evt.target.value});\n\n      if ( this.props.onChange ) this.props.onChange( evt );\n    }\n  \n\n    componentWillReceiveProps(nextProps) {\n      if ( nextProps.value!==undefined && nextProps.value.text!==undefined) this.setState({value : nextProps.value.text})\n    }\n\n    render () {\n\n      let props = Object.assign({}, this.props, {value : this.state.value, onChange : this.onChange })\n      \n      return React.createElement(\"input\", props, null);\n    }\n  }\n\n  export default MyInput;","import _ from \"lodash\"\nimport faker from \"faker\"\nimport React, { Component } from 'react';\nimport MyInput from \"../../components/MyInput\"\nvar cu = window.cu;\n\n\nvar customComponents = {\n  myinput : MyInput\n}\n\n\nvar ub = {\n\n    makeComponent : function (obj, i ) {\n        if (!obj) return null;\n        if (_.isString(obj)) return obj;\n        if (_.isArray(obj)) return obj.map((obj, i) => this.makeComponent(obj, i))\n        if ( !obj.componentName) return null;\n    \n        let children = null;\n        if (obj.children) children = obj.children.map((obj, i) => this.makeComponent(obj, i));\n    \n        let props = null;\n        if (obj.props) props = _.cloneDeep(obj.props);\n    \n        if (props && !props.key) props.key = i;\n        if (!props) props = { key: i }\n    \n        if (obj.componentName == \"style\") {\n          children = [_.flattenDeep(children).join(\"\")]\n        }\n    \n        let component = obj.componentName;\n        if (customComponents[component]) component = customComponents[component];\n    \n        var node;\n        try {\n          node = React.createElement(component, props, children)\n        } catch (e) {\n          console.error(e)\n          node = \"error\"\n        }\n        return node;\n        },\n\n}\n\nvar test = (result) => {\n}\n\ncu.reactUtils = {\n    //test,\n\n    makeComponent: function (tplComponent) {\n        return ub.makeComponent(tplComponent, 1)\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport $ from \"jquery\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    createStore : function ( tb, hapi, fns  ) {\n        if ( tb.cache.store ) return tb.cache.store;\n\n        let tpls = {\n          changeValueTpl : ( path ) =>  {\n            return function ( evt ) {\n              let value = evt.target.value;\n              hapi.set( path, value )\n            }\n          }, \n          runActionTpl : ( action ) => {\n            return function ( evt ) {\n              if ( hapi[action] ) return hapi[action]( evt );\n            }\n          },\n          runWithActionTpl : ( action ) => {\n            return function ( evt ) {\n                let target = evt.target;\n                let attr = $(target).attr( action[1])\n                if ( attr === undefined ) {\n                    target = $(target).parents(\"[\" + action[1] + \"]\")\n                    attr = $(target[0]).attr( action[1])\n\n                }\n\n              if ( hapi[action[0]] ) return hapi[action[0]]( attr, evt );\n            }\n          }\n\n        }\n\n\n        let store = {}\n  \n        for ( var i in fns.change ) {\n          store[i]  = tpls.changeValueTpl( fns.change[ i ])\n        }\n  \n  \n        for ( var i in fns.run ) {\n            store[i]  = tpls.runActionTpl( fns.run[ i ])\n          }\n\n          \n            \n        for ( var i in fns.runWith ) {\n            store[i]  = tpls.runWithActionTpl( fns.runWith[ i ])\n          }\n  \n        tb.cache.store = store;\n        return store;\n      }\n\n}\n\nvar test = (result) => {\n}\n\ncu.store = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    get : function ( tb, hapi,  fns ) {\n        return ub.createStore( tb, hapi, fns )\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            data: {\n\n                items: {},\n                subs: {},\n            },\n\n            src: {\n                getItem: function (id) {\n\n                },\n\n                getSubs: function (id) {\n\n                }\n            },\n\n            tpls: [],\n            registerTpl: function (args, master) {\n                this.tpls.push(args.path);\n            },\n\n            cases: [\n                result => {\n                    let isApplicable = !result.obj.item;\n\n                    if (!isApplicable) return;\n\n                    let id = result.obj.id;\n                    let item = ub.ctx.payload.data.items[id]\n\n                    if (!item) {\n                        item = {\n                            text: faker.company.catchPhrase(),\n                            id: id\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"items\", id], _.cloneDeep(item) )\n                    }\n\n\n                    result.obj.item = item;\n                    return \"applied\";\n                },\n\n                result => {\n                    let isApplicable = !result.obj.subs && result.obj.item && result.obj.level < 4;\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let id = result.obj.id;\n\n                    let subs = ub.ctx.payload.data.subs[id];\n\n                    if (!subs && !ub.ctx.payload.generated) {\n                        subs = {};\n\n                        let count = 4;\n                        for (var i = 0; i < count; i++) {\n                            let id = faker.random.uuid();\n                            let tpl = null;\n                            if (obj.level == 1) tpl = faker.random.arrayElement([null, \"columns\"]);\n                            let sub = {\n                                id: id,\n                                level: result.obj.level + 1,\n                                tpl: tpl\n                            }\n\n                            subs[id] = sub;\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"subs\", id], _.cloneDeep( subs ) )\n\n                    }\n\n                    if ( !subs ) subs = {}\n\n                    result.obj.subs = subs;\n                    result.subs = subs;\n\n                    return \"applied\";\n                }\n            ]\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run: function (obj, attrs) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs || [];\n\n        let mold = this.it(obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar inputs = {\n    items: { level: 0 },\n    subs: {},\n}\nvar test = (result) => {\n    let value = ub.run(inputs.items);\n\n    result.x = value;\n\n\n    cu.tests.pin(\"testRepo\", value)\n    //result.mold = value;\n}\n\ncu.testDataGenerator = {\n    //test,\n\n    run: function (id, data, generated,  setter) {\n\n        ub.ctx.payload.data = data;\n        ub.ctx.payload.setter = setter;\n        ub.ctx.payload.generated = generated;\n\n        return ub.run({ id: id || \"root\", level: 0 }, [])\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb : {}\n    },\n\n    run : function ( str ) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run( mold , [\"comp\"] );\n\n        return mold;\n    },\n\n\n}\n\n\nvar inputs = {\n    tplTree : {\n        x : `<div> <div id='title' comp='salut' class='{#test1} {#test2}' style='color : {#color}'> {#handle} : {#title}\n        \n        \n            <style>\n                @input \n                .column  { x : 12; background : {styleforred}red;}\n            </style>\n        </div> `\n    }\n}\nvar test = (result) => {\n    let value = ub.run( inputs.tplTree);\n\n    result.x = value.x.mold;\n\n    cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n}\n\ncu.testMolds = {\n    //test,\n\n    run: function (obj) {\n        return ub.run(obj, [])\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport $ from \"jquery\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n\n        wallet: {}\n    },\n\n    run: function (str) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run(mold, [\"comp\"]);\n\n        return mold;\n    },\n\n    parseTpl: function (obj) {\n        let mold = this.ctx.tb.parser.run(obj, [\"comp\"]);\n        return mold;\n    },\n\n    renderTpl: function (mold, data, getter) {\n        return this.ctx.tb.reactAssembler.run(mold, data, getter)\n    },\n\n    assembleTpl: function (mold, data) {\n        if (_.isString(mold)) mold = _.get(this.ctx.payload.molds, mold);\n        return this.ctx.tb.reactAssembler.run(mold, data, (data, path) => {\n            let value = _.get( data, path );\n            if ( value.node ) return value.node;\n            return value;\n        })\n    },\n\n\n    iterateBubbles: function (bubbles, count ) {\n        if ( count == undefined ) count = 0;\n\n        if ( count && count > 5 ) return;\n\n        bubbles = bubbles || this.ctx.payload.bubbles;\n\n        let changed = false;\n        for (var i = 0; i< bubbles.length; i++ ) {\n            let bubble = bubbles[i];\n\n            if ( bubble.isReady ) continue;\n\n\n            let shouldAssemble = true;\n\n            for (var j in bubble) {\n                if (bubble[j].tpl) {\n                    if ( !bubble[j].isRegistered ) {\n                        bubble[j].isRegistered = true;\n                        this.addBubble( bubble[j] )\n                    }\n                    if (!bubble[j].isReady) {\n                        shouldAssemble = false;\n                        continue;\n                    }\n                }\n            }\n\n            if (shouldAssemble) {\n                let node = ub.assembleTpl(bubble.tpl, bubble);\n                bubble.node = node;\n                bubble.isReady = true;\n                bubble.computedAtStep = this.ctx.payload.step++;\n                changed = true;\n            }\n        }\n        if ( changed)\n            this.iterateBubbles( bubbles, count+1)\n\n    },\n\n    addBubble: function (bubble) {\n        bubble.uid = cu.uids.run(\"bubble\");\n        bubble.addedAtStep = this.ctx.payload.step;\n        this.ctx.payload.bubbles.push(bubble);\n        //this.iterateBubbles();\n    },\n\n    start: function (molds) {\n        this.ctx.payload = {\n            bubbles: [],\n            molds: molds,\n            step : 0,\n        }\n    }\n\n}\n\n\nvar inputs = {\n    tplTree: {\n        x: `\n            <div><input id='order' syncwith={value} />\n            {value} \n            <div id='menu'> </div>\n            <div id='bar'> </div>\n            <div id='window' > {content}</div>\n            </div>\n        `,\n        y: \"salut {#test} salutare din alt template \"\n    }\n}\nvar test = (result) => {\n\n    ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n    ub.addBubble({\n        tpl: \"x\", \n        value : \"salutare\", \n        value_setter : () => { console.log( \"setting\")},\n        content : {\n            tpl : \"y\",\n            \"#test\" : \"yo\"\n        }\n    })\n\n    ub.iterateBubbles();\n\n    result.bubbles = ub.ctx.payload;\n    //cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n    //return nodes;\n}\n\nlet data = window.salut = { value: \"elefant\" }\ncu.testTplAssembing = {\n    //test,\n\n    run: function () {\n        ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n        ub.addBubble({\n            tpl: \"x\", \n            value : \"salutare\", \n            value_setter : () => { console.log( \"setting\")},\n            content : {\n                tpl : \"y\",\n                \"#test\" : \"yo\"\n            }\n        })\n    \n        ub.iterateBubbles();\n    \n        //result.bubbles = ub.ctx.payload;\n        return ub.ctx.payload.bubbles[0].node;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            tpls: {},\n            registerTpl: function (args, result,  master) {\n\n                result.obj.uid = cu.uids.run();\n\n                if ( result.obj.mold.props ) result.obj.mold.props.tplId = result.obj.uid;\n                //this.tpls.push(args.path);\n\n                this.tpls[ args.path.join(\".\") ] = result.obj.uid;\n            }\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: obj,\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.sub) {\n            let ret = this.it(result.sub[i], path.concat(i));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n        let checks = {\n            isString: result => result.obj && result.obj.trim,\n            isUnparsedTpl: result => result.obj && result.obj.html && !result.obj.mold,\n            isList: result => true\n        }\n\n        let cases = {\n            \"isString\": (result) => {\n                result.values = result.obj = { html: result.obj };\n                result.sub = [];\n                return \"applied\";\n            },\n            \"isUnparsedTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseHtml.run( result.obj.html, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n        }\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _check = checks[i];\n                if (!_check(result)) continue;\n\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op, result, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.values;\n    }\n}\n\nvar test = (result) => {\n    let value = ub.run({ x: `\n        <div pin = \"test\" > \n        <input id=\"dalut\" test=\"{salut}\" />\n            <div> \n                    <div xid='x{#tes}'> \n                    </div>\n            </div>\n\n        </div>\n    `, y: { a: { b: `\n    \n        <div id='yo'> Salutare </div>\n    ` } } }, []);\n    //value = ub.it(value, []);\n\n    result.mold = value;\n}\n\ncu.tplObjParse = {\n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parseHtml = cu.parseStringIntoComp;\n    },\n    \n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n        payload1: {\n            tplsMapping: [\n                \"map\",\n                \"topic\",\n                \"item\",\n                \"entry\"\n            ],\n            defaultTpl: \"item\",\n            usedGlobalStyles: {},\n\n\n            addSubs: function (args, result, master) {\n                result.obj.subs = result.values;\n                //console.log( arguments );\n\n                let obj = result.obj;\n                let content = [];\n                for (var i in result.values) {\n                    let item = result.values[i];\n                    if (item.nodes && item.nodes.card)\n                        content.push(item.nodes.card)\n                }\n\n                if (content) {\n                    result.obj.nodes.content = master.ctx.payload.useTemplate(obj.tpl + \".content\", { subs: content });\n                }\n\n                let data = result.obj.nodes;\n                result.obj.nodes.card = master.ctx.payload.useTemplate(obj.tpl + \".card\", data)\n\n            },\n\n            useTemplate: function (tpl, data, skipGlobalStyle) {\n\n                if (!skipGlobalStyle) {\n                    let route = tpl.split(\".\");\n                    let root = ub.ctx.wallet.molds;\n\n                    for (var i = 0; i < route.length; i++) {\n                        let step = route[i];\n                        if (root[step].globalStyle) {\n                            let id = root[step].globalStyle.uid;\n                            this.usedGlobalStyles[id] = { parent: root[step] };\n                        }\n                        if (root[step])\n                            root = root[step];\n                        else break;\n                    }\n                }\n\n                let mold = _.get(ub.ctx.wallet.molds, tpl); // .item.title;\n                return ub.ctx.tb.reactAssembler.run(mold, data)\n            },\n            cases: [\n                (result, master) => {\n\n                    let isApplicable = !result.obj.data\n                    if (!isApplicable) return;\n\n                    let tpls = master.ctx.payload.tplsMapping;\n\n                    let defaultTpl = tpls[result.obj.level] || master.ctx.payload.defaultTpl;\n\n\n                    let obj = {\n                        tpl: result.obj.tpl || defaultTpl,\n                        data: result.obj.item,\n                        level: result.obj.level,\n                        nodes: {}\n                    }\n\n                    result.subs = result.obj.subs;\n                    result.obj = obj;\n                    result.ops.push({ name: \"addSubs\", args: \"subs\" })\n\n                    return \"applied\"\n                },\n\n                (result, master) => {\n                    let isApplicable = !result.obj.nodes.title\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let mold = ub.ctx.wallet.molds.item.title;\n                    let values = {\n                        title: result.obj.data.text,\n                        level: result.obj.level\n                    }\n\n                    result.obj.nodes.title = master.ctx.payload.useTemplate(obj.tpl + \".title\", values);\n\n                    return \"applied\"\n                },\n\n\n            ]\n\n        },\n\n    },\n\n    getMolds: function (tpls) {\n        let molds = this.ctx.tb.parser.run(tpls);\n        return molds;\n    },\n\n\n    buildTpls: function (data) {\n        let node = this.ctx.tb.iterator.run(data, { payload: this.ctx.payload1 });\n        return node;\n    },\n\n    addGlobalStyles: function (nodes, gbs) {\n        let styles = [];\n        gbs = gbs || this.ctx.payload1.usedGlobalStyles\n\n\n        var parent;\n\n        let makeSelector = (path) => \"[tplid='\" + parent[path].uid + \"']\";\n\n        let getter = (data, path) => {\n            if (parent[path]) {\n                return makeSelector(path)\n            }\n            else if (path == \"*\")\n\n                return Object.keys(parent).filter(item => item != \"globalStyle\").map(item => makeSelector(item)).join(\",\")\n\n            return _.get(data, path)\n        }\n\n        let data = { color: \"red\" }\n        for (var i in gbs) {\n            parent = gbs[i].parent;\n            let style = ub.ctx.tb.reactAssembler.run(parent.globalStyle, data, getter)\n            styles.push(style)\n        }\n\n        if (styles.length) {\n            nodes = [nodes, styles];\n        }\n        return nodes;\n    }\n}\n\nvar input = {\n    tpls: {\n        map: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div>{subs}</div>\",\n            card: \"<div class='map'>{title} {content} </div>\",\n            style: `\n\n            `\n        },\n        topic: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='topic'>{title} {content} </div>\"\n        },\n        item: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='item'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n        entry: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\"\n        },\n\n        summart: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>summary</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n\n        columns: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='columns'>{title} {content} </div>\",\n            globalStyle: `<style htmlSlot='content'>\n               {content} { display : flex; background : hsla(100, 50%, 70%, 0.4)}\n               {content}>* { flex-basis : 100px; padding :0px 10px; border-left : 1px solid red; }\n         \n            </style>`\n        },\n    }\n}\n\nvar test = (result) => {\n    let wallet = {\n        molds: ub.getMolds(input.tpls),\n        repo: cu.tests.get(\"testRepo\"),\n    }\n\n    ub.ctx.wallet = wallet;\n\n    wallet.tpls = ub.buildTpls(wallet.repo);\n\n    let card = wallet.tpls.nodes.card;\n    card = ub.addGlobalStyles(card)\n    cu.tests.pin(\"testRoot\", card)\n    Object.assign(result, wallet)\n}\n\ncu.treeCardsBuilder = {\n    //test,\n\n    run: function (obj) {\n\n        let wallet = ub.ctx.wallet = {\n            molds : obj.molds,\n            repo  : obj.data\n        };\n\n        Object.assign(ub.ctx.payload1, {\n            tplsMapping: obj.mappings.tplsMapping,\n            defaultTpl: obj.mappings.defaultTpl, \n            usedGlobalStyles: {},\n        });\n\n        wallet.tpls = ub.buildTpls(wallet.repo);\n\n        let card = wallet.tpls.nodes.card;\n        card = ub.addGlobalStyles(card)\n\n        return card;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n        ub.ctx.tb.iterator = cu.treeIterator;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result, this);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, result,  this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar test = (result) => {\n}\n\ncu.treeIterator = {\n    //test,\n\n    run: function (obj, ctx ) {\n        let mub = Object.create( ub )\n        mub.ctx = ctx;\n        if ( !ctx.payload ) ctx.payload = { cases : [] }\n        return mub.run(obj, [])\n    },\n\n    init : function ( ) {\n        //ub.ctx.tb.parser = cu.tplObjParse;\n        //ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n}\n\nvar test = (result) => {\n}\n\ncu.uids = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\nfor (var i in cu) {\n    if (cu[i].init) cu[i].init();\n}\n\n\n\ncu.tests = {\n    wallet: {\n        test: {},\n        pins: {},\n        pending: []\n    },\n    pin: function (name, value) {\n        this.wallet.pins[name] = value;\n    },\n    get: function (name) {\n        let value = _.get(this.wallet.pins, name);\n        if (!value) value = _.get(this.wallet.test, name);\n        return value;\n    }\n}\n\n\nfor (var i in cu) {\n    if (cu[i].test) {\n        cu.tests.wallet.pending.push(i);\n\n    }\n}\n\n\nlet passes = 0;\nwhile (passes < 5 && cu.tests.wallet.pending.length) {\n    let i = cu.tests.wallet.pending.shift();\n    passes++;\n    let result = {};\n    let ret;\n    try {\n        ret = cu[i].test(result);\n    } catch (e) {\n        console.log(\"error when running \", i, e)\n    }\n\n    if (ret == \"pending\") {\n        cu.tests.wallet.pending.push(i)\n        continue;\n    }\n    console.group(\"test for \", i)\n\n    cu.tests.wallet.test[i] = result;\n\n    if (ret) console.log(ret)\n    if (Object.keys(result)) {\n        for (var i in result) console.log(i, result[i])\n    }\n    console.groupEnd();\n}\n\nif (cu.tests.wallet.pending.length)\n    console.error(\"error with tests : \")\n\n\n","\nimport cu from './main.js';\nimport './units/brand.js';\nimport './units/bubbleBoard.js';\nimport './units/bubbleFlow.js';\nimport './units/bubbleGuns.js';\nimport './units/bubbleTest.js';\nimport './units/bubbleTypes.js';\nimport './units/db.js';\nimport './units/parseStringIntoComp.js';\nimport './units/prettyScode.js';\nimport './units/reactAssembler.js';\nimport './units/reactUtils.js';\nimport './units/store.js';\nimport './units/testDataGenerator.js';\nimport './units/testMolds.js';\nimport './units/testTplAssembling.js';\nimport './units/tplObjParse.js';\nimport './units/treeCardsBuilder.js';\nimport './units/treeIterator.js';\nimport './units/uids.js';\nimport './init.js';\nexport default cu;\n   ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager\";\nimport KeyboardManager from \"./managers/KeyboardManager\"\nimport StaticManager from \"./managers/StaticManager\"\nimport { TimerManager as TimerManagerBuilder } from \"./managers/TimerManager\"\nimport PouchDB from \"pouchdb\"\nimport js_beautify from \"js-beautify\"\nimport { fchown, link, fstat } from 'fs';\nimport { debug } from 'util';\nimport faker from 'faker'\nimport { timingSafeEqual } from 'crypto';\nimport cu from \"./units/\"\nimport { delay } from 'q';\n\nvar fns = window.fns = {}\n\nvar ctxpins = window.ctxpins = {};\n\nvar customComponents = {\n  codemirror: CodeMirrorEditor\n}\n\nvar DataManager = window.DataManager;\nDataManager.newAPI = true;\n\nvar TimerManager = TimerManagerBuilder.init(DataManager);\n\n//--------------------\nwindow.$ = $;\n\nvar pinedTasks = `\n`\n\nvar hapi = {\n  showhud: function () {\n    let currentView = DataManager.getValue(\"workingant.viewState.path\");\n\n    console.log(currentView);\n    currentView = currentView == \"antView.map.nodes\" ? \"antView.bridge.nodes\" : \"antView.map.nodes\"\n\n    DataManager.set(\"workingant.viewState.path\", currentView);\n  },\n  placeorder: function (evt) {\n    if (evt.which !== 13) return;\n\n    flow.place();\n    DataManager.set(\"workingant.data.input\", { text: \"\" })\n    flow.restart();\n  },\n  set: function (path, value) {\n    DataManager.set(path, value)\n  },\n  parseinput: function () {\n    let text = DataManager.getValue(\"workingant.data.input\");\n    if (_.isString(text))\n      flow.parse(text)\n  },\n\n  select: function (id) {\n    flow.change({ parent: id })\n\n    DataManager.set(\"repo.uistate.selected\", id )\n  }\n}\n\nDataManager.setTrigger(\"workingant.data.input\", \"ada\", {\n  run: hapi.parseinput\n})\n\n\nDataManager.setCombined( \"ub.flow\", {\n  start : function ( ) {\n    this.wallet = {\n      step : { createdAt : new Date().getTime() },\n    }\n  },\n\n  parse : function ( input ) {\n    var result = input.match( /^(\\.[^\\s]+\\s+)*/ )\n    var text = input.substr( result[0].length )\n    var dirs = result[0].trim().split ( \" \" );\n\n    if ( !this.wallet.step.editStartedAt ) this.wallet.step.firstCharAt = new Date().getTime();\n    \n    this.wallet.step.text = text;\n  },\n\n  place : function ( ) {\n    let ant = {\n      text : this.wallet.text,\n      id : myUB.antsDbState.getId(),\n      times : {\n        createdAt : this.wallet.step.createdAt,\n        firstCharAt  : this.wallet.step.firstCharAt,\n        addedAt  : new Date().getTime()\n      }\n    };\n\n    let parent = this.getParent( );\n\n\n\n  }\n\n})\n\nvar flow = {\n\n  start: function () {\n    this.wallet = {\n      step: {},\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  restart: function () {\n    let prevStep = this.wallet.step;\n    this.wallet = {\n      step: {\n        parent: prevStep.parent\n      },\n      startedAt: new Date().getTime(),\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  parse: function (text) {\n    this.wallet.parser.parse(this.wallet, text)\n  },\n\n  change: function (values) {\n    this.wallet.actions.change(this.wallet, values)\n  },\n\n  place: function () {\n    this.wallet.actions.place(this.wallet)\n  },\n\n  parser: {\n    parse: function (wallet, text) {\n      wallet.actions.change(wallet, { text: text, x: text.substr(1) })\n    }\n  },\n\n  main: {\n    place: function (wallet) {\n      if ( wallet.step.text == \"destroy\" ) {\n        myUB.db.destroy();\n        return;\n    }\n  \n      this.add(wallet)\n    },\n    change: function (wallet, values) {\n      _.merge(wallet.step, values)\n    },\n\n    add: function (wallet) {\n\n      let parent = wallet.step.parent;\n      if (!parent) {\n        let root = DataManager.getWallet(\"repo.root\");\n        parent = root.id;\n      }\n\n      let state = DataManager.getWallet(\"repo.state\");\n      state.nextId++;\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: wallet.step.text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime()\n      }\n\n\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeRoot(_.set({}, \"rels.sub.\" + parent + \".\" + id, { id: id, parent: parent }))\n      myUB.mapview.mergeRoot(_.set({}, \"rels.allSubs.\" + id, { id: id, parent: parent }))\n      //DataManager.markChangeOn(\"repo\")\n      //DataManager.markChangeOn(\"repo.items\")\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.sub.\" + parent + \".\" + id, { id: id, parent: parent })\n      DataManager.set(\"repo.root.rels.allSubs.\" + id, { id: id, parent: parent })\n    }\n  }\n}\nflow.start();\n\n\nlet myUB = window.myUB = {};\n\nDataManager.setCombined(\"fnsub\", {\n  loader: {\n    get: function () {\n\n      let fns = myUB;\n\n      if (!fns.fnsub || !fns.fnsub.isReady) {\n        this.make(fns, \"fnsub\", \"ub.fnsub\", {\n          old: fns.fnsub\n        })\n\n        this.setupAll(fns);\n      }\n\n      fns.fnsub.makeUb(\"mapview\", \"ub.mapView\", {\n        \"tb.db\": \"db\",\n        \"state\": \"antsDbState\",\n      })\n\n      fns.fnsub.makeUb(\"antsDbState\", \"ub.antsDbState\", {\n        \"tb.db\": \"db\"\n      })\n\n      fns.fnsub.makeUb(\"db\", \"ub.db\", {})\n\n      fns.fnsub.setupAll();\n\n    },\n\n    setupAll: function (fns) {\n      for (var i in fns) {\n        if (fns[i].goSetup)\n          this.setup(fns, fns[i])\n      }\n\n      return true;\n    },\n\n    make: function (fns, name, path, extra) {\n      let obj = Object.create(DataManager.getValue(path));\n      obj.goSetup = true;\n      obj.extra = extra;\n      obj.uid = cu.uids.run();\n\n      if (fns[name]) _.merge(fns[name], obj)\n      else\n        fns[name] = obj;\n    },\n\n    setup: function (fns, obj) {\n      delete obj.goSetup;\n\n      let values = {};\n      for (var i in obj.extra) {\n        let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n        if (!target) {\n          target = {};\n          _.set(fns, obj.extra[i], target)\n        }\n        _.set(values, i, target)\n      }\n\n      if (obj.setup)\n        obj.setup(values);\n\n      obj.isReady = true;\n    },\n\n    autostart: true\n\n  }\n})\n\nmyUB.fnsub = {\n  subs: [],\n  waiting: {},\n  makeUb: function (a, b, c) {\n    this.subs.push([a, b, c])\n  },\n  onready: function (sub) {\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n}\n\n\nDataManager.setCombined(\"ub.antsDbState\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      state: {\n        prefix: \"ants\",\n        id: \"antsDbState\",\n        nextId: 1\n      }\n    };\n\n    myUB.fnsub.onready(this.tb.db)\n      .then(() => {\n        return this.tb.db.loadItems([\"antsDbState\"])\n      })\n      .catch(() => {\n      })\n      .then((state) => {\n        console.log(\"state\", state)\n        if (!state[0]) {\n          console.log(\"state\", this.wallet.state)\n\n          this.tb.db.saveItems(this.uid, [this.wallet.state])\n        }\n        else {\n          console.log(\"state\", state[0])\n          this.wallet.state = state[0];\n          this.isReady = true;\n        }\n      })\n  },\n\n  getId: function () {\n    this.wallet.state.nextId++;\n    this.tb.db.request_save( this.uid, [this.wallet.state], 100)\n    return \"ant_\" + this.wallet.state.nextId;\n  }\n})\n\nDataManager.setCombined(\"ub.fnsub\", {\n  setup: function (opts) {\n\n    _.merge(this, opts)\n\n    this.fns = myUB;\n\n    this.waiting = this.waiting || {};\n\n    if (this.old.subs) {\n      for (var i in this.old.subs) {\n        let sub = this.old.subs[i];\n        this.makeUb(sub[0], sub[1], sub[2])\n      }\n      this.setupAll();\n      delete this.subs;\n    }\n  },\n\n\n  setupAll: function () {\n    let fns = this.fns;\n    for (var i in fns) {\n      if (fns[i].goSetup)\n        this.setupUb(fns[i])\n    }\n\n    return true;\n  },\n\n  makeUb: function (name, path, extra) {\n\n    let fns = this.fns;\n    let obj = Object.create(DataManager.getValue(path));\n    obj.goSetup = true;\n    obj.extra = extra;\n    obj.uid = fns[name] && fns[name].id ? fns[name].uid : cu.uids.run();\n\n\n    if (fns[name]) _.merge(fns[name], obj)\n    else\n      fns[name] = obj;\n  },\n\n  setupUb: function (obj) {\n    let fns = this.fns;\n    delete obj.goSetup;\n\n    let values = {};\n    for (var i in obj.extra) {\n      let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n      if (!target) {\n        target = { uid: cu.uids.run() };\n        _.set(fns, obj.extra[i], target)\n      }\n      _.set(values, i, target)\n    }\n\n    if (obj.setup)\n      obj.setup(values);\n\n    obj.isReady = true;\n\n    if (this.waiting[obj.uid]) {\n      this.waiting[obj.uid].forEach(payload => {\n        payload.resolve()\n      })\n\n      this.waiting[obj.uid] = [];\n    }\n  },\n\n  onready: function (sub) {\n\n    if (sub.isReady) return Promise.resolve();\n\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n\n\n});\n\nDataManager.setCombined(\"ub.db\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    this.timers = {};\n  },\n\n  destroy : function ( ) {\n    this.db.destroy();\n  },\n  request_save: function (id, src, delay ) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    this.timers[id] = window.setTimeout(() => {\n      this.saveItems(id, src)\n    }, delay || 1000)\n  },\n\n  saveItems: function (id, src) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.save(items[i], items[i].id));\n\n    return Promise.all(promises).then ( () => { console.log( \"saved all\", id) } )\n  },\n\n  loadItems: function (src) {\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.load(items[i]))\n\n    return Promise.all(promises);\n  },\n})\n\n\n\nDataManager.setCombined(\"ub.mapView\", {\n  setup: function (args) {\n    this.wallet = {\n      items: {},\n      root: {\n        id: \"ant1\",\n        text: \"the first map\",\n        rels: { sub: {} },\n        type: \"map\"\n      },\n      changed: {},\n      state: { nextId: 1 }\n    };\n\n    this.wallet.items.ant1 = this.wallet.root;\n\n    _.merge(this, args)\n\n    return this;\n  },\n  loadMap: function (id) {\n    let startIds = [id, \"info_\" + id]\n    this.tb.db.loadItems(startIds)\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if ( items[0])\n        this.wallet.root = items[0];\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        console.log(\"done\", this.wallet)\n\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n  getItemsToSave: function () {\n    let changed = this.wallet.changed;\n    this.wallet.changed = {};\n\n    let items = [];\n    for (var i in changed) {\n      items.push(this.wallet.items[i])\n    }\n    return items;\n  },\n  saveItems: function () {\n    let items = this.getItemsToSave();\n    this.tb.db.saveItems(this.uid, items);\n  },\n  generateId: function () {\n    return this.tb.state.getId();\n  },\n  mergeItem: function (id, value) {\n    if (!id) id = this.generateId();\n    if (!this.wallet.items[id]) this.wallet.items[id] = { id : id, createdAt: new Date().getTime() };\n    _.merge(this.wallet.items[id], value);\n    this.triggerChange( id );\n    return id;\n  },\n  mergeRoot: function (value) {\n    _.merge(this.wallet.root, value);\n    this.triggerChange( this.wallet.root.id );\n    \n  },\n\n  triggerChange : function ( id ) {\n    this.wallet.changed[id] = true;\n    this.tb.db.request_save(this.uid, this);\n  },\n\n  setRel : function ( rel, a, b, value ) {\n    _.set( this.wallet.root,  [\"rels\", rel,a,b] , value );\n    this.triggerChange( this.wallet.root.id )\n  },\n\n})\nDataManager.setCombined(\"repo\", {\n  items: {},\n  root: {\n    id: \"ant1\",\n    text: \"the first map\",\n    rels: { sub: {} }\n  },\n  state: {\n    nextId: 2\n  }\n})\n\n\nDataManager.setCombined(\"antView.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      title: `<div >item : {value.text}</div>`,\n      item: `<div on_click={actions.select} antid={id}>item : {item.text}</div>`,\n      mapView: {\n        logo: cu.brand.getLogo(faker.company.catchPhrase(), 10, 5),\n        frame: `<div>{title} {content}\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        \n        <style>\n          .topic>.text { border-bottom : 1px solid {color} ; }\n          .content { margin-left : 1px; padding-left : 10px;}\n\n          .mapviewtitle { position:sticky; top : -30px; margin-bottom : 20px; background : {background};  } \n          .logo { display : inline-block;width : 50px; height : 50px; }\n\n          .selected.title { font-size : 19px;}\n\n          .selected.content { \n            border-left :  1px dotted red;\n          }\n\n          .selected.content::after {\n            content : \"...\";\n            display : block;\n          }\n\n          .mapviewtitle { font-variant: petite-caps;}\n        </style>\n      </div>`,\n\n        title: `\n        <div class='mapviewtitle '> <svg class='logo'>{logo}</svg> {item.text}</div>`,\n      },\n\n\n      map: {\n        topic: \"<div on_click={actions.select} antid={id} class='title topic {isSelected}'><span class='text'>{handle} {item.text} &nbsp;&nbsp;&nbsp;&nbsp;</span></div>\",\n        item: \"<div on_click={actions.select} antid={id} class='title item {isSelected}'>{handle} {item.text}</div>\",\n        entry: \"<div on_click={actions.select} antid={id} class='title entry {isSelected}'>{handle} {item.text}</div>\",\n        other: `<div on_click={actions.select} antid={id} class='{isSelected}'>{item.text}</div>`,\n        card: `<div class='{isSelected}'>{title} <div id='content' class='content {isSelected}'>{content}</div></div>`,\n\n      },\n\n      bridgeTitle: `<div>{value.text}</div>`,\n      frame: \"<div>{maptitle}{items}</div>\",\n\n      mapTitle: \"\"\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.map\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({uistate : \"repo.uistate\",  items: \"repo.items\", root: \"repo.root\", repo: \"repo\", molds: \"antView.molds\" }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"select\", \"antid\"] } });\n        \n        v.selected = v.uistate.selected;\n        \n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = [\"map.topic\", \"map.item\", \"map.entry\"]\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      setV: function (value, v, memo) {\n        memo = memo || {};\n        for (var i in value) {\n          if ( memo[i] === undefined)\n            memo[i] = v[i];\n          v[i] = value[i]\n        }\n\n        return memo;\n      },\n      cleanV: function (v, memo) {\n        for (var i in memo)\n          v[i] = memo[i];\n      },\n\n      getBody: function (v, id, sub) {\n        let list = this.getBodyList(v, id, sub);\n\n        let logo = cu.reactAssembler.run(v.molds.mapView.logo, v);\n        let memo = this.setV({ logo: logo, item: v.repo.root }, v, memo)\n\n        let title = cu.reactAssembler.run(v.molds.mapView.title, v);\n        memo = this.setV({ content: list, title: title }, v, memo)\n        let node = cu.reactAssembler.run(v.molds.mapView.frame, v)\n        this.cleanV(v, memo);\n        return node;\n      },\n      getBodyList: function (v, id, sub) {\n        let related = sub[id];\n\n        if (!related) return null;\n        if (v.level > 5 ) return null;\n        let level = v.level != undefined ? v.level + 1 : 0\n        let list = [];\n        let memo = this.setV({\n          id: null,\n          item: null,\n          level: 0,\n          isSelected : null,\n          content : null,\n          title : null\n\n        }, v, memo);\n\n\n        for (var i in related) {\n\n          _.merge(v, {\n            id: i,\n            item: v.items[i],\n            level: level,\n            isSelected : v.selected == i ? \"selected\" : \"\",\n          })\n\n          let item = this.getItem(v, sub);\n          list.push(item);\n        }\n\n        this.cleanV(v, memo);\n        return list;\n      },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n\n        if (!moldName) moldName = v.otherTpl;\n        let titleMold = _.get(v.molds, moldName);\n\n        v.title = cu.reactAssembler.run(titleMold, v);\n        v.content = this.getBodyList(v, v.id, sub);\n\n        if ( v.isSelected && !v.content) v.content = []; \n\n\n        let node;\n        if (v.content) {\n          let cardMold = _.get(v.molds, v.cardMold);\n\n          node = cu.reactAssembler.run(cardMold, v)\n        }\n        else node = v.title;\n\n        return node;\n      },\n\n\n\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.bridge\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({ items: \"repo.items\", molds: \"antView.molds\" }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n\n        for (var i in v.items) {\n          v.data.path = i;\n          v.data.value = v.items[i];\n          let row = cu.reactAssembler.run(v.molds.bridgeTitle, v.data)\n          rows.push(row)\n        }\n\n        console.log(rows)\n        return rows;\n      }\n    }\n  }\n})\n\nDataManager.setCombined(\"dbSavings\", {\n  items: {\n    /*\n    repoitems: { path: \"repo.items\", onload: [\"repo\", \"evaluateflow\"] },\n    bubblestate: \"repo.state\",\n    antsitems: \"repo.ants\",\n    */\n  }\n})\n\nDataManager.setCombined(\"tb.persisitence\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    window.onbeforeunload = () => { return this.saveAll() };\n    this.loadAll();\n\n  },\n\n  request_save: function () {\n    if (this.timer) window.clearTimeout(this.timer);\n\n    this.timer = window.setTimeout(() => {\n      this.saveAll()\n    }, 60000)\n  },\n\n  saveAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items\n    let savings = []\n    for (var i in tosave) {\n      savings.push(this.saveitem(i, tosave[i]))\n    }\n\n  },\n  saveitem: function (id, target) {\n    let path = target.path || target;\n    let repo = DataManager.getWallet(path);\n    return this.db.save({ repo }, id)\n  },\n\n  loadAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items;\n\n    for (var i in tosave)\n      this.loaditem(i, tosave[i]);\n  },\n\n  loaditem: function (id, target) {\n    let path = target.path || target;\n    let onload = target.onload || null;\n    this.db.load(id).then((items) => {\n      if (items && items.repo) DataManager.set(path, items.repo)\n      if (onload) DataManager.runOn(onload[0], onload[1])\n    })\n  },\n\n  starter: {\n    loader: {\n      autostart: true,\n      get: (tb) => {\n        if (tb.cache.done) return 1;\n        tb.cache.done = true;\n        let v = tb.fetch({ tb: \"tb.persisitence\" });\n        v.tb.setup();\n\n        return 1;\n      }\n    }\n  }\n\n})\n\n\n\n\nDataManager.setCombined(\"ui.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      main: `\n          <div id='frame'>\n            <div id='easel'>{view}</div>\n            <div id='bar'>\n              <myinput id='order' value={order.value} on_key_press={order.place} on_change={order.change}></myinput>\n              <div id='bumb' on_click='{bumb.action}'>{picture}</div>\n            </div>\n          </div>\n          <style>\n            * { box-sizing : border-box}\n            body , window, html {\n              color : {textColor};\n              height : 100%; width : 100%; background : {background} }\n            #frame { height : 100%; width : 100%;}\n            #frame { display : flex; flex-direction : column; }\n            #easel { flex : 1; overflow : auto; }\n            #bar   { border-top: 1px solid #999; width : 100%; flex-basis : {dim.barHeight}px ; display : flex;flex-direction:row; }\n\n            #order {  outline: none; flex : 1; border : 0px none transparent; width: 100%;}\n            #bumb  { flex-basis : {dim.barHeight}px; background : {color} } \n\n          </style>\n          \n  `,\n      bubbleitem: `<div on_click={selectitem} targetid={targetid}>{label}</div>`,\n\n    }\n  }\n})\n\nDataManager.setCombined(\"workingant\", {\n  data: {\n    input: { text: \"\" },\n    currentView: 'main',\n\n    selected: \"\"\n  }\n})\n\n\nDataManager.setCombined(\"antsFrame.ui\", {\n  loader: {\n    paths: { molds: \"ui.molds\", orderText: \"workingant.data\", node: \"antsFrame.prepare\" },\n    get: function (tb, v) {\n\n      tb.fetch(this.paths, v);\n\n      _.set(v.node, v.molds.main.mold.pins.order.concat([\"props\", \"value\"]), v.orderText.input)\n\n      return v.node;\n    }\n  }\n\n})\n\nDataManager.setCombined(\"workingant.viewState\", {\n  path: \"antView.map.nodes\"\n})\n\nDataManager.setCombined(\"antsFrame.prepare\", {\n  loader: {\n    paths: { molds: \"ui.molds\", data: \"bubbles.data\", repo: \"repo\", viewState: \"workingant.viewState\" },\n    get: function (tb, v) {\n      tb.fetch(this.paths, v);\n\n      tb.fetch({ view: v.viewState.path }, v)\n\n\n      let store = cu.store.get(tb, hapi,\n        { change: { changeOrder: \"workingant.data.input\" }, run: { bumbAction: \"showhud\", placeOrder: \"placeorder\" } });\n\n      v.dim = {\n        window: {\n          height: \"400\",\n          width: \"200\",\n        },\n        barHeight: \"50\"\n      }\n\n      v.data = {\n        label: \"main\",\n        bubbleList: \"TestList\",\n        order: {\n          change: store.changeOrder,\n          place: store.placeOrder\n        },\n        bumb: {\n          action: store.bumbAction\n        },\n        dim: v.dim,\n\n        view: v.view,\n\n        color: \"#007abc\",\n        background : \"#000\",\n        textColor : \"#eee\"\n      }\n\n\n      v.node = cu.reactAssembler.run(v.molds.main, v.data)\n      return v.node;\n    },\n    autostart: true\n  }\n})\n\n\n\nDataManager.setCombined(\"test\", {\n  loader: {\n    get: function () {\n      myUB.mapview.loadMap(\"ant1\")\n    },\n    autostart: true\n  }\n})\n\n//DataManager = window._DataManager.setup();\nDataManager.historyManager.recording = false;\nDataManager.runToStart();\n//------------------\n\n\n\nclass Frame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  path = \"antsFrame.ui\"\n\n  componentDidMount() {\n    DataManager.setTrigger(this.path, \"asd\", {\n      run: () => {\n        this.setState({ \"version\": new Date().getTime() })\n      }\n    })\n  }\n\n  render() {\n    let components = DataManager.getValue(this.path);\n    let node = cu.reactUtils.makeComponent(components || []) || \"empty\";\n    return node\n  }\n}\n\nclass FlatAnt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: { scode: \"salut\" }\n    }\n  }\n\n  _style() {\n    return `\n      html, window, body{ width : 100%; height : 100%; overflow : auto; padding: 0px; margin:0px;}\n      #root, .main { width : 100%; height : 100%;}\n      \n    `\n  }\n\n  render() {\n    let style = this._style();\n    let components = [\n      <Frame key=\"1\"></Frame>\n    ]\n    return [\n        <style>{style}</style>,\n        components]\n    ;\n  }\n}\n\nexport default FlatAnt;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager.js\";\n\nimport FlatAnt from \"./FlatAnt1\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = <FlatAnt />\n    return content;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","var historyManager = {\n  setup: function setup(info) {\n    var item = Object.create(this);\n    item.wallet = {\n      currentStack: {\n        info: [{\n          type: \"startedWith\",\n          info: info\n        }]\n      },\n      stacks: []\n    };\n    item.recording = true;\n    item.wallet.stacks.push(item.wallet.currentStack);\n    return item;\n  },\n  startStack: function startStack(info) {\n    if (!this.recording) return;\n    var stack = {\n      info: [],\n      prevStack: this.wallet.currentStack,\n      index: this.wallet.stacks.length,\n      start: info\n    };\n    this.addInfo({\n      type: \"subStack\",\n      stack: stack\n    }, true);\n    this.wallet.stacks.push(stack);\n    this.wallet.currentStack = stack;\n    if (info) this.addInfo(info);\n  },\n  addInfo: function addInfo(info, skipClone) {\n    if (!this.recording) return;\n    if (!skipClone) info = _.cloneDeep(info);\n    this.wallet.currentStack.info.push(info);\n  },\n  endStack: function endStack(info) {\n    if (!this.recording) return;\n    if (info) this.addInfo(info);\n    this.wallet.currentStack = this.wallet.currentStack.prevStack;\n  }\n};\nvar _DataManager = {\n  setup: function setup() {\n    var item = Object.create(this);\n    item.state = {\n      ctx: {},\n      gettingValue: {},\n      wallet: {},\n      meta: {},\n      cache: {},\n      version: {},\n      loadersCache: {},\n      triggers: {},\n      currentVersion: 1,\n      dependencies: {},\n      nextUID: 1,\n      agenda: {\n        names: {},\n        tasks: []\n      },\n      pins: {},\n      toStart: [],\n      flags: {}\n    };\n    item.historyManager = historyManager.setup(this);\n    return item;\n  },\n  state: {\n    gettingValue: {},\n    wallet: {},\n    meta: {},\n    cache: {},\n    version: {},\n    loadersCache: {},\n    triggers: {},\n    currentVersion: 1,\n    dependencies: {},\n    nextUID: 1,\n    agenda: {\n      names: {},\n      tasks: []\n    },\n    pins: {},\n    toStart: [],\n    flags: {}\n  },\n  setCtx: function setCtx(basePath, ctxPath, value, names) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    if (!ctx) _.set(this.state.ctx, [basePath, \"ctx\"].join(\".\"), ctx = {\n      names: []\n    });\n\n    _.set(ctx, ctxPath, value);\n\n    ctx.names.push({\n      names: names,\n      path: ctxPath\n    });\n  },\n  getCtx: function getCtx(basePath, name) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    ;\n    if (!ctx) return null;\n    var ctxPath;\n\n    for (var i in ctx.names) {\n      if (ctx.names[i].names.indexOf(name) != -1) {\n        ctxPath = ctx.names[i].path;\n        break;\n      }\n    }\n\n    if (!ctxPath) return null;\n\n    var target = _.get(ctx, ctxPath);\n\n    return target;\n  },\n  runOn: function runOn(basePath, name, args) {\n    var target = this.getCtx(basePath, name);\n    if (!target) return null;\n    return target[name](args);\n  },\n  runFn: function runFn(path, args) {\n    var route = path.split(\".\");\n    var fnName = route.pop();\n    var targetPath = route.join(\".\");\n    var target = this.getValue(targetPath);\n    if (!target[fnName]) return undefined;\n\n    if (_.isFunction(target[fnName])) {\n      return target[fnName](args, path, this);\n    } else if (_.isFunction(target[fnName].run)) {\n      return target[fnName].run(args, path, this);\n    }\n  },\n  getInfluenced: function getInfluenced(path) {\n    var influenced = [];\n\n    var dep = _.get(this.state.dependencies, path + \".DEP\");\n\n    if (!dep) return [];\n\n    for (var i in dep) {\n      influenced.push(i);\n      influenced = influenced.concat(this.getInfluenced(i));\n    }\n\n    return influenced;\n  },\n  getValue: function getValue(path, skipPartialValueCheck) {\n    var route = path.split(\".\");\n    var value = this.checkCache(path);\n    if (value) return value;\n    if (!skipPartialValueCheck) for (var i = 0; i < route.length; i++) {\n      var partialPath = route.slice(0, i).join(\".\");\n\n      if (this.state.gettingValue[partialPath]) {\n        var partialResult = this.state.gettingValue[partialPath].partialResult;\n        var partialSlot = route.slice(i);\n\n        var partialValue = _.get(partialResult, partialSlot);\n\n        if (partialValue !== undefined) return partialValue;\n      }\n    }\n    this.state.gettingValue[path] = true;\n    var list = this.makeList(path);\n    value = this.listToValue(list, path);\n    delete this.state.gettingValue[path];\n\n    if (value !== undefined) {\n      // let shouldUpdate = (  list.length == 1 && list[0].src == \"wallet\" )\n      this.setCache(path, value); //, shouldUpdate);\n      //this.diffCache( oldCache, path );\n    }\n\n    return value;\n  },\n  setCache: function setCache(path, value, shouldUpdate) {\n    this.state.cache[path] = {\n      value: value,\n      shouldUpdate: shouldUpdate || false,\n      version: this.state.currentVersion\n    };\n  },\n  checkCache: function checkCache(path, ignoreUpdates) {\n    if (!this.state.cache[path]) return null;\n    if (ignoreUpdates) return this.state.cache[path].value;\n    if (this.state.cache[path].shouldUpdate) return null;\n    return this.state.cache[path].value;\n  },\n  prepareCache: function prepareCache(path) {\n    var cache = this.state.loadersCache[path];\n\n    if (!cache) {\n      cache = this.state.loadersCache[path] = {\n        old: {},\n        contains: {},\n        dependsOn: {}\n      };\n    }\n\n    var old = {\n      contains: cache.contains || {},\n      dependsOn: cache.dependsOn || {}\n    };\n    cache.old = old;\n    delete cache.contains;\n    delete cache.dependsOn;\n    return old;\n  },\n  diffCache: function diffCache(oldCache, path) {\n    if (!this.state.loadersCache[path]) this.state.loadersCache[path] = {};\n    var cache = this.state.loadersCache[path] || {};\n    var dependencies = this.state.dependencies;\n\n    var addDependency = function addDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) _.set(dependencies, a + \".DEP\", dep = {});\n      dep[b] = true; //_.set( dependencies, a + \".DEP\",dep );\n    };\n\n    var remDependency = function remDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) return;\n      delete dep[b];\n    };\n\n    var check = function check(newC, oldC) {\n      for (var i in newC) {\n        if (!oldC || !oldC[i]) addDependency(i, path);\n      }\n\n      for (var i in oldC) {\n        if (!newC || !newC[i]) remDependency(i, path);\n      }\n    };\n\n    check(cache.contains, oldCache.contains);\n    check(cache.dependsOn, oldCache.dependsOn);\n  },\n  updateVersionsMap: function updateVersionsMap(path) {\n    var cache = this.state.loadersCache[path] || {};\n    var depOn = cache.dependsOn;\n\n    for (var i in depOn) {\n      var currentVersion = this.getVersion(i);\n      depOn[i].version = currentVersion;\n    }\n  },\n  makeList: function makeList(path) {\n    var list = [];\n    var route = path.substr ? path.split(\".\") : path;\n\n    var walletValue = _.get(this.state.wallet, path);\n\n    if (walletValue !== undefined) {\n      if (!_.isObjectLike(walletValue)) {\n        list.push({\n          src: \"wallet\",\n          value: walletValue,\n          path: [],\n          srcPath: path,\n          version: 1\n        });\n        return list;\n      }\n\n      walletValue = _.cloneDeep(walletValue);\n      list.push({\n        src: \"wallet\",\n        value: walletValue,\n        path: [],\n        srcPath: path,\n        version: 1\n      });\n    }\n\n    var meta = this.state.meta;\n\n    for (var i = 0; i < route.length; i++) {\n      if (!meta) break;\n\n      if (meta.loader) {\n        var item = {\n          src: \"root\",\n          loader: meta.loader,\n          path: [],\n          srcPath: route.slice(0, i),\n          select: route.slice(i)\n        };\n        list.push(item);\n      }\n\n      meta = meta[route[i]];\n    }\n\n    var rootPath = route;\n\n    var iterate = function iterate(obj, route, list) {\n      if (!obj) return;\n\n      if (obj.loader) {\n        var _item = {\n          src: \"sub\",\n          loader: obj.loader,\n          path: route,\n          srcPath: rootPath.concat(route)\n        };\n        list.push(_item);\n      }\n\n      for (var _i in obj) {\n        if (_i == \"loader\") continue;\n        iterate(obj[_i], route.concat(_i), list);\n      }\n    };\n\n    iterate(meta, [], list);\n    return list;\n  },\n  silentSet: function silentSet(path, value, skipPathAffected) {\n    this.historyManager.addInfo({\n      type: \"silentSet\",\n      path: path,\n      value: value\n    });\n\n    _.set(this.state.wallet, path, value);\n\n    if (this.state.cache[path]) this.state.cache[path].shouldUpdate = true;\n    if (!skipPathAffected) this.getAffectedPaths(path);\n  },\n  listToValue: function listToValue(list, path) {\n    if (list.length == 1 && list[0].value) return list[0].value;\n    var result = {};\n    this.state.gettingValue[path] = {\n      partialResult: result\n    };\n    var postponedSteps = list;\n    var hasSteps = true;\n    var snoozeCount = 0;\n\n    while (hasSteps) {\n      snoozeCount++;\n\n      if (snoozeCount > 5) {\n        //console.log( \"postponed more than 5 times\", path, result, _.cloneDeep( this.state.gettingValue ) );\n        this.state.cache[path].shouldUpdate = true;\n        return result;\n      }\n\n      list = postponedSteps;\n      postponedSteps = [];\n      hasSteps = false;\n\n      for (var i = 0; i < list.length; i++) {\n        var step = list[i];\n        var value = void 0;\n\n        if (step.value) {\n          value = step.value;\n        } else if (step.loader) {\n          try {\n            value = this.getFromLoader(step, result, path);\n          } catch (e) {\n            if (e == \"postpone\") {\n              this.state.cache[path].shouldUpdate = true;\n              postponedSteps.push(step);\n              hasSteps = true;\n            } else {\n              console.error(e);\n            }\n\n            continue;\n          }\n        }\n\n        if (step.select) value = _.get(value, step.select);\n\n        if (step.path.length) {\n          _.set(result, step.path, value);\n        } else {\n          if (Object.values(result).length == 0) {\n            result = value;\n          } else //console.log( \"merging\" , _.cloneDeep( result ), value, result);\n            _.merge(result, value);\n        }\n      }\n    }\n\n    return result;\n  },\n  loadersCache: {},\n  addLog: function addLog(lhs, rel, rhs, value) {\n    if (!this.state.loadersCache[lhs]) this.state.loadersCache[lhs] = {\n      version: this.state.currentVersion,\n      cachedValue: {}\n    };\n    var xcache = this.state.loadersCache[lhs];\n    if (!xcache[rel]) xcache[rel] = {};\n    xcache[rel][rhs] = value || true;\n  },\n  getFromLoader: function getFromLoader(step, result, requester, force) {\n    var _this = this;\n\n    var srcPath = step.srcPath.join(\".\");\n    var value;\n\n    try {\n      var logger = {\n        add: function add(path, name) {\n          _this.addLog(srcPath, \"dependsOn\", path, {\n            version: true,\n            name: name,\n            path: path,\n            srcPath: srcPath\n          });\n        }\n      };\n      var loader = step.loader;\n\n      if (loader.prism) {\n        if (loader.loadedPrism) loader = loader.loadedPrism;else {\n          var loadedPrism = this.getFromDispatch(loader.prism);\n          loader.loadedPrism = loadedPrism;\n          loader = loadedPrism;\n        }\n      }\n\n      if (loader.load) {\n        if (this.state.cache[srcPath]) {\n          return {};\n        }\n\n        value = loader.load(result, this, logger, step.loader, step);\n\n        _.set(this.state.wallet, srcPath, value);\n\n        this.state.cache[srcPath] = {\n          loader: true,\n          value: {}\n        };\n        return value;\n      }\n\n      if (!force) {\n        var _value = this.checkCache(srcPath);\n\n        if (_value) return _value;\n      }\n\n      if (step.src == \"sub\") this.addLog(requester, \"contains\", srcPath);\n      var oldCache = this.prepareCache(srcPath);\n\n      if (loader.get) {\n        try {\n          var tb = TB.init(result, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n          if (DataManager.newAPI) value = loader.get(tb, tb.v);else value = loader.get(tb, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n        } catch (e) {\n          if (e && e.type == \"return\") {\n            value = e.value;\n          } else {\n            throw e;\n          }\n        }\n      }\n\n      if (value === \"forceCache\") {\n        return this.checkCache(srcPath, true);\n      } else if (value !== undefined) {\n        this.setCache(srcPath, value);\n        this.diffCache(oldCache, srcPath);\n        if (loader.updateVersionsMap) this.updateVersionsMap(srcPath);\n\n        _.set(this.state.version, srcPath + \".version\", this.state.currentVersion);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (loader && loader.skipCache) this.state.cache[srcPath].shouldUpdate = true;\n    return value;\n  },\n  runUtils: function runUtils(path, args) {\n    var fn = this.getValue(path);\n    if (fn && fn.run) return fn.run.apply(fn, args);\n  },\n  getWallet: function getWallet(path) {\n    return _.get(this.state.wallet, path);\n  },\n  mergeValue: function mergeValue(path, value) {\n    var _this2 = this;\n\n    this.historyManager.addInfo({\n      type: \"mergeValue\",\n      path: path,\n      value: value\n    });\n    var oldValue = path ? _.get(this.state.wallet, path) : this.state.wallet; //this.getValue( path );\n\n    if (!oldValue) {\n      oldValue = {};\n\n      _.set(this.state.wallet, path, oldValue);\n    }\n\n    var changedPaths = [];\n    this.state.currentVersion++;\n    var route = _.isString(path) ? path.split(\".\") : path || [];\n    if (route.length == 1 && route[0] == \"\") route = [];\n    var fn = {\n      addPath: function addPath(relPath) {\n        var fullPath = route.concat(relPath);\n        changedPaths.push(fullPath);\n\n        _.set(_this2.state.version, fullPath.join(\".\") + \".version\", _this2.state.currentVersion);\n      }\n    };\n    this.pauseAll();\n\n    if (_.isObjectLike(value)) {\n      this.setObObj(oldValue, value, fn, []);\n    } else {\n      console.log(\"it's not object\");\n    }\n\n    for (var i in changedPaths) {\n      this.updateVersionForAll(changedPaths[i]);\n      this.getAffectedPaths(changedPaths[i].join(\".\"));\n    }\n\n    this.req_triggers();\n  },\n  pauseAll: function pauseAll() {\n    if (this.state.runningReqTriggers_timer) {\n      this.clearInterval(this.state.runningReqTriggers_timer);\n      delete this.state.runningReqTriggers_timer;\n    }\n\n    if (this.state.runningAgendaTriggers_timer) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n    }\n  },\n  setInterval: function setInterval(callback, delay, name) {\n    var stop = false;\n\n    var fn = function fn() {\n      if (stop) return; //console.log( \"interval\", name );\n\n      callback();\n      window.requestAnimationFrame(fn);\n    };\n\n    window.requestAnimationFrame(fn);\n    return function () {\n      stop = true;\n    };\n  },\n  clearInterval: function clearInterval(stopFn) {\n    if (!stopFn) return;\n    return stopFn();\n  },\n  req_triggers: function req_triggers() {\n    var _this3 = this;\n\n    if (this.state.runningReqTriggers_timer) return; //if ( Object.keys( this.affected ).length == 0 ) return;\n\n    this.state.runningReqTriggers_timer = this.setInterval(function () {\n      //console.log( \"affected::\", _.cloneDeep(this.affected ) );\n      _this3.asyncTriggers();\n    }, 0, \"triggers\");\n  },\n  asyncTriggers: function asyncTriggers() {\n    var keys = Object.keys(this.affected);\n\n    if (keys.length == 0) {\n      this.clearInterval(this.state.runningReqTriggers_timer); //console.log( \"affected_checked\", this.affected_checked );\n\n      this.affected_checked = {};\n      delete this.state.runningReqTriggers_timer;\n      return;\n    } //console.log( \"checking\", keys[0 ] );\n\n\n    this.affected_checked[keys[0]] = this.affected[keys[0]];\n    delete this.affected[keys[0]];\n    this.lazy_checkTriggers(keys[0]);\n  },\n  req_Agenda: function req_Agenda() {\n    var _this4 = this;\n\n    if (this.state.runningAgendaTriggers_timer) return;\n    if (this.state.agenda.tasks.length == 0) return;\n    this.state.runningAgendaTriggers_timer = this.setInterval(function () {\n      _this4.asyncTriggersAgenda();\n    }, 0, \"agenda\");\n  },\n  asyncTriggersAgenda: function asyncTriggersAgenda() {\n    if (this.state.agenda.tasks.length == 0) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n      return;\n    }\n\n    var trigger = this.state.agenda.tasks.shift();\n    if (!trigger) return console.error(trigger); //console.log( \"checking\", keys[0 ] );\n\n    delete this.state.agenda.names[trigger.id];\n    this.runTrigger(trigger, trigger.target, trigger.listener); //this.lazy_checkTriggers( keys[0] );\n  },\n  lazy_checkTriggers: function lazy_checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      if (this.state.agenda.names[path]) return;\n      var triggers = this.state.triggers[path];\n\n      for (var i in triggers) {\n        var trigger = triggers[i];\n        var id = trigger.id || path + \"___\" + i;\n        if (this.state.agenda.names[i]) continue;\n        if (!trigger.path) trigger.target = path;\n        if (!trigger.token) trigger.listener = i;\n        if (!trigger.id) trigger.id = id;\n        this.state.agenda.names[id] = true;\n        this.state.agenda.tasks.push(trigger);\n      }\n\n      this.sortAgenda();\n      this.req_Agenda();\n    }\n  },\n  sortAgenda: function sortAgenda() {\n    this.state.agenda.tasks.sort(function (taskA, taskB) {\n      if (!taskB.salience) return 1;\n      if (!taskA.salience) return -1;\n      return taskA.salience - taskB.salience;\n    });\n  },\n  setObObj: function setObObj(target, source, fn, path) {\n    for (var i in source) {\n      if (source[i] === undefined) continue;else if (_.isObjectLike(source[i])) {\n        if (!target[i]) target[i] = {};\n        this.setObObj(target[i], source[i], fn, path.concat(i));\n      } else {\n        if (target[i] != source[i]) {\n          target[i] = source[i];\n          fn.addPath(path.concat(i));\n        }\n      }\n    }\n  },\n  appendToArray: function appendToArray(path, value, setVersion) {\n    var target = _.get(this.state.wallet, path);\n\n    if (!target) {\n      value = [value];\n      return this.set(path, value, false, setVersion);\n    }\n\n    var index = target.length;\n    var route = _.isArray(path) ? path : path.split(\".\");\n    route.push(index);\n    return this.set(route, value, false, setVersion);\n  },\n  setByLoader: function setByLoader(path, value) {\n    if (_.isArray(path)) path = path.join(\".\");\n\n    var prism = _.get(this.state.meta, path);\n\n    if (!prism || !prism.loader || !prism.loader.set) return false;\n    var tb = TB.init({}, this, {}, prism.loader, {}, this.state.loadersCache[path]);\n    value = prism.loader.set(tb, value);\n    return true;\n  },\n  set: function set(path, value, isLoaders, setVersion) {\n    this.historyManager.startStack({\n      type: \"set\",\n      path: path,\n      value: value\n    });\n\n    try {\n      if (this.setByLoader(path, value)) {\n        return;\n      }\n\n      var target = isLoaders ? this.state.meta : this.state.wallet;\n\n      _.set(target, path, value); //if ( setVersion ) {\n\n\n      this.state.currentVersion++; //}\n\n      this.updateVersionForAll(path.split(\".\"));\n\n      _.set(this.state.version, path + \".version\", this.state.currentVersion);\n\n      var strPath = _.isArray(path) ? path.join(\".\") : path;\n      this.getAffectedPaths(strPath);\n      this.req_triggers();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.historyManager.endStack();\n    }\n  },\n  affected: {},\n  affected_checked: {},\n  markChangeOn: function markChangeOn(path, skipTrigger) {\n    this.getAffectedPaths(path);\n    if (!skipTrigger) this.req_triggers();\n  },\n  getAffectedPaths: function getAffectedPaths(path) {\n    if (this.state.cache[path]) {\n      this.state.cache[path].shouldUpdate = true;\n    }\n\n    if (this.affected[path]) {\n      return;\n    }\n\n    this.affected[path] = {\n      version: this.state.currentVersion,\n      state: 1\n    };\n    var route = path.split(\".\");\n    var strPath = route[0];\n    this.getAffectedPaths(route[0]);\n\n    for (var i = 1; i < route.length - 1; i++) {\n      strPath += \".\" + route[i];\n      this.getAffectedPaths(strPath);\n    }\n\n    var influenced = this.getInfluenced(path);\n\n    for (var i in influenced) {\n      this.getAffectedPaths(influenced[i]);\n    }\n  },\n  markChangedPaths: function markChangedPaths(path) {\n    //let influenced = this.getInfluenced( path );\n    var route = path.split(\".\");\n    var strPath = route[0];\n\n    for (var i = 1; i < route.length; i++) {\n      strPath += \".\" + route[i];\n      if (this.state.cache[strPath]) this.state.cache[strPath].shouldUpdate = true;\n      this.checkTriggers(strPath);\n      this.setUpdateFlag(strPath);\n    }\n  },\n  changedPaths: {},\n  setUpdateFlag: function setUpdateFlag(path) {\n    var influenced = this.getInfluenced(path);\n    var cache = this.state.cache;\n\n    for (var i in influenced) {\n      if (cache[influenced[i]]) {\n        cache[influenced[i]].shouldUpdate = true;\n      }\n\n      this.setUpdateFlag(cache[influenced[i]]);\n      this.checkTriggers(influenced[i]);\n    }\n  },\n  checkTriggers: function checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      this.runTriggers(this.state.triggers[path], path);\n    }\n  },\n  runTriggers: function runTriggers(collection, path) {\n    for (var i in collection) {\n      this.runTrigger(collection[i], path, i);\n    }\n  },\n  runTrigger: function runTrigger(trigger, path, token) {\n    if (_.isFunction(trigger.run)) {\n      return trigger.run(trigger, path, token);\n    }\n\n    var fn = _.get(this.state.wallet, trigger.run);\n\n    if (_.isFunction(fn)) return fn(trigger, path, token);else if (fn.run) return fn.run(trigger, path, token);\n  },\n  run: function run(path, value) {},\n  fetchValues: function fetchValues(target, map, wallet, master, logger, onlyPaths) {\n    for (var i in map) {\n      if (i == \"type\") continue;\n      var value = map[i];\n\n      if (_.isString(value)) {\n        if (value.charAt(0) == \"$\") {\n          var _path = value.substr(2);\n\n          if (logger) logger.add(_path, i);\n          value = master.getValue(_path);\n        } else if (onlyPaths) {\n          var _path2 = value;\n          if (logger) logger.add(_path2, i);\n          value = master.getValue(_path2);\n        }\n      } else if (value.KEY == \"fullPath\") {\n        path = value.path.join(\".\");\n        if (logger) logger.add(path, i);\n        value = master.getValue(path);\n      }\n\n      if (value === undefined) throw \"postpone\";\n      var slot = i;\n      target[slot] = value;\n      if (!target.src) target.src = {};\n      target.src[slot] = {\n        key: map[i],\n        slot: i\n      };\n    }\n\n    return target;\n  },\n  setCombined: function setCombined(path, value) {\n    this.historyManager.startStack({\n      type: \"setCombined\",\n      path: path,\n      value: value\n    });\n    var payload = {\n      loaders: {},\n      loadersPaths: [],\n      basePath: path.split(\".\"),\n      value: value,\n      pins: [],\n      afterOp: []\n    };\n    var isEmpty = this.iterate(value, [], payload);\n\n    if (payload.pins.length) {\n      var currentPins = {};\n\n      for (var i in payload.pins) {\n        var _pin = payload.pins[i];\n\n        var name = _pin.value || _pin.path.slice(-1)[0];\n\n        currentPins[name] = {\n          path: _pin.path,\n          fullPath: payload.basePath.concat(_pin.path)\n        };\n      }\n\n      var pins = _.get(this.state.pins, path + \".pins\");\n\n      if (!pins) _.set(this.state.pins, path + \".pins\", pins = {});\n\n      _.merge(pins, currentPins);\n    }\n\n    if (payload.afterOp.length) {\n      for (var i in payload.afterOp) {\n        var op = payload.afterOp[i];\n\n        if (op.type == \"gluePin\") {\n          var pin = pins[op.pin];\n          var pinKey = {\n            KEY: \"fullPath\",\n            path: pin.fullPath\n          };\n\n          if (op.isLoader) {\n            _.set(payload.loaders, op.dest, pinKey);\n          } else {\n            _.set(value, op.dest, pinKey);\n          }\n        } else if (op.type == \"flags\") {\n          if (op.flags.hasVersion) {\n            this.updateVersion(op.path);\n          }\n        }\n      }\n    }\n\n    if (!isEmpty) this.set(path, value, false, true);\n\n    if (payload.hasLoaders) {\n      //console.log( \"loaders\", payload.loadersPaths );\n      this.set(path, payload.loaders, true, true);\n\n      for (var i in payload.loadersPaths) {\n        var lPath = payload.loadersPaths[i];\n        this.setCache(lPath.join(\".\"), {}, true);\n\n        var loader = _.get(this.state.meta, lPath);\n\n        if (loader.loader && loader.loader.autostart) {\n          this.state.toStart.push({\n            path: lPath.join(\".\")\n          }); //this.getValue(lPath.join(\".\"));\n        } //console.log( \"loader\", loader );\n\n      }\n    }\n\n    this.historyManager.endStack();\n  },\n  runToStart: function runToStart() {\n    var toStart = this.state.toStart;\n\n    while (toStart.length) {\n      var item = toStart.shift();\n      this.getValue(item.path);\n    }\n  },\n  buildModel: function buildModel(input, path) {\n    var modelName = input.MODEL;\n    input = _.cloneDeep(input);\n    var tokens;\n\n    if (modelName.indexOf(\":\") != -1) {\n      tokens = modelName.split(\":\");\n      modelName = tokens.shift();\n      input.tokens = tokens;\n    }\n\n    var mold = this.getValue(modelName);\n\n    if (mold.handleTokens && tokens) {\n      mold.handleTokens(input, tokens, path);\n    }\n\n    var obj = _.cloneDeep(mold.modelObj);\n\n    if (mold.modelSpec) {\n      var spec = mold.modelSpec;\n\n      if (spec.ops) {\n        for (var i in spec.ops) {\n          var op = spec.ops[i];\n\n          if (op.type == \"replaceValue\") {\n            var value = _.get(input, op.source);\n\n            if (!op.dest) obj = value;else _.set(obj, op.dest, value);\n          } else if (op.type == \"eval\") {\n            var _value2 = op.fn(input, op);\n\n            console.log(_value2);\n\n            _.set(input, op.dest, _value2);\n          }\n        }\n      }\n\n      if (spec.isLoader) {\n        obj = {\n          loader: obj\n        };\n      }\n    }\n\n    if (input.pin !== undefined) obj.pin = input.pin;\n    this.historyManager.addInfo({\n      type: \"buildModel\",\n      path: path,\n      input: input,\n      obj: obj\n    });\n    return obj;\n  },\n  iterate: function iterate(obj, path, payload) {\n    while (obj && obj.MODEL) {\n      var newObj = this.buildModel(obj, payload.basePath.concat(path));\n\n      for (var i in obj) {\n        delete obj[i];\n      }\n\n      _.merge(obj, newObj); //really ? it was easier that way then to put inside the loop and on setCombined ? really ? \n      //yea, keeping the traditional approach\n\n    }\n\n    var isEmpty = true;\n\n    for (var i in obj) {\n      var subPath = path.concat(i);\n\n      if (i == \"pin\") {\n        payload.pins.push({\n          subPath: subPath,\n          path: path,\n          value: obj[i]\n        });\n        delete obj[i];\n      } else if (i == \"loader\") {\n        this.setLoader(payload.loaders, path, obj[i], payload.basePath, payload);\n        payload.loadersPaths.push(payload.basePath.concat(path));\n        delete obj[i];\n        payload.hasLoaders = true;\n      } else if (i == \"flags\") {\n        payload.afterOp.push({\n          type: \"flags\",\n          path: payload.basePath.concat(path).join(\".\"),\n          relPath: path,\n          flags: obj.flags\n        });\n      } else if (_.isString(obj[i]) && obj[i].charAt(0) == \"%\") {\n        obj[i] = this.getStaticValue(obj[i], i, obj, subPath, payload);\n        isEmpty = false;\n      } else if (_.isObjectLike(obj[i])) {\n        var subIsEmpty = this.iterate(obj[i], subPath, payload);\n\n        if (subIsEmpty) {//delete obj[ i ];\n        } else {\n          isEmpty = false;\n        }\n\n        isEmpty = false;\n      } else {\n        isEmpty = false;\n      }\n    }\n\n    return isEmpty;\n  },\n  getStaticValue: function getStaticValue(slot, index, obj, path, payload) {\n    if (slot == \"%PATH\") return payload.basePath.concat(path);else {\n      payload.afterOp.push({\n        type: \"gluePin\",\n        dest: path,\n        pin: slot.substring(1)\n      });\n      return {\n        KEY: \"relative path\"\n      };\n    }\n  },\n  getUID: function getUID() {\n    return this.state.nextUID++;\n  },\n  setTrigger: function setTrigger(target, listener, trigger) {\n    if (!this.state.triggers[target]) this.state.triggers[target] = {};\n    this.state.triggers[target][listener] = trigger;\n  },\n  getTrigger: function getTrigger(target, listener) {\n    if (!this.state.triggers[target]) return null;\n    return this.state.triggers[target][listener];\n  },\n  remTrigger: function remTrigger(target, listener) {\n    if (!this.state.triggers[target]) return;\n    delete this.state.triggers[target][listener];\n  },\n  setLoader: function setLoader(loaders, path, value, basePath, payload) {\n    if (_.isString(value)) {\n      var listenerPath = basePath.concat(path).join(\".\");\n      var oldTrigger = this.getTrigger(value, listenerPath);\n      if (oldTrigger && oldTrigger.path) this.remTrigger(oldTrigger.path, listenerPath);\n      this.setTrigger(value, listenerPath, {\n        run: \"base.updateLoader\",\n        loaderPath: value,\n        destination: listenerPath\n      });\n      value = this.getValue(value);\n    }\n\n    this.prepareLoader(value, basePath, path.concat(\"loader\"), payload);\n\n    _.set(loaders, path.concat(\"loader\"), value); //this.markChangeOn( path, true );\n\n  },\n  prepareLoader: function prepareLoader(loader, basePath, loaderPath, payload) {\n    this.deepTransformObj(loader, [], function (obj, slot, path) {\n      if (_.isString(obj) && obj.charAt(0) == \"%\") {\n        if (obj == \"%PATH\") {\n          return payload.basePath.concat(loaderPath);\n        }\n\n        payload.afterOp.push({\n          type: \"gluePin\",\n          dest: loaderPath.concat(path),\n          pin: obj.substring(1),\n          isLoader: true\n        });\n        return {\n          x: 12\n        };\n      }\n    });\n  },\n  deepTransformObj: function deepTransformObj(obj, path, test) {\n    if (!obj || !_.isObject(obj)) return;\n\n    for (var i in obj) {\n      var value = test(obj[i], i, path.concat([i]));\n\n      if (value !== undefined) {\n        obj[i] = value;\n        continue;\n      }\n\n      if (_.isObject(obj[i])) this.deepTransformObj(obj[i], path.concat([i]), test);\n    }\n  },\n  setMap: function setMap(map) {\n    for (var i in map) {\n      this.setCombined(i, map[i]);\n    }\n  },\n  getFromDispatch: function getFromDispatch(path) {\n    return this.getValue(path);\n  },\n  getVersion: function getVersion(path) {\n    var route = path.split(\".\");\n    var version = -1;\n    var versionsTree = this.state.version;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n      if (!versionsTree[slot]) return version;\n      versionsTree = versionsTree[slot];\n      if (versionsTree.version) version = versionsTree.version;\n    }\n\n    return version;\n  },\n  getVersionTree: function getVersionTree(path) {\n    var versionsTree = this.state.version;\n    return _.get(versionsTree, path);\n  },\n  updateVersionForAll: function updateVersionForAll(path) {\n    for (var i = 0; i < path.length; i++) {\n      _.set(this.state.version, path.slice(0, i).concat(\"version\"), this.state.currentVersion);\n      /*\n      \n      var node = _.get( this.state.version, path.slice(0,i) );\n      if ( !node ) break;\n      if ( node.version ) node.version = this.state.currentVersion;\n      */\n\n    }\n  },\n  updateVersion: function updateVersion(path) {\n    _.set(this.state.version, path + \".version\", this.state.currentVersion);\n  },\n  objectDiff: function difference(oldObject, newObject) {\n    function changes(oldO, newO) {\n      if (!_.isObject(oldO) || !_.isObject(newO)) return {\n        change: {\n          from: oldO,\n          to: newO\n        }\n      };\n      var result = {};\n      var hasChanges = false;\n\n      for (var i in newO) {\n        if (oldO[i] === undefined) {\n          result[i] = {\n            change: {\n              from: undefined,\n              to: newO[i],\n              type: \"added\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isFunction(newO[i]) && oldO[i] && newO[i].toString() != oldO[i].toString()) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"function changed\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isObject(newO[i])) {\n          var subChanges = changes(oldO[i], newO[i]);\n\n          if (subChanges) {\n            result[i] = subChanges;\n            hasChanges = true;\n          }\n        } else if (newO[i] != oldO[i]) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"changed\"\n            }\n          };\n          hasChanges = true;\n        }\n      }\n\n      for (var i in oldO) {\n        if (newO[i] === undefined) {\n          hasChanges = true;\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: null,\n              type: \"deleted\"\n            }\n          };\n        }\n      }\n\n      return hasChanges ? result : null;\n    }\n\n    return changes(oldObject, newObject);\n  },\n  act: function act(path, args, tb) {\n    var value = _.isObject(path) ? path : this.getValue(path);\n\n    if (!tb) {\n      tb = this.tb();\n    }\n\n    var act = ACT.init(value, this, args, path, tb);\n    return act;\n  },\n  tb: function tb() {\n    var tb = TB.init({}, this, null, {}, {}, {});\n    return tb;\n  }\n};\n\nvar DataManager = _DataManager.setup();\n\nvar ACT = {\n  master: null,\n  actions: null,\n  args: null,\n  init: function init(actions, master, args, path, tb) {\n    var item = Object.create(this);\n    item.master = master;\n    item.actions = actions;\n    item.args = args;\n    item.path = path;\n    item.tb = tb;\n    return item;\n  },\n  run: function run(name, args) {\n    return this.actions[name].apply(this.actions, [args, this.tb]);\n  }\n};\nvar TB = {\n  master: null,\n  logger: null,\n  spec: null,\n  step: null,\n  cache: null,\n  v: null,\n  init: function init(wallet, master, logger, spec, step, cache) {\n    var item = Object.create(this);\n    Object.assign(item, {\n      wallet: wallet,\n      master: master,\n      logger: logger,\n      spec: spec,\n      step: step,\n      cache: cache\n    });\n    item.v = {};\n    return item;\n  },\n  act: function act(path, args) {\n    var act = this.master.act(path, args, this);\n    return act;\n  },\n  go: function go(name, args) {\n    if (!this.toolbox) this.toolbox = DataManager.getValue(\"toolBox\");\n\n    if (!this.toolbox[name]) {\n      console.log(\"no \", name);\n      return null;\n    }\n\n    if (this.toolbox[name].run) return this.toolbox[name].run(args, this);else if (_.isFunction(this.toolbox[name])) return this.toolbox[name](args, this);\n  },\n  path: function path() {\n    return this.step.srcPath.join(\".\");\n  },\n  fetch: function fetch(paths, target) {\n    return this.run_fetch(paths, target);\n  },\n  run_fetch: function run_fetch(paths, target, prefix) {\n    var _this5 = this;\n\n    var singlePath = false;\n\n    if (_.isString(paths) || paths.KEY) {\n      singlePath = true;\n      paths = {\n        SINGLEPATH: paths\n      };\n    }\n\n    var values = {};\n    this.master.fetchValues(values, paths, this.wallet, this.master, {\n      add: function add(path, slot) {\n        if (!_this5.logger) return;\n        var name = slot !== \"SINGLEPATH\" ? (prefix || []).concat(slot) : prefix || [];\n\n        _this5.logger.add(path, name.join(\".\"));\n      }\n    }, true);\n\n    for (var i in values) {\n      if (values[i] && values[i].type == \"routes\") {\n        var subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n        values[i] = this.run_fetch(values[i], null, subPrefix);\n      } else if (values[i] && values[i].type == \"value\") {//let subPrefix = i != \"SINGLEPATH\" ? (prefix || [] ).concat( i ) : prefix;\n        //values[ i ] = this.run_fetch( values[ i ], null, subPrefix )\n      } else if (values[i] && _.isString(values[i]) && values[i].charAt(0) == \"$\") {\n        var _subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n\n        values[i] = this.run_fetch(values[i].substring(2), null, _subPrefix);\n      }\n    }\n\n    if (singlePath) values = values.SINGLEPATH;\n\n    if (target) {\n      if (target.src) {\n        var src = values.src;\n        delete values.src;\n\n        _.merge(target.src, src);\n      }\n\n      Object.assign(target, values);\n      return target;\n    } else {\n      return values;\n    }\n  },\n  pathOf: function pathOf(path) {\n    var path = this.v.src[path];\n    if (path.key) return path.key;\n    if (_.isString(path)) return path;\n  },\n  set: function set(path, value) {\n    var target = this.v;\n    var route = _.isString(path) ? path.split(\".\") : path;\n    var last_src = null;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n\n      if (target.src && target.src[slot]) {\n        last_src = {\n          src: target.src[slot],\n          left: route.slice(i + 1)\n        };\n      }\n\n      if (!target[slot]) {\n        break;\n      }\n\n      target = target[slot];\n    }\n\n    if (last_src) {\n      var basePath = _.isString(last_src.src.key) ? last_src.src.key.split(\".\") : last_src.src.key.path;\n      var fullPath = basePath.concat(last_src.left).join(\".\");\n      this.master.set(fullPath, value);\n    }\n  },\n  detach: function detach() {\n    var detached = Object.create(this);\n    detached.v = {};\n    detached.logger = null;\n    return detached;\n  },\n  feed: function feed(path) {\n    var feedModel = this.master.getValue(path);\n    var feed = feedModel.init();\n    var start = 1;\n\n    for (var i = start; i < arguments.length; i++) {\n      feed.in(arguments[i]);\n    }\n\n    return feed;\n  }\n};\n\ntry {\n  if (!window.DataManager) {\n    window.DataManager = DataManager;\n    window._DataManager = _DataManager;\n  } //eval( 'export default DataManager' );\n\n} catch (e) {}","module.exports = __webpack_public_path__ + \"static/media/logo.06a44ff7.svg\";"],"sourceRoot":""}
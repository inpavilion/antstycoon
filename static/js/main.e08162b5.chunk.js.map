{"version":3,"sources":["units/units/db.js","units/units/reactAssembler.js","components/CodeMirrorEditor.js","managers/KeyboardManager.js","managers/TimerManager.js","units/main.js","units/units/brand.js","units/units/bubbleBoard.js","units/units/bubbleFlow.js","units/units/bubbleGuns.js","units/units/bubbleTest.js","units/units/bubbleTypes.js","units/units/parseObjIntoMold.js","units/units/parseStringIntoComp.js","units/units/prettyScode.js","components/MyInput.js","units/units/reactUtils.js","units/units/store.js","units/units/testDataGenerator.js","units/units/testMolds.js","units/units/testTplAssembling.js","units/units/tplObjParse.js","units/units/treeCardsBuilder.js","units/units/treeIterator.js","units/units/uids.js","units/init.js","units/index.js","components/TreeDiagram.js","FlatAnt2.js","App.js","serviceWorker.js","index.js","../../data-department/dataManager.js","logo.svg"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","faker__WEBPACK_IMPORTED_MODULE_1__","faker__WEBPACK_IMPORTED_MODULE_1___default","pouchdb__WEBPACK_IMPORTED_MODULE_2__","pouchdb_find__WEBPACK_IMPORTED_MODULE_3__","pouchdb_quick_search__WEBPACK_IMPORTED_MODULE_4__","pouchdb_quick_search__WEBPACK_IMPORTED_MODULE_4___default","PouchDB","plugin","PouchDBFind","PouchDBQuickSearch","cu","window","ub","ctx","serialize","obj","_","cloneDeepWith","value","isFunction","TYPE","body","toString","deserialize","item","fn","eval","e","save","id","db","this","uid","generateUid","_id","get","then","doc","rev","_rev","put","i","catch","err","load","_this","cfg","state","nextId","prefix","init","name","auto_compaction","Date","getTime","Math","random","Object","create","destroy","alert","loadfilter","selector","count","sort","find","partialTextSearch","word","query","emit","text","split","filter","length","forEach","element","type","map","mapId","parent","parentId","test","startKey","endKey","searchText","search","fields","include_docs","highlighting","loadFromIndex","sortField","sortDir","limit","$gt","set","createIndex","index","result","explain","res","console","log","x","y","obj2","run","def","debug","tb","model","data","getter","cloneDeep","mold","tpl","applyOps","ops","props","tplid","newOps","op","action","path","join","PATH","VALUE","unset","error","inputs","#color","#handle","#test2","#test1","#title","tests","pin","reactAssembler","moldAssembler","require","Component","DataManager","KeyboardManager","setup","isInitialized","$","on","evt","handleKey","setTrigger","layout","getValue","altKey","push","ctrlKey","metaKey","shiftKey","key","toLowerCase","comb","TimerManager","wallet","timers","start","delay","clearTimeout","timer","setTimeout","cancel","date","end","getRandomFn","str","seed","charCodeAt","sin","floor","getBrand","randomFn","baseBrand","brand","mainColor_hsl","getColor","complementColor_hsl","mainColor","complementColor","fadedColor","baseColor","hue","color","chroma","hsl","getRandom","scale","max","pointsStar","polies","_loop","j","poligonPoints","col","classname","round","points","concat","getLogo","bubbleBoard","addItem","getId","mergeItem","minStep","changed","appendTo","results","versions","isReady","undefined","completedAt","rewindTo","onchanged","step","createdAt","values","items","hasChanges","slot","bubbleid","isString","charAt","substring","isObject","isMatch","version","evalItems","affected","_evalItems","isCompleteValues","evalItem","node","getNode","bubble","defaultsDeep","trails","rels","bellow","above","uses","checkIfComplete","val","master","evaluateflow","getVersion","bubbleFlow","fns","doubleCheck","evaluate","target","checks","check","shaddow","score","subs","total","resolved","unresolved","tplParams","defined","parameters","param","v","targetId","opt","_setup","assign","shaft","fullPath","getFull","route","base","relPath","fetch","it","collection","cb","oldValues","info","sub","paths","stateCurrentId","currentItem","targetid","compile","clues","needes","provides","collections","subScore","params","undefinedCount","definedCount","bubbleGuns","bubbleTypes","dispatch","bubbleTest","nodeType","tplObjParse","viewAs","dataNode","reactNode","neededValues","cues","pins","mirror","description","newItem","bubbles","cache","newId","newValues","mirrorBubble","types","payload","oldPayload","comments","getTpl","opValues","newValue","indexOf","replace","addOp","stage","isArray","addComment","comment","finalOp","firstChar","concatParent","parseObjIntoMold","z","p","zz","$$test","salut","test.{test}.test","phase1","html","trim","nest","document","createElement","innerHTML","specs","childNodes","el","spec","_spec","nodeValue","attributes","attr","all","char","toUpperCase","class","className","style","_style","componentName","nodeName","children","htmlSlot","keys","child","match","reg","css","exec","phase2","attrs","_this2","watchAttrs","iterate","a","b","handleObj","childrenPath","subPath","handleProp","prepareAction","concatOp","_this3","parseStringIntoComp","nextUID","makestr","indent","usequouts","js_beautify","indent_size","indent_level","preserve_newlines","max_preserve_newlines","indent_inner_html","trimStart","lines","isObjectLike","isNil","beautify","prettyScode","MyInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","setState","nextProps","React","customComponents","myinput","makeComponent","flattenDeep","component","reactUtils","tplComponent","createStore","hapi","store","tpls","parents","stopPropagation","change","runWith","src","getItem","getSubs","registerTpl","args","cases","faker","company","catchPhrase","setter","level","generated","uuid","arrayElement","prepare","ret","integrate","addPayload","_case","testDataGenerator","parser","testMolds","parseTpl","renderTpl","assembleTpl","molds","iterateBubbles","shouldAssemble","isRegistered","addBubble","computedAtStep","uids","addedAtStep","testTplAssembing","value_setter","content","#test","tplId","isUnparsedTpl","isCollection","isObjTpl","parseHtml","parseObj","_check","payload1","tplsMapping","defaultTpl","usedGlobalStyles","addSubs","nodes","card","useTemplate","skipGlobalStyle","root","globalStyle","title","getMolds","buildTpls","iterator","addGlobalStyles","gbs","styles","makeSelector","treeCardsBuilder","repo","mappings","treeIterator","mub","pending","passes","shift","group","groupEnd","ctxpins","newAPI","TimerManagerBuilder","showhud","currentView","goToCard","placeorder","which","flow","place","restart","parseinput","parse","select","focus","myUB","afterRenderActions","add","goToInfo","bridge","bridgeLoader","loadBridge","selectMap","mapview","loadMap","setCombined","getAll","showMenu","hideMenu","addEntries","input","showSearch","noPlace","substr","editStartedAt","firstCharAt","antsDbState","getParent","actions","main","prevStep","startedAt","getWallet","selectItem","addInfo","changeItem","createMap","merge","ant","allSubs","history","changeAt","now","placedAt","hasInfo","mergeRoot","mergeValue","loader","fnsub","make","old","setupAll","makeUb","tb.db","goSetup","extra","autostart","waiting","c","onready","promise","Promise","resolve","opts","runAll","scrollIntoViewSelected","scrollIntoViewIfNeeded","alertAnimation","addClass","removeClass","loadItems","saveItems","request_save","setupRequired","ubs","detach","getFromParent","names","addUb","setupUb","getItemsToSave","promises","loadFilter","_this4","startIds","related","ids","top","notdb","recent","docs","ant1","_this5","customTpl","logo","generateId","triggerChange","setRel","rel","mapView","frame","topic","entry","other","button","handle","bridgeTitle","mapTitle","uistate","rows","selected","otherTpl","moldsMap","cardMold","background","colors","getBody","setV","memo","cleanV","list","getBodyList","isSelected","afterContent","getHandle","String","fromCharCode","moldName","titleMold","titlePath","skiped","loadItem","putValue","runTriggers","triggers","isPartial","running","shouldRerun","runAllOps","prepareOp","partial","missing","runOp","ncOps","assembleObj","isEqual","listTemplate","useTpl","antId","makeStats","currentId","directSubs","created","highlight","started","stats","matches","itemTitle","resultSection","resultItem","moment","calendar","created_on","updateVersionsMap","getUb","hudData","hudView","tb.actions","outcome","markChangeOn","addVFn","tplSpecs","byLevel","borderColor","makeItem","makeList","stack","clean","stacks","pop","_this6","onbeforeunload","saveAll","loadAll","_this7","tosave","savings","saveitem","loaditem","onload","runOn","starter","done","overPanel","bubbleitem","menuitem","orderText","order","viewState","view","changeOrder","bumbAction","placeOrder","dim","height","width","barHeight","label","bubbleList","bumb","textColor","menu","panel","historyManager","recording","runToStart","Frame","_this8","_this9","components","FlatAnt","_this10","scode","react_default","FlatAnt2_Frame","App","FlatAnt2","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","currentStack","startStack","prevStack","skipClone","endStack","_DataManager","gettingValue","meta","loadersCache","currentVersion","dependencies","agenda","tasks","toStart","flags","setCtx","basePath","ctxPath","getCtx","runFn","fnName","targetPath","getInfluenced","influenced","dep","skipPartialValueCheck","checkCache","partialPath","slice","partialResult","partialSlot","partialValue","listToValue","setCache","shouldUpdate","ignoreUpdates","prepareCache","contains","dependsOn","diffCache","oldCache","addDependency","remDependency","newC","oldC","depOn","walletValue","srcPath","rootPath","_item","_i","silentSet","skipPathAffected","getAffectedPaths","postponedSteps","hasSteps","snoozeCount","getFromLoader","addLog","lhs","rhs","cachedValue","xcache","requester","force","logger","prism","loadedPrism","getFromDispatch","_value","TB","skipCache","runUtils","apply","oldValue","changedPaths","addPath","pauseAll","setObObj","updateVersionForAll","req_triggers","runningReqTriggers_timer","clearInterval","runningAgendaTriggers_timer","setInterval","callback","stop","requestAnimationFrame","stopFn","asyncTriggers","affected_checked","lazy_checkTriggers","req_Agenda","asyncTriggersAgenda","trigger","runTrigger","listener","token","sortAgenda","taskA","taskB","salience","source","appendToArray","setVersion","setByLoader","isLoaders","strPath","affected_version","skipTrigger","incAffected","markChangedPaths","checkTriggers","setUpdateFlag","fetchValues","onlyPaths","_path","_path2","KEY","loaders","loadersPaths","afterOp","isEmpty","currentPins","_pin","pinKey","isLoader","dest","hasVersion","updateVersion","hasLoaders","lPath","buildModel","tokens","modelName","MODEL","handleTokens","modelObj","modelSpec","_value2","newObj","setLoader","getStaticValue","getUID","getTrigger","remTrigger","listenerPath","oldTrigger","loaderPath","destination","prepareLoader","deepTransformObj","setMap","versionsTree","getVersionTree","objectDiff","oldObject","newObject","changes","oldO","newO","from","to","subChanges","act","ACT","go","toolbox","run_fetch","singlePath","SINGLEPATH","subPrefix","_subPrefix","pathOf","last_src","left","detached","feed","arguments","in","module","exports"],"mappings":"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","file":"static/js/main.e08162b5.chunk.js","sourcesContent":["import _ from \"lodash\"\nimport faker from \"faker\"\nimport PouchDB from \"pouchdb\"\nimport PouchDBFind from 'pouchdb-find';\nimport PouchDBQuickSearch from 'pouchdb-quick-search';\n\nPouchDB.plugin(PouchDBFind);\nPouchDB.plugin(PouchDBQuickSearch);\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {},\n\n    serialize : function( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( _.isFunction( value ) ) return { TYPE : \"FN\", body : value.toString() };\n        })\n\n        return item;\n    },\n\n    deserialize : function ( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( value && value.TYPE == \"FN\" ) {\n                let fn;\n                try  { \n                    eval( \"fn=\" + value.body )\n                } catch (e ) {\n\n                }\n                return fn;\n            } \n        })\n\n        return item;\n    },\n\n    save: function (value, id) {\n        var db = this.ctx.db;\n\n        let item = this.serialize( value );\n        if (!item.uid) item.uid = id || item.id || this.generateUid();\n        if (!item._id) item._id = item.uid;\n  \n        return db.get(item._id)\n          .then((doc) => {\n            let rev = doc.rev;\n            let _rev = doc._rev;\n\n            item.rev = rev;\n            item._rev = _rev;\n            return db.put(item).then( ( i)=> {\n            })\n          })\n          .catch(err => {\n            return db.put(item);\n          })\n\n\n\n    },\n\n\n\n    load: function (id) {\n        return this.ctx.db.get(id).catch( e => {\n            return null\n        })\n        .then ( item => {\n            if ( item ) item = this.deserialize( item );\n            return item;\n        })\n    },\n\n\n    generateUid : function ( ) {\n        this.cfg.state.nextId++;\n        return this.cfg.state.prefix + \"_\" + this.cfg.state.nextId;\n    },\n\n    init: function (name) {\n        let ctx = {\n            db: new PouchDB(name, {auto_compaction: true}),\n            state: {\n                prefix: new Date().getTime().toString() + \"_\" + Math.random().toString(),\n                nextId: 0,\n                id : \"state\"\n            }\n        }\n\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        item.load(\"state\").then(state => {\n            if ( state ) item.ctx.state = state\n            else item.save( item.ctx.state )\n        })\n\n        return item;\n    },\n\n    destroy : function ( ) {\n        this.ctx.db.destroy( ) \n            .then ( () => {\n\n                alert( \"done cleanup\")\n            })\n    },\n\n    loadfilter : function ( selector, count, sort ) {\n        return this.ctx.db.find( { selector  });\n    },\n\n    partialTextSearch : function ( word ) { \n        return this.ctx.db.query( (doc, emit)=> {\n            if ( !doc.text ) return;\n            let tokens = doc.text.split( /\\s+/g );\n            tokens.filter( word => word.length > 2 ).forEach(element => {\n                emit( element, { type : doc.type, map : doc.mapId , parent : doc.parentId ,test : \"salut\"} )\n            });\n        }, {startKey : word, endKey : word + \"\\0\"})\n    },\n\n    searchText : function ( text ) {\n        return this.ctx.db.search( {\n            query: text ,\n            fields: ['title', 'text'],\n            include_docs: true,\n            highlighting: true\n          })\n    },\n\n    loadFromIndex : function ( selector, sortField, sortDir, limit, fields ) {\n        let db = this.ctx.db;\n        //let fields = _.uniq( Object.keys(sort).concat(Object.keys( selector )) );\n\n        if ( !selector[sortField] ) selector[sortField] = { $gt : null };\n        let sort = [_.set( {}, sortField, sortDir ? \"desc\" : \"asc\")]\n\n        return (\n            db.createIndex(\n                {index : {\n                    fields : fields\n                }}\n            )\n            .then ( (result)=>{\n                return result.name\n            })\n            .then( (index )=>{\n                db.explain( {selector, limit, sort}) .then( (res)=> console.log( \"explain\", res ))\n                return db.find( {selector , limit, sort})\n            })\n        ) \n\n    }\n\n\n\n}\n\nvar test = (result) => {\n    result.obj = ub.serialize( {x : function ( ) {} , y : \"test\"})\n\n    result.obj2 = ub.deserialize( result.obj );\n\n    ub.init(\"testdb\")\n}\n\n\ncu.db = {\n    //test,\n    run: function (name) {\n        return ub.init(name);\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {}\n    },\n\n    run: function (model, data, getter) {\n        model = _.cloneDeep(model);\n        let obj = model.mold.tpl;\n\n        this.applyOps(model.mold.ops, obj, data, getter);\n\n\n        if (obj.props)\n            obj.props.tplid = model.uid;\n\n\n        return obj;\n    },\n\n    applyOps: function (ops, obj, data, getter) {\n        let get = getter || _.get;\n\n        let newOps = [];\n        for (var i = 0; i < ops.length; i++) {\n\n            let op = ops[i];\n\n            if (op.type == \"value\") {\n                let value = get(data, op.action, op, newOps);\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"computedValue\") {\n                let value = op.value;\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"concat\") {\n                let value = get(obj, op.path, op, newOps).join(\"\");\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"pathSet\") {\n                let value = get(obj, op.path, op, newOps);\n\n                _.set( obj, value.PATH, value.VALUE );\n                _.unset( obj, op.path )\n            }\n            else if (op.type == \"makeFunction\") {\n                let body = get(obj, op.path, op, newOps).join(\"\");\n                try {\n                    let fn;\n                    eval(\"fn=\" + body)\n\n                    _.set(obj, op.path, fn)\n                }\n                catch (e) {\n                    console.error ( \"makeFunction::\" + body)\n                }\n            }\n        }\n\n        if (newOps.length)\n            this.applyOps(newOps, obj, data, getter)\n    },\n\n\n}\n\n\nvar inputs = {\n    data: {\n        \"#color\": 12,\n        \"#handle\": \"handle\",\n        \"#test2\": \"test2\",\n        \"#test1\": \"test1\",\n        \"#title\": \"title it is\",\n    }\n}\n\nvar test = (result) => {\n\n    let mold = cu.tests.get(\"mold.x\");\n\n    if (!mold) return \"pending\";\n\n    let value = ub.run(mold, inputs.data);\n\n    result.value = value;\n    result.mold = mold;\n\n    cu.tests.pin(\"reactTree\", value)\n\n    //result.mold = value;\n}\n\ncu.reactAssembler = {\n    //test,\n\n    run: function (mold, data, getter) {\n        return ub.run(mold, data, getter)\n    },\n\n    init: function () {\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}\n\ncu.moldAssembler = cu.reactAssembler;","\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/javascript/javascript');\n\nclass CodeMirrorEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.changeValue = this.changeValue.bind(this);\n    this.changeCursor = this.changeCursor.bind(this);\n    this.isBlured = this.isBlured.bind(this);\n  }\n\n  changeValue(editor, data, value) {\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    //window.editor = editor;\n\n\n    let cursor = editor.getCursor();\n    if (data.origin != undefined) {\n      this.props.valueChanged({ scode: value, cursor: { line: cursor.line, ch: cursor.ch } });\n    }\n    else {\n      this.props.valueChanged({ scode: value })\n    }\n\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n  }\n\n  changeCursor(editor, cursor) {\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n\n    if (cursor.sticky == undefined) return;\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    this.props.valueChanged({ cursor: { line: cursor.line, ch: cursor.ch } });\n\n  }\n  isBlured() {\n    if (this.props.blured)\n      this.props.blured()\n  }\n\n  render() {\n\n    //this means that setting the value with null will delete the value from wallet ?!?\n    let text = this.props.data.scode || \"\";\n    if (!text.length) text = \"\";\n\n    let cursor = this.props.data.cursor;\n    if (!cursor || !cursor.ch) cursor = 0;\n\n    let popup;\n    let caret = this.state.caret || { right : 0, bottom : 0} \n    if (caret) {\n\n      let left = caret.right + 30;\n      let top = caret.bottom + 0;\n\n      popup = <div className=\"popup\" style={{ transform: \"translate(\" + left + \"px ,\" + top + \"px)\", zIndex: 100 }} > Salut  </div>\n    }\n    else popup = null;\n\n    let style = `\n      .popup { border : 1px solid #999; background : #bbb; padding : 10px; min-width:40px; width : 100px; transition : all 0.2s ease; }\n\n      .popup { opacity : 0.05; position : absolute;pointer-events: none;}\n    `\n    return <div style={{position:\"relative\"}}>\n      <style>{style}</style>\n      {popup}\n      <CodeMirror\n        value={text}\n\n        options={{\n          mode: 'javascript',\n          lineNumbers: true, \n          smartIndent : true,\n        }}\n\n        autoCursor={false}\n\n        cursor={cursor}\n        ///onBeforeChange={this.changeValue}\n        onChange={this.changeValue}\n        onCursor={this.changeCursor}\n        onBlur={this.isBlured}\n      />\n    </div>\n  }\n}\n\nexport default CodeMirrorEditor;","import React, { Component } from 'react';\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"../libs/dataManager\";\nvar DataManager = window.DataManager;\n\n\nvar KeyboardManager = {\n    setup: function () {\n        if (this.isInitialized) return;\n\n        $(\"body\").on(\"keydown\", (evt) => {\n            this.handleKey(evt)\n        })\n\n        DataManager.setTrigger(\"keyboardShortcuts.layout\", \"kbdManager\", {\n            run: () => {\n                this.load();\n            }\n        })\n        this.load();\n    },\n\n    load: function () {\n        let layout = DataManager.getValue(\"keyboardShortcuts.layout\");\n        this.layout = layout || {};\n    },\n\n    handleKey: function (evt) {\n        var name = [];\n        if (evt.altKey) name.push(\"alt\");\n        if (evt.ctrlKey) name.push(\"ctrl\");\n        if (evt.metaKey) name.push(\"meta\");\n        if (evt.shiftKey) name.push(\"shift\");\n\n        name.push(evt.key.toLowerCase())\n        let comb = name.join(\"+\");\n\n        if (this.layout[comb])\n            return this.run(this.layout[comb], comb)\n    },\n\n    run: function (action,comb) {\n        if (_.isFunction(action)) return action(comb, action);\n        else if (action.run)\n            return action.run(comb, action)\n    }\n}\n\nKeyboardManager.setup();\n\nexport default KeyboardManager","var TimerManager = {\n    init : function ( DataManager ) {\n      var item = Object.create( this );\n\n      item.DataManager = DataManager;\n      item.wallet = {timers : {} }\n      return item;\n    },\n    wallet: { timers: {} },\n  \n    start: function (name, action, delay) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n  \n      var timer = window.setTimeout(() => {\n        this.cancel( name );\n        action(name, action, delay);\n      }, delay)\n  \n      this.wallet.timers[name] = timer;\n\n      let date = new Date();\n      this.DataManager.set(\"TimerManager.timer.\"  + name , { start : date.getTime(), end : date.getTime() + delay })\n    },\n  \n    cancel: function (name) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n      delete this.wallet.timers[name]\n      this.DataManager.set(\"TimerManager.timer.\"  + name , \"\")\n\n    }\n  }\n\n  export {TimerManager};","\nvar cu = {}\n\nwindow.cu = cu;\n\nexport default cu;\n","import _ from \"lodash\"\nimport faker from \"faker\"\nimport chroma from \"chroma-js\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n  getRandomFn: function (str) {\n    var seed = 0;\n    for (var i in str) {\n      seed += str.charCodeAt(i) * i\n    }\n    function getRandom() {\n      var x = Math.sin(seed++) * 10000;\n      return x - Math.floor(x);\n    }\n\n    return getRandom;\n\n  },\n\n  getBrand: function (uid) {\n    let randomFn = this.getRandomFn(uid);\n\n    let baseBrand = {\n      mainColor: \"#007abc\",\n      complementColor: \"\"\n    }\n\n    let brand = {\n      mainColor_hsl: this.getColor(randomFn(), baseBrand.mainColor),\n      complementColor_hsl: this.getColor(randomFn(), baseBrand.mainColor),\n    }\n\n    brand.mainColor = \"hsl( \" + brand.mainColor_hsl[0] + \",\" + brand.mainColor_hsl[1] + \"% ,\" + (brand.mainColor_hsl[2]) + \"%  )\"\n    brand.complementColor = \"hsl( \" + brand.complementColor_hsl[0] + \",\" + brand.complementColor_hsl[1] + \"% ,\" + (brand.complementColor_hsl[2]) + \"%  )\"\n\n    brand.fadedColor = \"hsla( \" + brand.mainColor_hsl[0] + \",\" + 10 + \"% ,\" + (brand.mainColor_hsl[2]) + \"%, 1 )\"\n\n    return brand;\n  },\n\n  getColor: function (seed, baseColor) {\n\n    baseColor = baseColor || \"#007abc\";\n    let hue = seed * 360;\n    let color = chroma(\"#007abc\").set(\"hsi.h\", hue).hsl();\n\n    color[1] = color[1] * 100;\n    color[2] = color[2] * 100;\n\n    return color;\n  },\n  get: function (seed, count) {\n\n    var str = seed; //faker.lorem.sentence(10);\n    var seed = 0;\n    for (var i in str) {\n      seed += str.charCodeAt(i) * i\n    }\n    function getRandom() {\n      var x = Math.sin(seed++) * 10000;\n      return x - Math.floor(x);\n    }\n\n    count = Math.max(2, Math.floor((getRandom() * 5)))\n\n\n\n    let scale = 50 / count;\n\n    let color = this.getColor(getRandom());\n\n    let pointsStar = [\n      [0, 0, 0.5, 0.5, 1, 0],\n      [0, 0, 0.5, 0.5, 0, 1],\n      [1, 1, 0.5, 0.5, 0, 1],\n      [1, 1, 0.5, 0.5, 1, 0],\n    ]\n\n\n\n    let polies = [];\n    for (var i = 0; i < count; i++) {\n      for (var j = 0; j < count; j++) {\n        let lum = 10; //points[i][j];\n        let x = i * scale;\n        let y = j * scale;\n        let poly = pointsStar.map((poligonPoints) => {\n          let col = \"hsl( \" + color[0] + \",\" + color[1] + \"% ,\" + (color[2]) + \"%  )\";\n          let classname = Math.round(getRandom() * 5);\n          let points = poligonPoints.map((value, i) => {\n            return value * scale + (i % 2 ? x : y)\n          })\n          polies.push(`<polygon\n                  class='poligon poligon_${classname}'\n                  points=\"` + points.join(\" \") + `\" stroke=\"transparent\" fill=\"transparent\" \n                  style=\" strokeWidth: ` + (1 / scale) + `;\n                  fill: `+ col + `;\n                  opacity : `+ getRandom() + `; \n                  \" />`)\n\n        })\n      }\n    }\n\n    return \"<svg style='position :relative;width: inherit; height: inherit;'> \" + polies.join(\"\") + \"</svg>\"\n\n\n  }\n}\n\nvar test = (result) => {\n\n}\n\ncu.brand = {\n  //test,\n\n  getLogo: function (seed, scale, count) {\n    let logo = ub.get(seed, count);\n    return logo;\n  },\n\n  getBrand: function (uid) {\n    return ub.getBrand(uid);\n  },\n\n  def: `\n    `,\n\n  debug: {\n    ub: ub\n  }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleBoard = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n\n    addItem : function ( obj ) {\n        let id = this.getId();\n        obj.id = id;\n        this.mergeItem( id, obj );\n        return id;\n    },\n\n    getId : function ( ) {\n        this.ctx.data.state.nextId++;\n\n        let id = \"bubble_\" + this.ctx.data.state.nextId;\n\n        return id;\n    },\n    mergeItem: function (id, value) {\n        let ctx = this.ctx;\n        let result = ctx.data.result[id];\n\n\n        ctx.changed = {};\n\n        this.appendTo(id, value)\n\n        let minStep;\n        let results = ctx.data.result;\n        let changed = ctx.changed;\n\n        console.log( ctx.data );\n        let versions = ctx.data.versions;\n\n        for ( var i in changed ) {\n            if ( !versions[i] ) versions[i] = 0;\n            versions[i]++;\n            let result = results[ i ];\n            if ( !result ) continue;\n            if ( !result.isReady ) continue;\n            if ( minStep == undefined ) minStep = result.completedAt;\n            if ( minStep > result.completedAt ) minStep = result.completedAt;\n        }\n\n        if (minStep !== undefined) {\n            this.rewindTo(minStep)\n        }\n\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( changed )\n        \n        return minStep;\n    },\n\n    rewindTo: function (step) {\n        let ctx = this.ctx;\n        for (var id in ctx.data.result) {\n            let result = ctx.data.result[id];\n            if (result.isReady && (result.completedAt >= step || result.createdAt > step)) {\n                result.isReady = false;\n                result.completedAt = 0;\n            }\n        }\n\n        ctx.data.step = step;\n    },\n\n    appendTo: function (id, values) {\n        let ctx = this.ctx;\n        let item = ctx.data.items[id];\n        let hasChanges = false;\n\n        if (!item) {\n            ctx.data.step++;\n            ctx.data.items[id] = item = {}\n            ctx.data.result[id] = { createdAt: ctx.data.step }\n            hasChanges = true;\n        }\n\n        for (var slot in values) {\n            let value = values[slot];\n            if ( value == \"REMOVE\" && item[slot] !== undefined ) {\n                delete item[slot];\n                hasChanges = true;\n                continue;\n            }\n            if ( value === null && item[slot] !== undefined ) {\n                delete item[slot]\n                hasChanges = true;\n                continue;\n\n            }\n\n            if ( !value ) continue;\n\n            let bubbleid = item[slot] ? item[slot].id : null;\n            if (_.isString(value) && value.charAt(0) == \"#\") {\n                value = {id : value.substring(1) };\n            }\n\n            if ( value.id !== undefined) {\n                if ( value.id == \"#\"  || value.id==\"\" ) value.id = null;\n                value.id = value.id || bubbleid || this.getId();\n                item[slot] = { id: value.id };\n            }\n\n\n            if (value.id && _.isObject(value)) {\n                if ( value.id != bubbleid ) hasChanges = true;\n                this.appendTo(value.id, value)\n            }\n\n            else if ( _.isObject( value ) && !_.isMatch(item[slot], value )) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n            else if ( item[slot]!=value) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n\n        }\n\n        if( hasChanges ) {\n            if ( item.version ) {\n                item.version = item.version ? item.version+1 : 1;\n            }\n            this.ctx.changed[ id ] =true;\n        }\n    },\n\n    evalItems: function (count) {\n        this.ctx.affected = {};\n        this._evalItems( count );\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( this.ctx.affected )\n        \n    },\n\n    _evalItems : function ( count ) {\n\n        if (count<=0) return;\n\n        let ctx = this.ctx;\n\n        let hasChanges = false;\n\n        for (var id in ctx.data.items) {\n            let item = ctx.data.items[id];\n            let result = ctx.data.result[id];\n\n            if (result && result.isReady) continue;\n            let values = this.isCompleteValues(item, id);\n            if (values) {\n                if (!ctx.data.result[id]) ctx.data.result[id] = {};\n\n                this.evalItem(item, id, values, ctx.data.result[id]);\n                if ( ctx.data.result[id].isReady )\n                    hasChanges = true;\n            }\n        }\n\n\n        if (hasChanges) this._evalItems(count - 1);\n    },\n\n    evalItem: function (item, id, values, result) {\n        let ctx = this.ctx;\n\n        result.isReady = true;\n        result.values = values;\n\n        let node = this.ctx.tb.getNode(item, values, result, ctx);\n        if ( node ) \n            result.node = node;\n\n        if ( result.isReady ) {\n            ctx.data.step++;\n            result.completedAt = ctx.data.step;\n            this.ctx.affected[ id ] = true;\n        }\n\n    },\n\n    isCompleteValues(item) {\n        //if (!this.ctx.tb.checkIfComplete(item)) return false;\n\n        let ctx = this.ctx;\n\n        let values = {};\n\n        let bellow = [];\n\n        for (var slot in item) {\n            let value = item[slot];\n            if (value.id) {\n                let bubble = ctx.data.result[value.id];\n\n                if (!bubble || !bubble.isReady) return false;\n\n                let node = bubble.node;\n\n                if ( item[slot+\"_path\"]) {\n                    node = _.get( node, item[slot+\"_path\"] )\n                }\n\n                values[slot] = node;\n            }\n            else values[slot] = value\n        }\n\n        return values;\n    },\n\n    init: function (ctx) {\n        let item = Object.create(this);\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data : {\n                items : {},\n                result : {},\n                step : 1,\n                versions : {},\n                trails : {},\n                rels : {\n                    bellow : {},\n                    above  : {},\n                    uses   : {}\n                },\n\n                state : {\n                    nextId : 8\n                }\n            },  \n            tb: {\n                checkIfComplete: (item) => item.type || item.tpl || item.node,\n                getNode: (item, values, result) => { return { val: values, x: item.tpl } }\n            }\n        })\n\n        ctx.master = item; \n        return item;\n    },\n\n    evaluateflow : function () {\n        this.evalItems(5);\n    },\n\n    getVersion : function ( id ) {\n        let item = this.ctx.data.items[ id ];\n\n        if ( !item ) return null;\n        return item.version;\n    }\n}\n\nvar test = (result) => {\n    let ctx = {\n        data: {\n            items: {},\n            result: {},\n            versions : {},\n            ants : {},\n            step: 1,\n        }\n    }\n\n    let nub = ub.init(ctx);\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salut\",\n        testval: \"#\"\n    })\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n    nub.evalItems(0);\n\n\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n\n\n    nub.evalItems(0);\n\n\n    result.ctx = ctx;\n}\n\ncu.bubbleFlow = {\n    //test,\n\n\n    run: function (ctx) {\n        return ub.init( ctx );\n    },\n    init: function () {\n\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\nvar fns = {}\n\nvar ub = {\n\n    ctx: {\n    },\n\n    doubleCheck: function (id) {\n        let tb = fns.evaluate.setup({ data: this.ctx.data, state: this.ctx.state }).target(id);\n\n        for (var i in checks)\n            tb.run(checks[i])\n    },\n\n    check: function (id) {\n        let item = this.ctx.data.items[id];\n        let result = this.ctx.data.result[id];\n        let shaddow = this.ctx.data.shaddow[id];\n\n        if (!shaddow)\n            shaddow = this.ctx.data.shaddow[id] = {}\n\n        let results = this.ctx.data.result;\n\n        let score = shaddow.score = {\n            subs: {\n                total: 0,\n                resolved: [],\n                unresolved: []\n            },\n        };\n\n        for (var slot in item) {\n            if (item[slot].id) {\n                score.subs.total++;\n\n                if (results[item[slot].id] && results[item[slot].id].isReady)\n                    score.subs.resolved.push({ slot: slot, id: item[slot].id });\n                else\n                    score.subs.unresolved.push({ slot: slot, id: item[slot].id });\n\n            }\n        }\n\n        if (result && result.values && result.values.tpl) {\n            let tpl = result.values.tpl;\n            score.tplParams = { total: 0, defined: 0, resolved: 0, unresolved: [] }\n            let parameters = tpl.mold.parameters;\n\n            for (var param in parameters) {\n                score.tplParams.total++;\n                if (result.values[param] || item[param]) {\n                    score.tplParams.defined++;\n                }\n                else {\n                    score.tplParams.unresolved.push(param)\n                }\n            }\n        }\n\n    },\n\n    setup: function (ctx) {\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data: {\n                items: {},\n                result: {},\n                shaddow: {},\n                trails: {}\n            }\n        })\n\n        return item;\n    }\n}\n\n\n\nfns.evaluate = {\n    target: function (id) {\n\n        let model = this.model || this;\n\n        var item = Object.create(model);\n\n        item.model = model;\n\n        item.setup();\n\n        item.v.targetId = id;\n\n        return item;\n    },\n    setup: function (opt) {\n        this._setup(opt);\n        return this;\n    },\n    _setup: function (opt) {\n        if (opt) Object.assign(this, opt)\n\n        if (this.model && this.model.shaft) {\n            this.shaft = {};\n        }\n\n        this.v = { result: {} };\n    },\n    get: function (key) {\n        if (!_.isString(key)) return key;\n        let id = this.v.targetId;\n\n        let fullPath;\n        if (key == \"values\")\n            fullPath = [\"result\", this.v.targetId, \"values\"]\n        if (key == \"item\")\n            fullPath = [\"items\", this.v.targetId]\n        else\n            fullPath = [key, \"id\"];\n        return _.get(this.data, fullPath)\n    },\n\n    getFull: function (route) {\n        let base = route[0];\n        let id = route[1];\n        let relPath = route[2];\n\n        if (!base) base = \"items\";\n        if (base == \"item\") base = \"items\";\n\n        if (!id) id = this.v.targetId;\n\n        let fullPath = [base, id]\n        if (relPath) fullPath.push(relPath);\n\n        return _.get(this.data, fullPath.join(\".\"))\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.v[i] = this.getFull(map[i])\n        }\n        return this;\n    },\n\n    it: function (collection, cb) {\n        collection = this.get(collection);\n\n        //let subTb = Object.create( this );\n        //subTb.v  = Object.create( this.v )\n\n        //prepare\n        let subTb = this;\n        let oldValues = {\n            slot: subTb.v.slot,\n            value: subTb.v.value,\n            info: subTb.v.info,\n            sub: subTb.v.sub\n        }\n        subTb.v.slot = null;\n        subTb.v.value = null;\n        subTb.v.info = null;\n        subTb.v.sub = null;\n        for (var i in collection) {\n            subTb.v.slot = i;\n            subTb.v.value = collection[i];\n            subTb.v.info = i;\n            subTb.v.sub = {};\n            cb(subTb, subTb.v)\n        }\n\n        //cleanup\n        for (var i in oldValues)\n            subTb[i] = oldValues[i]\n\n    },\n\n    run: function (cb) {\n        try {\n            let result = cb(this, this.v)\n        } catch (e) {\n            if (e && e.type == \"notApplicable\") {\n                return;\n            }\n            console.log(e)\n        }\n\n        if (this.v.result) {\n\n            if (!this.data.trails[this.v.targetId]) {\n                this.data.trails[this.v.targetId] = {};\n            }\n            Object.assign(this.data.trails[this.v.targetId], this.v.result)\n        }\n    },\n\n    result: function (name, value) {\n        this.v.result[name] = value;\n    },\n\n    check: function (paths) {\n        for (var i in paths) {\n            let path = paths[i];\n\n            if (path == \"isCurrentItem\") {\n                let stateCurrentId = this.state.currentItem.targetid;\n                if (!stateCurrentId || this.v.targetId != stateCurrentId)\n                    throw { type: \"notApplicable\", path: paths[i] }\n            }\n            else {\n                let value = _.get(this.v, paths[i]);\n                if (value === undefined) throw { type: \"notApplicable\", path: paths[i] }\n            }\n        }\n    }\n}\n\nfns.compile = Object.assign({}, fns.evaluate, {\n    setup: function (opt) {\n        this._setup(opt);\n\n        this.clues = {\n            needes: {},\n            provides: {},\n            collections: []\n        }\n\n        return this;\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.clues.needes[i] = { key: map[i] }\n            this.v[i] = { test: \"test\" }\n        }\n        return this;\n    },\n\n\n    check: function (check) {\n\n    },\n\n    result: function (name, value) {\n        this.clues.provides[name] = value;\n    },\n\n    it: function (collection, cb) {\n        this.clues.collections.push(collection)\n    },\n\n    run: function (cb) {\n        let result = cb(this, this.v);\n    }\n});\n\n\nvar checks = [\n\n    (tb, v) => {\n\n        tb.fetch({\n            item: [\"item\"]\n        })\n\n        v.score = {\n            total: 0,\n            resolved: [],\n            unresolved: []\n        }\n\n        tb.it(v.item, (tb, v) => {\n            let sub = v.value;\n            if (!sub.id) return;\n\n            v.score.total++;\n\n            let result = tb.getFull([\"result\", sub.id]);\n\n            if (!result || !result.isReady) v.score.unresolved.push(sub.id)\n            else v.score.resolved.push(sub.id)\n        })\n\n        tb.result(\"subScore\", v.score)\n        return { subScore: v.score }\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch({\n            values: [\"result\", \"\", \"values\"],\n            item: [\"item\"],\n            parameters: [\"result\", \"\", \"values.tpl.mold.parameters\"]\n        })\n\n        tb.check([\n            \"values.tpl\"\n        ])\n\n        v.score = { total: 0, defined: 0, undefined: [] }\n        v.params = {};\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n            v.score.total++;\n            if (!v.item[param] && !v.values[param])\n                v.score.undefined.push(param)\n        })\n\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n        })\n\n\n        v.score.undefinedCount = v.score.undefined.length;\n        v.score.definedCount = v.score.total - v.score.undefinedCount;\n\n        tb.result(\"tplParamsScore\", v.score);\n        tb.result(\"tplParams\", v.params)\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch(  {\n            trails : [\"trails\"],\n\n        })\n        tb.check([\n            \"isCurrentItem\"\n        ])\n\n        console.log(\"trails is currentItem\", v.trails);\n    }\n\n]\n\nvar test = (result) => {\n\n    ub.ctx.data = {\n        items: {\n            bubble1: {\n                slot1: \"salut\",\n                slot2: { id: \"bubble2\" }\n            },\n            bubble2: {\n                test: \"salut\"\n            }\n        },\n        result: {},\n        trails: {}\n    }\n\n    let tb = fns.evaluate.target(\"bubble1\");\n\n    tb.run(checks[0]);\n    tb.run(checks[1]);\n\n    result.tb = tb.v.result;\n    result.trails = ub.ctx.data.trails;\n}\n\ncu.bubbleGuns = {\n    //test,\n\n    setup: function (ctx) {\n        return ub.setup(ctx);\n    },\n    init: function () {\n\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n    ctx: {\n        tb: {\n\n            onchanged: function (changed) { },\n            getNode: function (item, values, result, ctx) {\n                return cu.bubbleTypes.dispatch.getNode(item, values, result, ctx)\n            }\n        },\n\n        data: {\n            state: {\n                nextId: 0\n            }\n        }\n    }\n}\n\n\nvar test = (result) => {\n    ub.ctx.data = { state: { nextId: 0 } };\n    ub.ctx.tb.guns = cu.bubbleGuns.setup(ub.ctx);\n    ub.ctx.tb.flow = cu.bubbleFlow.run(ub.ctx)\n\n    ub.ctx.tb.flow.mergeItem(\"item1\", {\n        id: \"item1\",\n        tpl: {\n            id: \"item2\",\n            type: \"tpl\",\n            main: \"<div style='border:1px solid #007abc'>{h1} {salut} {someothervalue}</div>\"\n        },\n        tpl_path: \"main\",\n        h1: \"noh\",\n        salut: {\n            id: \"item3\",\n            tpl: {\n                id: \"item4\",\n                type: \"tpl\",\n                main: \"<div style='border:1px solid #007abc'>{text}</div>\"\n            },\n            tpl_path: \"main\",\n            text: \"salutare\"\n        }\n    });\n\n\n    ub.ctx.tb.flow.mergeItem(\"item5\", {\n        id: \"item5\",\n        type: \"mirror\",\n        model: \"item1\",\n        data: {\n            id: \"item6\",\n            version: 1,\n            node: {\n                h1: \"hh1\",\n                salut: {\n                    text: \"hey\"\n                }\n            }\n        }\n    })\n\n\n\n    ub.ctx.tb.flow.evaluateflow();\n\n    ub.ctx.tb.flow.mergeItem(\"item6\", {\n        node: {\n            h1: \"hh11\",\n            salut: {\n                text: \"testchanged\"\n            }\n        }\n    })\n\n    ub.ctx.tb.flow.evaluateflow();\n\n\n    result.items = ub.ctx.data.items;\n    result.result = ub.ctx.data.result;\n    result.shaddow = ub.ctx.data.shaddow;\n    //result.item6_1 = ub.ctx.data.result.item5.mirror.node.children[0][0];\n    //result.item6_2 = ub.ctx.data.result.item5.mirror.node.children[0][2].children\n}\n\ncu.bubbleTest = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar type = {}\n\n\ntype.dispatch = {\n    getNode: function (item, values, result, ctx) {\n        let nodeType = values.type;\n        if (!nodeType) {\n            if (values.tpl) nodeType = \"reactNode\"\n\n            else if (values.node) nodeType = \"dataNode\"\n        }\n\n        if (nodeType && type[nodeType]) {\n            return type[nodeType].getNode(item, values, result, ctx)\n        }\n        else result.isReady = false;\n    }\n}\n\ntype.tpl = {\n    getNode: function (item, values, result, ctx) {\n        delete values.type;\n        let tpl = cu.tplObjParse.run(values);\n        result.viewAs = \"object\";\n        return tpl;\n    }\n}\n\ntype.dataNode = {\n    getNode: function (item, values, result, ctx) {\n        return item.node;\n    }\n}\n\ntype.reactNode = {\n    getNode: function (item, values, result, ctx) {\n\n        let tpl = values.tpl;\n        if (!tpl || !tpl.mold) {\n            result.isReady = false;\n            return;\n        }\n\n        let neededValues = [];\n        let node = cu.reactAssembler.run(tpl, values, (data, path, op) => {\n            let value = _.get(data, path);\n            if (value !== undefined) return value;\n            neededValues.push(path);\n            return \"dummyvalue\"\n        });\n\n        if (neededValues.length) {\n            node = [neededValues, node];\n        }\n        result.viewAs = \"reactComponent\"\n\n        result.cues = { pins: tpl.mold.pins }\n\n        return node;\n\n    }\n\n}\n\ntype.mirror = {\n\n    description: \"\",\n\n\n    getNode: function (item, values, result, ctx) {\n\n\n        let model = ctx.data.items[item.model];\n        let data = values.data;\n\n        let newItem = _.cloneDeep(model);\n\n        if (!result.bubbles) result.bubbles = {};\n        if (!result.cache) result.cache = { data: {} };\n\n        if (!_.isMatch(result.cache.data, data)) {\n            result.cache.data = data;\n\n            for (var i in newItem) {\n                if (i != \"tpl\" && newItem[i].id && data[i]) {\n                    if (result.bubbles[i]) {\n                        ctx.master.mergeItem(result.bubbles[i].id, { data: data[i] })\n                    }\n                }\n            }\n        }\n\n        for (var i in newItem) {\n            if (i != \"tpl\" && newItem[i].id && data[i]) {\n\n                if (result.bubbles[i]) {\n                    newItem[i] = { id: result.bubbles[i].id }\n                }\n                else {\n                    let newId = ctx.master.addItem({ type: \"mirror\", data: data[i], model: newItem[i].id })\n                    result.bubbles[i] = { id: newId, model: newItem[i].id };\n                }\n\n                newItem[i] = { id: result.bubbles[i].id }\n            }\n            else if (data[i]) {\n                newItem[i] = data[i]\n            }\n        }\n\n        newItem.id = item.id;\n\n        let newValues = ctx.master.isCompleteValues(newItem);\n\n        if (!newValues) {\n            result.isReady = false;\n            return;\n        }\n\n        result.mirror = {};\n        ctx.master.evalItem(item, item.id, newValues, result.mirror)\n        if (result.mirror.viewAs) result.viewAs = result.mirror.viewAs;\n        return result.mirror.node;\n    }\n}\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleTypes = {\n    //test,\n\n    mirror: type.mirrorBubble,\n\n    types: type,\n    dispatch: type.dispatch,\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport { UV_UDP_REUSEADDR } from \"constants\";\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n        },\n\n        tb: {\n        }\n    },\n\n    run: function (obj) {\n        let oldPayload = this.ctx.payload;\n\n        let mold = {\n            ops: [],\n            parameters: {},\n            pins: {},\n            tpl: {},\n            comments : []\n        }\n\n        mold.tpl = this.getTpl(obj, [], mold)\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n    getTpl: function (obj, path, mold) {\n        if (_.isFunction(obj)) {\n            let str = obj.toString();\n            let result = this.opValues(obj.toString(), path, mold, \"makeFunction\");\n            if (str == result) return obj;\n            return result;\n        }\n        else if (_.isObject(obj)) {\n            let newValue = {};\n            for (var i in obj) {\n                let slot = i;\n                let value;\n                if ( slot.indexOf( \"{\") != -1 || slot.indexOf( \".\") != -1 ) {\n                    let x = {\n                        VALUE : obj[ i ], \n                        PATH  : i\n                    }\n\n                    slot = slot.replace(/[^\\w]+/g, \"_\" );\n                    value = this.getTpl(x, path.concat(slot), mold);\n\n                    this.addOp( mold, path.concat(slot), { type : \"pathSet\", stage : 10, path : path.concat(slot)  }  )\n                }\n                else \n                    value = this.getTpl(obj[i], path.concat(i), mold)\n\n                newValue[slot] = value;\n            }\n            return newValue;\n        }\n        else if (_.isArray(obj)) {\n            let newValue = [];\n            for (var i in obj)\n                newValue.push(this.getTpl(obj[i], path.concat(i), mold));\n            return newValue;\n        }\n        else if (_.isString(obj)) {\n            return this.opValues(obj, path, mold, \"concat\")\n        }\n        else return obj;\n    },\n\n    addOp: function (payload, path, op) {\n        if (!op.stage) op.stage = 0;\n        if (op.action)\n            payload.parameters[op.action] = op.path;\n        payload.ops.push(op)\n    },\n    addComment: function (payload, path, text) {\n        let comment = { text : text, path : path }\n        payload.comments.push(comment)\n    },\n\n    opValues: function (value, path, mold, finalOp) {\n        if (!_.isString(value)) return value;\n\n        /*\n        let comments = value.matchAll(/\\/\\/\\.\\:.+^/g);\n        for ( var i in comments )\n            this.addComment( mold, path, comments[i])\n        */\n\n        if (value.indexOf(\"{\") == -1) return value;\n\n\n        let ops = mold.ops;\n        let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}|(\\$\\$\\w+)/g);\n        values = values.map((item, i) => {\n            if ( !item ) return null;\n\n            let firstChar = item.charAt(0);\n\n            if ( firstChar == \"{\") {\n                item = item.substring(1);\n            }\n            else if ( firstChar == \"$\") {\n                item = item.substring( 2 );\n            }\n            else return item;\n\n            let action = item;\n            return { type: \"value\", action , firstChar  };\n        })\n            .filter(item => item)\n\n\n        if (values.length == 0) return null;\n        else if (values.length == 1) {\n            values = values[0];\n            if (values.type) {\n                values.path = path;\n            }\n            if (_.isObject(values))\n                this.addOp(mold, values.path, values)\n            return values;\n        }\n        else if (!finalOp) {\n            values = values.map((item, i) => {\n                if (item.type) {\n                    item.path = path.concat(i);\n                    item.index = i;\n                    item.stage = 0;\n                    this.addOp(mold, path, item);\n\n                    return item;\n                }\n                else return item;\n            })\n            return values;\n        }\n        else {\n            values = values.map((item, i) => {\n                if (item.type) {\n                    item.path = path.concat(i);\n                    item.index = i;\n                    item.concatParent = true;\n                    item.stage = 0;\n\n                    this.addOp(mold, path, item);\n                    return item;\n                }\n                else return item;\n            })\n            this.addOp(mold, path, { path: path, type: finalOp, ops: values, stage: 1 });\n            return values;\n        }\n\n    }\n}\n\nvar test = (result) => {\n    var obj = {\n        x: \"salut - {test} - ce mai faci ? \",\n        z: function () {\n            console.log(\"test\")\n        },\n        p: \"{test}\",\n        zz: function () {\n            //{test} used for calling salut\n            this.$$test.salut();\n            console.log(\"t{test}\")\n        },\n\n        \"test.{test}.test\" : \"salut\"\n\n    }\n\n    result.mold = ub.run(obj)\n\n\n    result.obj = cu.moldAssembler.run( result, { test : \"elefant\"} )\n}\n\ncu.parseObjIntoMold = {\n    test,\n\n    run: function (obj) {\n        return ub.run(obj)\n    },\n\n    init: function () {\n    },\n\n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar phase1 = {\n\n    run: function (html) {\n        html = html.trim();\n\n        let nest = document.createElement('div');\n        nest.innerHTML = html;\n\n        let specs = [];\n\n        for (var i = 0; i < nest.childNodes.length; i++) {\n            let el = nest.childNodes[i];\n\n            let spec = this._spec(el);\n\n            specs.push(spec);\n        }\n\n        return specs.length == 1 ? specs[0] : specs;\n    },\n\n\n    _spec: function (el) {\n\n        if (el.nodeType == 3) {\n            return el.nodeValue\n        }\n\n        let props = {};\n        for (var i = 0; i < el.attributes.length; i++) {\n            let attr = el.attributes[i];\n            let name = attr.name;\n            if (name.indexOf(\"_\") != -1) {\n                name = name.replace(/\\_(.)/g, (all, char) => { return char.toUpperCase() })\n            }\n            props[name] = attr.value;\n        }\n\n        if (props.class) {\n            props.className = props.class;\n            delete props.class;\n        }\n\n        if (props.style) {\n            props.style = this._style(props.style);\n        }\n\n\n        let spec = {\n          type: \"node\",\n          componentName: el.nodeName.toLowerCase(),\n          props: props,\n          children: null,\n      };\n\n        if ( props.htmlSlot ) {\n          props[ props.htmlSlot ] = el.innerHTML;\n          return spec;\n        }\n\n        if (Object.keys(props) == 0) props = null;\n\n        let children = []\n        el.childNodes.forEach(child => {\n            children.push(this._spec(child))\n        })\n        if (children.length == 0) children = null;\n        spec.children = children;\n\n        return spec;\n    },\n\n    _style: function (str) {\n        str = str + \";\";\n        let reg = /\\s*([^:\\s]+)\\s*\\:\\s*([^;]+)\\s*\\;+/g\n        let css = {};\n        let match;\n        while (match = reg.exec(str)) {\n            css[match[1]] = match[2]\n        }\n\n        return css;\n    },\n\n}\n\nvar phase2 = {\n    run: function (obj , attrs ) {\n      let payload = {\n        ops: [],\n        pins: {},\n        parameters : {},\n        attrs : {},\n        watchAttrs : attrs || []\n      }\n  \n      if ( _.isArray( obj ) )\n        payload.tpl = obj.map(( obj, i)  => this.iterate(obj, [i], payload) )\n      else \n        payload.tpl = this.iterate(obj, [], payload)\n\n      payload.ops.sort ( (a,b) => a.stage - b.stage )\n  \n      return { ops: payload.ops, tpl: payload.tpl, pins : payload.pins , parameters : payload.parameters, attrs : payload.attrs}\n    },\n    iterate: function (obj, path, payload) {\n      if (!obj) return;\n  \n      if (_.isString(obj)) {\n        return this.opValues(obj, path, payload, false);\n      }\n  \n      obj = this.handleObj(obj, path, payload);\n  \n      let childrenPath = path.concat([\"children\"])\n      for (var i in obj.children) {\n        obj.children[i] = this.iterate(obj.children[i], childrenPath.concat(i), payload)\n      }\n  \n      let subPath = path.concat([\"props\"])\n      for (var i in obj.props) {\n        if (i == \"style\") continue;\n        obj.props[i] = this.handleProp(obj.props[i], subPath.concat(i), obj, payload)\n      }\n  \n      if (obj.props && obj.props.style) {\n        let subPath = path.concat([\"props\", \"style\"])\n        for (var i in obj.props.style) {\n          obj.props.style[i] = this.handleProp(obj.props.style[i], subPath.concat(i), obj, payload)\n        }\n      }\n  \n      if (obj.props && obj.props.pin) {\n        payload.pins[ obj.props.pin ] = path;\n      }\n\n      if (obj.props && obj.props.id) {\n        payload.pins[ obj.props.id ] = path;\n      }\n\n      if ( obj.props )\n        payload.watchAttrs.forEach( attr => {\n            if ( !obj.props[attr] ) return ;\n            if ( !payload.attrs[attr] ) payload.attrs[ attr ] = [];\n            payload.attrs[ attr ].push({  path, value : obj.props[attr] } );\n        })\n  \n      return obj;\n    },\n  \n    handleObj: function (obj, path) {\n      return obj;\n    },\n  \n    handleProp: function (obj, path, parent, payload) {\n      if (!_.isString(obj)) return obj;\n  \n      return this.opValues(obj, path, payload, true)\n    },\n    addOp: function (payload, path, op) {\n\n        if ( !op.stage ) op.stage = 0;\n      payload.parameters[ op.action ] = op.path;\n      payload.ops.push(op)\n    },\n  \n    prepareAction: function (item) {\n      return item;\n    },\n    opValues: function (value, path, payload, concatOp) {\n      if (!_.isString(value)) return value;\n      if (value.indexOf(\"{\") == -1) return value;\n  \n      let ops = payload.ops;\n      let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}/g);\n      values = values.map((item, i) => {\n        if (item == \"\") return null\n        if (item.charAt(0) !== \"{\") return item;\n  \n        item = item.substring(1);\n        let action = this.prepareAction(item)\n        return { type: \"value\", action: action };\n      })\n        .filter(item => item)\n  \n  \n      if (values.length == 0) return null;\n      else if (values.length == 1) {\n        values = values[0];\n        if (values.type) {\n          values.path = path;\n        }\n        if ( _.isObject( values ))\n          this.addOp(payload, values.path, values)\n        return values;\n      }\n      else if (!concatOp) {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.stage = 0;\n            this.addOp(payload, path, item);\n  \n            return item;\n          }\n          else return item;\n        })\n        return values;\n      }\n      else {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.concatParent = true;\n            item.stage = 0;\n\n            this.addOp(payload, path, item);\n            return item;\n          }\n          else return item;\n        })\n        this.addOp(payload, path, { path: path, type: \"concat\", ops: values, stage : 1 });\n        return values;\n      }\n  \n    }\n  \n  }\n\n\nvar ub = {\n    run : function ( html , attrs ) {\n        var result = phase1.run( html );\n        result = phase2.run( result, attrs );\n\n        return result;\n    }\n}\n\nvar test = (result) => {\n    result.output = ub.run( \"<div>Salut {#test} </div>\");\n}\n\ncu.parseStringIntoComp = {    \n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n    def: `\n        @obj string \n        transform it into componentsObjects\n    `\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport js_beautify from \"js-beautify\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n\n    makestr : function ( obj, indent ) {\n        if ( _.isFunction( obj ) ) return obj.toString();\n        if ( _.isString( obj ) ) {\n \n            let usequouts = '\"';\n            if ( obj.indexOf( \"\\n\") != -1 ) usequouts = \"`\";\n            if ( obj.indexOf('\"') != -1 ) usequouts = \"`\";\n            \n            if (usequouts == \"`\") {\n                obj = js_beautify.html( obj, { \n                    indent_size : 2,\n                    indent_level : indent + 1,\n                    preserve_newlines : true,\n                    max_preserve_newlines : 0,\n                    indent_inner_html: true,\n                } )\n\n                obj = obj.trimStart();\n            }\n            return usequouts + obj + usequouts\n        }\n        if ( _.isArray(obj)) {\n            let lines = [];\n            for ( var i in obj ) {\n                let value = this.makestr( obj[i] , indent + 1);\n\n                lines.push( value)\n            }\n\n            return \"[\" + lines.join(\",\\n\") + \"]\";\n        }\n\n        if ( _.isObjectLike(obj)) {\n            let lines = [];\n            let multiLine = false;\n            for ( var i in obj ) {\n                let slot = i;\n                let value = this.makestr( obj[i], indent + 1 );\n\n                if ( !slot.match( /^[a-z0-9$_]+$/) ) slot = '\"' + slot + '\"'\n\n                if ( value.indexOf(\"\\n\") != -1 ) multiLine = false;\n                lines.push( slot + \":\" + value )\n            }\n\n            return \"{\" + lines.join(\",\") + \"}\"\n        }\n        \n        if ( _.isNil( obj )) return \"null\"\n\n        return obj.toString();\n    },\n\n    beautify : function ( str ) {\n        return js_beautify.js_beautify( str, {\n            indent_size :2 ,\n            indent_level : -1, \n            max_preserve_newlines : 1,\n            preserve_newlines : true\n        } )\n    }\n}\n\nvar test = (result) => {\n\n    var obj = {\n        tpl : `<div>s\nce mai faci <span>\nsdf</span>\n        alut</div>`,\n        fn : function ( ) {\n\n        },\n        \"#b ce mai faci\" : \"\",\n        x : {\n            \"test\" : \"salut\" \n        }\n    }\n\n    result.str = ub.makestr( obj ,10 )\n    result.beuaty = js_beautify.js_beautify( result.str, {\n        indent_size :2 ,\n        indent_level : -1, \n        max_preserve_newlines : 1,\n        preserve_newlines : true\n    } )\n}\n\ncu.prettyScode = {\n    //test,\n\n    run: function (name) {\n        let str =  ub.makestr(name, 1)\n        return ub.beautify( str );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","\nimport React, { Component } from 'react';\n\nclass MyInput extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        value : \"\"\n      }\n\n      this.onChange = this.onChange.bind( this );\n    }\n\n    onChange ( evt ) {\n      this.setState( {value : evt.target.value});\n\n      if ( this.props.onChange ) this.props.onChange( evt );\n    }\n  \n\n    componentWillReceiveProps(nextProps) {\n      if ( nextProps.value!==undefined && nextProps.value.text!==undefined) this.setState({value : nextProps.value.text})\n    }\n\n    render () {\n\n      let props = Object.assign({}, this.props, {value : this.state.value, onChange : this.onChange })\n      \n      return React.createElement(\"input\", props, null);\n    }\n  }\n\n  export default MyInput;","import _ from \"lodash\"\nimport faker from \"faker\"\nimport React, { Component } from 'react';\nimport MyInput from \"../../components/MyInput\"\nvar cu = window.cu;\n\n\nvar customComponents = {\n  myinput : MyInput\n}\n\n\nvar ub = {\n\n    makeComponent : function (obj, i ) {\n        if (!obj) return null;\n        if (_.isString(obj)) return obj;\n        if (_.isArray(obj)) return obj.map((obj, i) => this.makeComponent(obj, i))\n        if ( !obj.componentName) return null;\n    \n        let children = null;\n        if (obj.children) children = obj.children.map((obj, i) => this.makeComponent(obj, i));\n    \n        let props = null;\n        if (obj.props) props = _.cloneDeep(obj.props);\n    \n        if (props && !props.key) props.key = i;\n        if (!props) props = { key: i }\n    \n        if (obj.componentName == \"style\") {\n          children = [_.flattenDeep(children).join(\"\")]\n        }\n    \n        let component = obj.componentName;\n        if (customComponents[component]) component = customComponents[component];\n    \n        var node;\n        try {\n          node = React.createElement(component, props, children)\n        } catch (e) {\n          console.error(e)\n          node = \"error\"\n        }\n        return node;\n        },\n\n}\n\nvar test = (result) => {\n}\n\ncu.reactUtils = {\n    //test,\n\n    makeComponent: function (tplComponent) {\n        return ub.makeComponent(tplComponent, 1)\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport $ from \"jquery\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    createStore : function ( tb, hapi, fns  ) {\n        if ( tb.cache.store ) return tb.cache.store;\n\n        let tpls = {\n          changeValueTpl : ( path ) =>  {\n            return function ( evt ) {\n              let value = evt.target.value;\n              hapi.set( path, value )\n            }\n          }, \n          runActionTpl : ( action ) => {\n            return function ( evt ) {\n              if ( hapi[action] ) return hapi[action]( evt );\n            }\n          },\n          runWithActionTpl : ( action ) => {\n            return function ( evt ) {\n                let target = evt.target;\n                let attr = $(target).attr( action[1])\n                if ( attr === undefined ) {\n                    target = $(target).parents(\"[\" + action[1] + \"]\")\n                    attr = $(target[0]).attr( action[1])\n\n                }\n\n              evt.stopPropagation();\n              if ( hapi[action[0]] ) return hapi[action[0]]( attr, evt );\n            }\n          }\n\n        }\n\n\n        let store = {}\n  \n        for ( var i in fns.change ) {\n          store[i]  = tpls.changeValueTpl( fns.change[ i ])\n        }\n  \n  \n        for ( var i in fns.run ) {\n            store[i]  = tpls.runActionTpl( fns.run[ i ])\n          }\n\n          \n            \n        for ( var i in fns.runWith ) {\n            store[i]  = tpls.runWithActionTpl( fns.runWith[ i ])\n          }\n  \n        tb.cache.store = store;\n        return store;\n      }\n\n}\n\nvar test = (result) => {\n}\n\ncu.store = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    get : function ( tb, hapi,  fns ) {\n        return ub.createStore( tb, hapi, fns )\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            data: {\n\n                items: {},\n                subs: {},\n            },\n\n            src: {\n                getItem: function (id) {\n\n                },\n\n                getSubs: function (id) {\n\n                }\n            },\n\n            tpls: [],\n            registerTpl: function (args, master) {\n                this.tpls.push(args.path);\n            },\n\n            cases: [\n                result => {\n                    let isApplicable = !result.obj.item;\n\n                    if (!isApplicable) return;\n\n                    let id = result.obj.id;\n                    let item = ub.ctx.payload.data.items[id]\n\n                    if (!item) {\n                        item = {\n                            text: faker.company.catchPhrase(),\n                            id: id\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"items\", id], _.cloneDeep(item) )\n                    }\n\n\n                    result.obj.item = item;\n                    return \"applied\";\n                },\n\n                result => {\n                    let isApplicable = !result.obj.subs && result.obj.item && result.obj.level < 4;\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let id = result.obj.id;\n\n                    let subs = ub.ctx.payload.data.subs[id];\n\n                    if (!subs && !ub.ctx.payload.generated) {\n                        subs = {};\n\n                        let count = 4;\n                        for (var i = 0; i < count; i++) {\n                            let id = faker.random.uuid();\n                            let tpl = null;\n                            if (obj.level == 1) tpl = faker.random.arrayElement([null, \"columns\"]);\n                            let sub = {\n                                id: id,\n                                level: result.obj.level + 1,\n                                tpl: tpl\n                            }\n\n                            subs[id] = sub;\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"subs\", id], _.cloneDeep( subs ) )\n\n                    }\n\n                    if ( !subs ) subs = {}\n\n                    result.obj.subs = subs;\n                    result.subs = subs;\n\n                    return \"applied\";\n                }\n            ]\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run: function (obj, attrs) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs || [];\n\n        let mold = this.it(obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar inputs = {\n    items: { level: 0 },\n    subs: {},\n}\nvar test = (result) => {\n    let value = ub.run(inputs.items);\n\n    result.x = value;\n\n\n    cu.tests.pin(\"testRepo\", value)\n    //result.mold = value;\n}\n\ncu.testDataGenerator = {\n    //test,\n\n    run: function (id, data, generated,  setter) {\n\n        ub.ctx.payload.data = data;\n        ub.ctx.payload.setter = setter;\n        ub.ctx.payload.generated = generated;\n\n        return ub.run({ id: id || \"root\", level: 0 }, [])\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb : {}\n    },\n\n    run : function ( str ) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run( mold , [\"comp\"] );\n\n        return mold;\n    },\n\n\n}\n\n\nvar inputs = {\n    tplTree : {\n        x : `<div> <div id='title' comp='salut' class='{#test1} {#test2}' style='color : {#color}'> {#handle} : {#title}\n        \n        \n            <style>\n                @input \n                .column  { x : 12; background : {styleforred}red;}\n            </style>\n        </div> `\n    }\n}\nvar test = (result) => {\n    let value = ub.run( inputs.tplTree);\n\n    result.x = value.x.mold;\n\n    cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n}\n\ncu.testMolds = {\n    //test,\n\n    run: function (obj) {\n        return ub.run(obj, [])\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport $ from \"jquery\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n\n        wallet: {}\n    },\n\n    run: function (str) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run(mold, [\"comp\"]);\n\n        return mold;\n    },\n\n    parseTpl: function (obj) {\n        let mold = this.ctx.tb.parser.run(obj, [\"comp\"]);\n        return mold;\n    },\n\n    renderTpl: function (mold, data, getter) {\n        return this.ctx.tb.reactAssembler.run(mold, data, getter)\n    },\n\n    assembleTpl: function (mold, data) {\n        if (_.isString(mold)) mold = _.get(this.ctx.payload.molds, mold);\n        return this.ctx.tb.reactAssembler.run(mold, data, (data, path) => {\n            let value = _.get( data, path );\n            if ( value.node ) return value.node;\n            return value;\n        })\n    },\n\n\n    iterateBubbles: function (bubbles, count ) {\n        if ( count == undefined ) count = 0;\n\n        if ( count && count > 5 ) return;\n\n        bubbles = bubbles || this.ctx.payload.bubbles;\n\n        let changed = false;\n        for (var i = 0; i< bubbles.length; i++ ) {\n            let bubble = bubbles[i];\n\n            if ( bubble.isReady ) continue;\n\n\n            let shouldAssemble = true;\n\n            for (var j in bubble) {\n                if (bubble[j].tpl) {\n                    if ( !bubble[j].isRegistered ) {\n                        bubble[j].isRegistered = true;\n                        this.addBubble( bubble[j] )\n                    }\n                    if (!bubble[j].isReady) {\n                        shouldAssemble = false;\n                        continue;\n                    }\n                }\n            }\n\n            if (shouldAssemble) {\n                let node = ub.assembleTpl(bubble.tpl, bubble);\n                bubble.node = node;\n                bubble.isReady = true;\n                bubble.computedAtStep = this.ctx.payload.step++;\n                changed = true;\n            }\n        }\n        if ( changed)\n            this.iterateBubbles( bubbles, count+1)\n\n    },\n\n    addBubble: function (bubble) {\n        bubble.uid = cu.uids.run(\"bubble\");\n        bubble.addedAtStep = this.ctx.payload.step;\n        this.ctx.payload.bubbles.push(bubble);\n        //this.iterateBubbles();\n    },\n\n    start: function (molds) {\n        this.ctx.payload = {\n            bubbles: [],\n            molds: molds,\n            step : 0,\n        }\n    }\n\n}\n\n\nvar inputs = {\n    tplTree: {\n        x: `\n            <div><input id='order' syncwith={value} />\n            {value} \n            <div id='menu'> </div>\n            <div id='bar'> </div>\n            <div id='window' > {content}</div>\n            </div>\n        `,\n        y: \"salut {#test} salutare din alt template \"\n    }\n}\nvar test = (result) => {\n\n    ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n    ub.addBubble({\n        tpl: \"x\", \n        value : \"salutare\", \n        value_setter : () => { console.log( \"setting\")},\n        content : {\n            tpl : \"y\",\n            \"#test\" : \"yo\"\n        }\n    })\n\n    ub.iterateBubbles();\n\n    result.bubbles = ub.ctx.payload;\n    //cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n    //return nodes;\n}\n\nlet data = window.salut = { value: \"elefant\" }\ncu.testTplAssembing = {\n    //test,\n\n    run: function () {\n        ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n        ub.addBubble({\n            tpl: \"x\", \n            value : \"salutare\", \n            value_setter : () => { console.log( \"setting\")},\n            content : {\n                tpl : \"y\",\n                \"#test\" : \"yo\"\n            }\n        })\n    \n        ub.iterateBubbles();\n    \n        //result.bubbles = ub.ctx.payload;\n        return ub.ctx.payload.bubbles[0].node;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            tpls: {},\n            registerTpl: function (args, result,  master) {\n\n                result.obj.uid = cu.uids.run();\n\n                if ( result.obj.mold.props ) result.obj.mold.props.tplId = result.obj.uid;\n                //this.tpls.push(args.path);\n\n                this.tpls[ args.path.join(\".\") ] = result.obj.uid;\n            }\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: obj,\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.sub) {\n            let ret = this.it(result.sub[i], path.concat(i));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n        let checks = {\n            isString: result => result.obj && result.obj.trim,\n            isUnparsedTpl: result => result.obj && result.obj.html && !result.obj.mold,\n            isCollection : result => result.obj && result.obj.isCollection,\n            isObjTpl     : result => result.obj && result.obj.VALUE\n        }\n\n        let cases = {\n            \"isString\": (result) => {\n                result.values = result.obj = { html: result.obj };\n                result.sub = [];\n                return \"applied\";\n            },\n            \"isUnparsedTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseHtml.run( result.obj.html, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n            \"isCollection\": (result) => {\n                let sub = {};\n                for ( var i in result.obj ) {\n                    if ( i == \"isCollection\") continue;\n                    sub[ i ] = { VALUE : result.obj[i]}\n                }\n                result.values = {};\n                result.sub = sub;\n                return \"applied\";\n            },\n            \"isObjTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseObj.run( result.obj.VALUE, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n        }\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _check = checks[i];\n                if (!_check(result)) continue;\n\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op, result, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.values;\n    }\n}\n\nvar test = (result) => {\n    let value = ub.run({ x: `\n        <div pin = \"test\" > \n        <input id=\"dalut\" test=\"{salut}\" />\n            <div> \n                    <div xid='x{#tes}'> \n                    </div>\n            </div>\n\n        </div>\n    `, y: { a: { b: `\n    \n        <div id='yo'> Salutare </div>\n    ` } },\n\nv : {\n\n    isCollection : true, \n    a : {\n        test : \"{x}\"\n    }\n}}, []);\n    //value = ub.it(value, []);\n\n    result.mold = value;\n}\n\ncu.tplObjParse = {\n    test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parseHtml = cu.parseStringIntoComp;\n        ub.ctx.tb.parseObj = cu.parseObjIntoMold;\n    },\n    \n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n        payload1: {\n            tplsMapping: [\n                \"map\",\n                \"topic\",\n                \"item\",\n                \"entry\"\n            ],\n            defaultTpl: \"item\",\n            usedGlobalStyles: {},\n\n\n            addSubs: function (args, result, master) {\n                result.obj.subs = result.values;\n                //console.log( arguments );\n\n                let obj = result.obj;\n                let content = [];\n                for (var i in result.values) {\n                    let item = result.values[i];\n                    if (item.nodes && item.nodes.card)\n                        content.push(item.nodes.card)\n                }\n\n                if (content) {\n                    result.obj.nodes.content = master.ctx.payload.useTemplate(obj.tpl + \".content\", { subs: content });\n                }\n\n                let data = result.obj.nodes;\n                result.obj.nodes.card = master.ctx.payload.useTemplate(obj.tpl + \".card\", data)\n\n            },\n\n            useTemplate: function (tpl, data, skipGlobalStyle) {\n\n                if (!skipGlobalStyle) {\n                    let route = tpl.split(\".\");\n                    let root = ub.ctx.wallet.molds;\n\n                    for (var i = 0; i < route.length; i++) {\n                        let step = route[i];\n                        if (root[step].globalStyle) {\n                            let id = root[step].globalStyle.uid;\n                            this.usedGlobalStyles[id] = { parent: root[step] };\n                        }\n                        if (root[step])\n                            root = root[step];\n                        else break;\n                    }\n                }\n\n                let mold = _.get(ub.ctx.wallet.molds, tpl); // .item.title;\n                return ub.ctx.tb.reactAssembler.run(mold, data)\n            },\n            cases: [\n                (result, master) => {\n\n                    let isApplicable = !result.obj.data\n                    if (!isApplicable) return;\n\n                    let tpls = master.ctx.payload.tplsMapping;\n\n                    let defaultTpl = tpls[result.obj.level] || master.ctx.payload.defaultTpl;\n\n\n                    let obj = {\n                        tpl: result.obj.tpl || defaultTpl,\n                        data: result.obj.item,\n                        level: result.obj.level,\n                        nodes: {}\n                    }\n\n                    result.subs = result.obj.subs;\n                    result.obj = obj;\n                    result.ops.push({ name: \"addSubs\", args: \"subs\" })\n\n                    return \"applied\"\n                },\n\n                (result, master) => {\n                    let isApplicable = !result.obj.nodes.title\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let mold = ub.ctx.wallet.molds.item.title;\n                    let values = {\n                        title: result.obj.data.text,\n                        level: result.obj.level\n                    }\n\n                    result.obj.nodes.title = master.ctx.payload.useTemplate(obj.tpl + \".title\", values);\n\n                    return \"applied\"\n                },\n\n\n            ]\n\n        },\n\n    },\n\n    getMolds: function (tpls) {\n        let molds = this.ctx.tb.parser.run(tpls);\n        return molds;\n    },\n\n\n    buildTpls: function (data) {\n        let node = this.ctx.tb.iterator.run(data, { payload: this.ctx.payload1 });\n        return node;\n    },\n\n    addGlobalStyles: function (nodes, gbs) {\n        let styles = [];\n        gbs = gbs || this.ctx.payload1.usedGlobalStyles\n\n\n        var parent;\n\n        let makeSelector = (path) => \"[tplid='\" + parent[path].uid + \"']\";\n\n        let getter = (data, path) => {\n            if (parent[path]) {\n                return makeSelector(path)\n            }\n            else if (path == \"*\")\n\n                return Object.keys(parent).filter(item => item != \"globalStyle\").map(item => makeSelector(item)).join(\",\")\n\n            return _.get(data, path)\n        }\n\n        let data = { color: \"red\" }\n        for (var i in gbs) {\n            parent = gbs[i].parent;\n            let style = ub.ctx.tb.reactAssembler.run(parent.globalStyle, data, getter)\n            styles.push(style)\n        }\n\n        if (styles.length) {\n            nodes = [nodes, styles];\n        }\n        return nodes;\n    }\n}\n\nvar input = {\n    tpls: {\n        map: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div>{subs}</div>\",\n            card: \"<div class='map'>{title} {content} </div>\",\n            style: `\n\n            `\n        },\n        topic: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='topic'>{title} {content} </div>\"\n        },\n        item: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='item'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n        entry: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\"\n        },\n\n        summart: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>summary</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n\n        columns: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='columns'>{title} {content} </div>\",\n            globalStyle: `<style htmlSlot='content'>\n               {content} { display : flex; background : hsla(100, 50%, 70%, 0.4)}\n               {content}>* { flex-basis : 100px; padding :0px 10px; border-left : 1px solid red; }\n         \n            </style>`\n        },\n    }\n}\n\nvar test = (result) => {\n    let wallet = {\n        molds: ub.getMolds(input.tpls),\n        repo: cu.tests.get(\"testRepo\"),\n    }\n\n    ub.ctx.wallet = wallet;\n\n    wallet.tpls = ub.buildTpls(wallet.repo);\n\n    let card = wallet.tpls.nodes.card;\n    card = ub.addGlobalStyles(card)\n    cu.tests.pin(\"testRoot\", card)\n    Object.assign(result, wallet)\n}\n\ncu.treeCardsBuilder = {\n    //test,\n\n    run: function (obj) {\n\n        let wallet = ub.ctx.wallet = {\n            molds : obj.molds,\n            repo  : obj.data\n        };\n\n        Object.assign(ub.ctx.payload1, {\n            tplsMapping: obj.mappings.tplsMapping,\n            defaultTpl: obj.mappings.defaultTpl, \n            usedGlobalStyles: {},\n        });\n\n        wallet.tpls = ub.buildTpls(wallet.repo);\n\n        let card = wallet.tpls.nodes.card;\n        card = ub.addGlobalStyles(card)\n\n        return card;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n        ub.ctx.tb.iterator = cu.treeIterator;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result, this);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, result,  this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar test = (result) => {\n}\n\ncu.treeIterator = {\n    //test,\n\n    run: function (obj, ctx ) {\n        let mub = Object.create( ub )\n        mub.ctx = ctx;\n        if ( !ctx.payload ) ctx.payload = { cases : [] }\n        return mub.run(obj, [])\n    },\n\n    init : function ( ) {\n        //ub.ctx.tb.parser = cu.tplObjParse;\n        //ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n}\n\nvar test = (result) => {\n}\n\ncu.uids = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\nfor (var i in cu) {\n    if (cu[i].init) cu[i].init();\n}\n\n\n\ncu.tests = {\n    wallet: {\n        test: {},\n        pins: {},\n        pending: []\n    },\n    pin: function (name, value) {\n        this.wallet.pins[name] = value;\n    },\n    get: function (name) {\n        let value = _.get(this.wallet.pins, name);\n        if (!value) value = _.get(this.wallet.test, name);\n        return value;\n    }\n}\n\n\nfor (var i in cu) {\n    if (cu[i].test) {\n        cu.tests.wallet.pending.push(i);\n\n    }\n}\n\n\nlet passes = 0;\nwhile (passes < 5 && cu.tests.wallet.pending.length) {\n    let i = cu.tests.wallet.pending.shift();\n    passes++;\n    let result = {};\n    let ret;\n    try {\n        ret = cu[i].test(result);\n    } catch (e) {\n        console.log(\"error when running \", i, e)\n    }\n\n    if (ret == \"pending\") {\n        cu.tests.wallet.pending.push(i)\n        continue;\n    }\n    console.group(\"test for \", i)\n\n    cu.tests.wallet.test[i] = result;\n\n    if (ret) console.log(ret)\n    if (Object.keys(result)) {\n        for (var i in result) console.log(i, result[i])\n    }\n    console.groupEnd();\n}\n\nif (cu.tests.wallet.pending.length)\n    console.error(\"error with tests : \")\n\n\n","\nimport cu from './main.js';\nimport './units/brand.js';\nimport './units/bubbleBoard.js';\nimport './units/bubbleFlow.js';\nimport './units/bubbleGuns.js';\nimport './units/bubbleTest.js';\nimport './units/bubbleTypes.js';\nimport './units/db.js';\nimport './units/parseObjIntoMold.js';\nimport './units/parseStringIntoComp.js';\nimport './units/prettyScode.js';\nimport './units/reactAssembler.js';\nimport './units/reactUtils.js';\nimport './units/store.js';\nimport './units/testDataGenerator.js';\nimport './units/testMolds.js';\nimport './units/testTplAssembling.js';\nimport './units/tplObjParse.js';\nimport './units/treeCardsBuilder.js';\nimport './units/treeIterator.js';\nimport './units/uids.js';\nimport './init.js';\nexport default cu;\n   ","import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport * as webcola from \"webcola\";\n\n\nexport default class TreeDiagram extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.ref = React.createRef();\n    }\n    componentDidMount() {\n      this.drawTree();\n    }\n  \n    drawChart() {\n      const data = [12, 5, 6, 6, 9, 10];\n  \n      let h = 200;\n      let w = 200;\n  \n  \n      console.log(this.ref.current);\n      const svg = d3.select(this.ref.current)\n        .append(\"svg\")\n        .attr(\"width\", 200)\n        .attr(\"height\", 200)\n        .style(\"margin-left\", 10);\n  \n      svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", (d, i) => i * 70)\n        .attr(\"y\", (d, i) => h - 10 * d)\n        .attr(\"width\", 65)\n        .attr(\"height\", (d, i) => d * 10)\n        .attr(\"fill\", \"green\")\n    }\n  \n    drawTree() {\n      var  graph = {\n        \"nodes\": [{ \"name\": \"Toprato\" }, { \"name\": \"Fella\" }, { \"name\": \"Tirti\" }, { \"name\": \"LA Piu' Bella\" }, { \"name\": \"Deep Shadow 1-5-8\" }, { \"name\": \"Oobiscus\" }, { \"name\": \"Rioky\" }, { \"name\": \"Klashe\" }, { \"name\": \"Tau Beta\" }, { \"name\": \"311040\" }, { \"name\": \"Nevf Zotsamm\" }, { \"name\": \"Gnaron\" }, { \"name\": \"Green Dor\" }, { \"name\": \"Gravity\" }, { \"name\": \"Jurrawensaed\" }, { \"name\": \"Andrill Primus\" }, { \"name\": \"Ulti-Mad\" }, { \"name\": \"Jellyfish\" }, { \"name\": \"Yersa\" }, { \"name\": \"Therfady\" }, { \"name\": \"SC 09\" }, { \"name\": \"Glueck\" }, { \"name\": \"Fiddle\" }, { \"name\": \"LV-017\" }, { \"name\": \"Sardinle\" }, { \"name\": \"Latalava\" }, { \"name\": \"Penumbra\" }, { \"name\": \"Chi Qoppa\" }, { \"name\": \"Vopru Maufyb\" }, { \"name\": \"Onadha\" }, { \"name\": \"Muplita Furr\" }, { \"name\": \"Psi Epsilon\" }, { \"name\": \"Dimloon\" }, { \"name\": \"Tanned I\" }, { \"name\": \"Woolaris 10\" }, { \"name\": \"Semend\" }, { \"name\": \"Blacus\" }, { \"name\": \"Darknok\" }, { \"name\": \"Oastar Secundus\" }, { \"name\": \"Green One\" }, { \"name\": \"Kayin Minor A\" }, { \"name\": \"Arton\" }, { \"name\": \"Anerstis\" }, { \"name\": \"Lament\" }, { \"name\": \"Shaison\" }, { \"name\": \"Rekini-H-S6\" }, { \"name\": \"Darkless\" }, { \"name\": \"MBTP 20\" }, { \"name\": \"Yankee Quebec\" }, { \"name\": \"Shere Jauj-Bred\" }, { \"name\": \"Embalm\" }, { \"name\": \"Small Rock 4\" }, { \"name\": \"Libra-D-S3\" }, { \"name\": \"Dying Warmth\" }, { \"name\": \"Sofa\" }, { \"name\": \"Grobnor\" }, { \"name\": \"Forbidden 1\" }, { \"name\": \"Glimmer II\" }, { \"name\": \"Aleksis\" }, { \"name\": \"Relu\" }, { \"name\": \"Scoff\" }, { \"name\": \"Elas\" }, { \"name\": \"Great Crater\" }, { \"name\": \"Leuprekota\" }, { \"name\": \"Yetton\" }, { \"name\": \"Fheyhs\" }, { \"name\": \"Edriwoise\" }, { \"name\": \"Usque\" }, { \"name\": \"Surfatu\" }, { \"name\": \"Drumana\" }, { \"name\": \"Hausner\" }, { \"name\": \"Vitalis\" }, { \"name\": \"Hyacinta IV\" }, { \"name\": \"Revenge of the Lith\" }, { \"name\": \"Asclephyrus\" }, { \"name\": \"Little Friend VI\" }, { \"name\": \"Fontelitio\" }, { \"name\": \"Shinmien\" }, { \"name\": \"Nine\" }, { \"name\": \"Kalgash\" }]\n        ,\n        \"links\": [{ \"target\": 1, \"source\": 0, \"value\": 1 }, { \"target\": 2, \"source\": 0, \"value\": 1 }, { \"target\": 9, \"source\": 0, \"value\": 1 }, { \"target\": 11, \"source\": 0, \"value\": 1 }, { \"target\": 78, \"source\": 1, \"value\": 1 }, { \"target\": 3, \"source\": 2, \"value\": 1 }, { \"target\": 4, \"source\": 3, \"value\": 1 }, { \"target\": 5, \"source\": 4, \"value\": 1 }, { \"target\": 6, \"source\": 5, \"value\": 1 }, { \"target\": 10, \"source\": 6, \"value\": 1 }, { \"target\": 8, \"source\": 7, \"value\": 1 }, { \"target\": 11, \"source\": 7, \"value\": 1 }, { \"target\": 12, \"source\": 8, \"value\": 1 }, { \"target\": 18, \"source\": 9, \"value\": 1 }, { \"target\": 35, \"source\": 10, \"value\": 1 }, { \"target\": 13, \"source\": 12, \"value\": 1 }, { \"target\": 14, \"source\": 12, \"value\": 1 }, { \"target\": 15, \"source\": 12, \"value\": 1 }, { \"target\": 16, \"source\": 12, \"value\": 1 }, { \"target\": 17, \"source\": 12, \"value\": 1 }, { \"target\": 19, \"source\": 12, \"value\": 1 }, { \"target\": 20, \"source\": 12, \"value\": 1 }, { \"target\": 21, \"source\": 12, \"value\": 1 }, { \"target\": 23, \"source\": 12, \"value\": 1 }, { \"target\": 25, \"source\": 12, \"value\": 1 }, { \"target\": 26, \"source\": 12, \"value\": 1 }, { \"target\": 28, \"source\": 12, \"value\": 1 }, { \"target\": 29, \"source\": 12, \"value\": 1 }, { \"target\": 31, \"source\": 12, \"value\": 1 }, { \"target\": 24, \"source\": 13, \"value\": 1 }, { \"target\": 45, \"source\": 14, \"value\": 1 }, { \"target\": 22, \"source\": 15, \"value\": 1 }, { \"target\": 49, \"source\": 16, \"value\": 1 }, { \"target\": 30, \"source\": 18, \"value\": 1 }, { \"target\": 39, \"source\": 19, \"value\": 1 }, { \"target\": 40, \"source\": 20, \"value\": 1 }, { \"target\": 50, \"source\": 21, \"value\": 1 }, { \"target\": 27, \"source\": 22, \"value\": 1 }, { \"target\": 63, \"source\": 23, \"value\": 1 }, { \"target\": 72, \"source\": 24, \"value\": 1 }, { \"target\": 60, \"source\": 26, \"value\": 1 }, { \"target\": 68, \"source\": 27, \"value\": 1 }, { \"target\": 59, \"source\": 29, \"value\": 1 }, { \"target\": 32, \"source\": 31, \"value\": 1 }, { \"target\": 33, \"source\": 31, \"value\": 1 }, { \"target\": 34, \"source\": 31, \"value\": 1 }, { \"target\": 36, \"source\": 31, \"value\": 1 }, { \"target\": 37, \"source\": 31, \"value\": 1 }, { \"target\": 38, \"source\": 31, \"value\": 1 }, { \"target\": 58, \"source\": 32, \"value\": 1 }, { \"target\": 75, \"source\": 33, \"value\": 1 }, { \"target\": 41, \"source\": 34, \"value\": 1 }, { \"target\": 48, \"source\": 35, \"value\": 1 }, { \"target\": 76, \"source\": 36, \"value\": 1 }, { \"target\": 42, \"source\": 37, \"value\": 1 }, { \"target\": 44, \"source\": 38, \"value\": 1 }, { \"target\": 46, \"source\": 38, \"value\": 1 }, { \"target\": 47, \"source\": 38, \"value\": 1 }, { \"target\": 43, \"source\": 39, \"value\": 1 }, { \"target\": 57, \"source\": 40, \"value\": 1 }, { \"target\": 67, \"source\": 41, \"value\": 1 }, { \"target\": 74, \"source\": 42, \"value\": 1 }, { \"target\": 51, \"source\": 43, \"value\": 1 }, { \"target\": 52, \"source\": 48, \"value\": 1 }, { \"target\": 53, \"source\": 48, \"value\": 1 }, { \"target\": 54, \"source\": 48, \"value\": 1 }, { \"target\": 55, \"source\": 48, \"value\": 1 }, { \"target\": 56, \"source\": 48, \"value\": 1 }, { \"target\": 61, \"source\": 48, \"value\": 1 }, { \"target\": 62, \"source\": 48, \"value\": 1 }, { \"target\": 64, \"source\": 62, \"value\": 1 }, { \"target\": 65, \"source\": 62, \"value\": 1 }, { \"target\": 66, \"source\": 62, \"value\": 1 }, { \"target\": 69, \"source\": 62, \"value\": 1 }, { \"target\": 70, \"source\": 69, \"value\": 1 }, { \"target\": 71, \"source\": 69, \"value\": 1 }, { \"target\": 73, \"source\": 69, \"value\": 1 }, { \"target\": 77, \"source\": 69, \"value\": 1 }, { \"target\": 79, \"source\": 78, \"value\": 1 }]\n        ,\n        \"constraints\": [\n          { \"axis\": \"y\", \"left\": 0, \"right\": 1, \"gap\": 25 },\n          { \"axis\": \"y\", \"left\": 0, \"right\": 2, \"gap\": 25 },\n          { \"axis\": \"y\", \"left\": 0, \"right\": 9, \"gap\": 25 },\n          { \"axis\": \"y\", \"left\": 0, \"right\": 11, \"gap\": 25 },\n          { \"axis\": \"y\", \"left\": 1, \"right\": 78, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 2, \"right\": 3, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 3, \"right\": 4, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 4, \"right\": 5, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 5, \"right\": 6, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 6, \"right\": 10, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 7, \"right\": 8, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 7, \"right\": 11, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 8, \"right\": 12, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 9, \"right\": 18, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 10, \"right\": 35, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 13, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 14, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 15, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 16, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 17, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 19, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 20, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 21, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 23, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 25, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 26, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 28, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 29, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 12, \"right\": 31, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 13, \"right\": 24, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 14, \"right\": 45, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 15, \"right\": 22, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 16, \"right\": 49, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 18, \"right\": 30, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 19, \"right\": 39, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 20, \"right\": 40, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 21, \"right\": 50, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 22, \"right\": 27, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 23, \"right\": 63, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 24, \"right\": 72, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 26, \"right\": 60, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 27, \"right\": 68, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 29, \"right\": 59, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 32, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 33, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 34, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 36, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 37, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 31, \"right\": 38, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 32, \"right\": 58, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 33, \"right\": 75, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 34, \"right\": 41, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 35, \"right\": 48, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 36, \"right\": 76, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 37, \"right\": 42, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 38, \"right\": 44, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 38, \"right\": 46, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 38, \"right\": 47, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 39, \"right\": 43, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 40, \"right\": 57, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 41, \"right\": 67, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 42, \"right\": 74, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 43, \"right\": 51, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 52, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 53, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 54, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 55, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 56, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 61, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 48, \"right\": 62, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 62, \"right\": 64, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 62, \"right\": 65, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 62, \"right\": 66, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 62, \"right\": 69, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 69, \"right\": 70, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 69, \"right\": 71, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 69, \"right\": 73, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 69, \"right\": 77, \"gap\": 25 }, { \"axis\": \"y\", \"left\": 78, \"right\": 79, \"gap\": 25 }]\n      };\n  \n  \n      var graph = {\n        nodes : []\n      }\n  \n      for ( var i = 0; i< 5; i++ ) {\n        graph.nodes[ i ] = { name : \"node \" + i}\n      }\n  \n      graph.links = [\n        {source : 0, target : 1}, \n        {source : 1, target : 2}, \n        {source : 1, target : 3}, \n        {source : 0, target : 4}, \n        {source : 4, target : 3}\n      ] \n  \n  \n      let h = 200;\n      let w = 200;\n  \n  \n      for ( var i in graph.constraints )\n      graph.constraints[i].gap = 5;\n  \n      //var color = d3.scaleOrdinal(d3.schemeCategory20);\n  \n  \n  \n  \n      const svg = d3.select(this.ref.current)\n        .append(\"svg\")\n        .attr(\"width\", 400)\n        .attr(\"height\", 400)\n        .style(\"margin-left\", 0);\n      var nodeRadius = 5;\n  \n      graph.nodes.forEach(function (v) { v.height = v.width = 2 * nodeRadius; });\n  \n      console.log(webcola);\n  \n      var d3cola = webcola.d3adaptor(d3)\n        .avoidOverlaps(true)\n        .size([400, 400]);\n  \n  \n      d3cola\n        .nodes(graph.nodes)\n        .links(graph.links)\n        .flowLayout(\"y\", 50)\n        .symmetricDiffLinkLengths(20)\n        .start(1,1,1);\n  \n      // define arrow markers for graph links\n      svg.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 6)\n        .attr('markerWidth', 3)\n        .attr('markerHeight', 3)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')\n        .attr('fill', '#000');\n  \n      var path = svg.selectAll(\".link\")\n        .data(graph.links)\n        .enter().append('svg:path')\n        .attr('class', 'link');\n  \n      var node = svg.selectAll(\".node\")\n        .data(graph.nodes)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", nodeRadius)\n        .style(\"fill\", function (d) { return \"red\"; })\n        //.call(d3cola.drag);\n  \n      node.append(\"title\")\n        .text(function (d) { return d.name; });\n  \n      d3cola.on(\"tick\", function () {\n        // draw directed edges with proper padding from node centers\n        path.attr('d', function (d) {\n          var deltaX = d.target.x - d.source.x,\n            deltaY = d.target.y - d.source.y,\n            dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n            normX = deltaX / dist,\n            normY = deltaY / dist,\n            sourcePadding = nodeRadius,\n            targetPadding = nodeRadius + 2,\n            sourceX = d.source.x + (sourcePadding * normX),\n            sourceY = d.source.y + (sourcePadding * normY),\n            targetX = d.target.x - (targetPadding * normX),\n            targetY = d.target.y - (targetPadding * normY);\n          return 'M' + sourceX + ',' + sourceY + 'L' + targetX + ',' + targetY;\n        });\n  \n        node.attr(\"cx\", function (d) { return d.x; })\n          .attr(\"cy\", function (d) { return d.y; });\n      });\n      // turn on overlap avoidance after first convergence\n      //cola.on(\"end\", function () {\n      //    if (!cola.avoidOverlaps()) {\n      //        graph.nodes.forEach(function (v) {\n      //            v.width = v.height = 10;\n      //        });\n      //        cola.avoidOverlaps(true);\n      //        cola.start();\n      //    }\n      //});\n  \n    }\n  \n    render() {\n      return <div ref={this.ref} id={\"#\" + this.props.id}></div>\n    }\n  \n  }","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager\";\nimport KeyboardManager from \"./managers/KeyboardManager\"\nimport StaticManager from \"./managers/StaticManager\"\nimport { TimerManager as TimerManagerBuilder } from \"./managers/TimerManager\"\nimport PouchDB from \"pouchdb\"\nimport js_beautify from \"js-beautify\"\nimport faker from 'faker'\nimport cu from \"./units/\"\nimport moment from \"moment\"\nimport TreeDiagram from \"./components/TreeDiagram\"\n\n\nvar fns = window.fns = {}\n\nwindow.$ = $;\n\nvar ctxpins = window.ctxpins = {};\n\nvar customComponents = {\n  codemirror: CodeMirrorEditor\n}\n\nvar DataManager = window.DataManager;\nDataManager.newAPI = true;\n\nvar TimerManager = TimerManagerBuilder.init(DataManager);\n\n//--------------------\nwindow.$ = $;\n\nvar pinedTasks = `\n`\n\nvar hapi = {\n  showhud: function () {\n    let currentView = DataManager.getValue(\"workingant.viewState.path\");\n\n    currentView = currentView !== \"antView.map.nodes\" ? \"map\" : \"bridge\"\n\n    this.goToCard(currentView);\n\n    //DataManager.set(\"workingant.viewState.path\", currentView);\n  },\n  placeorder: function (evt) {\n    if (evt.which !== 13) return;\n\n    flow.place();\n    DataManager.set(\"workingant.data.input\", { text: \"\" })\n    flow.restart();\n  },\n  set: function (path, value) {\n    DataManager.set(path, value)\n  },\n  parseinput: function () {\n    let text = DataManager.getValue(\"workingant.data.input\");\n    if (_.isString(text))\n      flow.parse(text)\n  },\n\n  select: function (id) {\n    console.log(\"selecting\", id)\n    flow.change({ parent: id })\n    DataManager.set(\"repo.uistate.selected\", id)\n\n    $(\"#order\").focus();\n\n    myUB.afterRenderActions.add(\"scrollIntoViewSelected\")\n  },\n\n  goToInfo: function (id) {\n    DataManager.set(\"antsView.hudPanel.cfg.antId\", id);\n    //DataManager.set(\"workingant.viewState.overPanel.hud\", \"antsView.hudPanel.nodes\")\n    this.goToCard( \"info\");\n    return false;\n  },\n\n  goToCard: function (id) {\n    var cards = {\n      bridge: \"antView.bridge.nodes\",\n      map: \"antView.map.nodes\",\n      info : \"antsView.hudPanel.nodes\"\n    }\n\n    let path = cards[id];\n\n    if (id == \"bridge\") {\n      myUB.bridgeLoader.loadBridge();\n    }\n\n    DataManager.set(\"workingant.viewState.path\", path);\n\n  },\n\n  selectMap: function (id) {\n    console.log(\"selecting map\", id);\n    myUB.mapview.loadMap(id)\n    this.goToCard(\"map\");\n  },\n}\n\nDataManager.setTrigger(\"workingant.data.input\", \"ada\", {\n  run: hapi.parseinput\n})\n\n\nDataManager.setCombined(\"ub.menu\", {\n  setup: function () {\n\n  },\n\n  getAll: function () {\n    return DataManager.getValue(\"data.menu\");\n  },\n  set: function (path, value) {\n    DataManager.set([\"data.menu\", path].join(\".\"), value)\n  },\n  showMenu: function () {\n    this.set(\"isvisible\", true);\n  },\n  hideMenu: function () {\n    this.set(\"isvisible\", false);\n  },\n\n  addEntries: function () {\n\n  }\n})\n\nDataManager.setCombined(\"ub.flow\", {\n  start: function () {\n    this.wallet = {\n      step: { createdAt: new Date().getTime() },\n    }\n  },\n\n  parse: function (input) {\n    if (input.indexOf(\".s\") == 0) {\n\n\n      this.wallet.step.showSearch = true;\n      this.wallet.step.noPlace = true;\n    }\n    else {\n      this.wallet.step.showSearch = false;\n      this.wallet.step.noPlace = false;\n    }\n\n    var result = input.match(/^(\\.[^\\s]+\\s+)*/)\n    var text = input.substr(result[0].length)\n    var dirs = result[0].trim().split(\" \");\n\n    if (!this.wallet.step.editStartedAt) this.wallet.step.firstCharAt = new Date().getTime();\n\n    this.wallet.step.text = text;\n  },\n\n  place: function () {\n    let ant = {\n      text: this.wallet.text,\n      id: myUB.antsDbState.getId(),\n      times: {\n        createdAt: this.wallet.step.createdAt,\n        firstCharAt: this.wallet.step.firstCharAt,\n        addedAt: new Date().getTime()\n      }\n    };\n\n    let parent = this.getParent();\n  }\n\n})\n\nvar flow = {\n\n  start: function () {\n    this.wallet = {\n      step: {},\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  restart: function () {\n    let prevStep = this.wallet.step;\n    this.wallet = {\n      step: {\n        parent: prevStep.parent\n      },\n      startedAt: new Date().getTime(),\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  parse: function (text) {\n    this.wallet.parser.parse(this.wallet, text)\n  },\n\n  change: function (values) {\n    this.wallet.actions.change(this.wallet, values)\n  },\n\n  place: function () {\n    this.wallet.actions.place(this.wallet)\n  },\n\n  parser: {\n    parse: function (wallet, text) {\n      wallet.actions.change(wallet, { text: text, x: text.substr(1) })\n    }\n  },\n\n  main: {\n    place: function (wallet) {\n      if (wallet.step.text == \"destroy\") {\n        myUB.db.destroy();\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".m\") == 0) {\n        let id = this.createMap(wallet.step.text.substr(2).trim());\n        hapi.selectMap(id);\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".gi\") == 0) {\n        let id = wallet.step.parent;\n        if ( !id ) return;\n\n        //hapi.selectMap(id);\n        hapi.goToInfo( id );\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".e\") == 0) {\n        let id = this.changeItem({ text: wallet.step.text.substr(2).trim() }, wallet);\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".i\") == 0) {\n        this.addInfo({ text: wallet.step.text.substr(2).trim() }, wallet);\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".t\") == 0) {\n        let text = wallet.step.text.substr(2).trim();\n        let root = DataManager.getWallet(\"repo.root\");\n        let parent = root.id;\n\n        wallet.step.text = text;\n        wallet.step.parent = parent;\n        wallet.step.selectItem = true;\n      }\n\n      this.add(wallet)\n\n      myUB.afterRenderActions.add(\"alertAnimation\");\n    },\n    change: function (wallet, values) {\n      _.merge(wallet.step, values)\n    },\n\n    createMap: function (name) {\n      let id = myUB.antsDbState.getId();\n      let ant = {\n        id: id,\n        text: name,\n        startedAt: myUB.antsDbState.getTime(),\n        type: \"map\",\n\n        rels: {\n          sub: {},\n          allSubs: {}\n        },\n        mapId: id,\n        parentId: id\n      }\n\n      myUB.mapview.mergeItem(ant.id, ant);\n      DataManager.set(\"repo.items.\" + ant.id, ant);\n\n      return ant.id;\n    },\n\n    changeItem: function (change, wallet) {\n      let id = wallet.step.parent;\n      if (!id) return;\n\n      let ant = DataManager.getWallet(\"repo.items.\" + id);\n\n      _.merge(ant, change);\n\n      if (!ant.history) ant.history = []\n      ant.history.push({ changeAt: Date.now() });\n\n      myUB.mapview.mergeItem(id, ant);\n      DataManager.set(\"repo.items.\" + id, ant);\n\n    },\n\n    addInfo: function (text, wallet) {\n\n      let parent = wallet.step.parent;\n      let root = DataManager.getWallet(\"repo.root\");\n\n      if (!parent)\n        return;\n\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime(),\n        mapId: root.id,\n        parentId: parent,\n        targetId: id,\n        type: \"info\"\n      }\n\n      console.log(\"Adding info to\", parent)\n\n      myUB.mapview.mergeItem(parent, { hasInfo: true })\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeRoot(_.set({}, \"rels.info.\" + parent + \".\" + id, { id: id, parent: parent }))\n\n      DataManager.mergeValue(\"repo.items.\" + parent, { hasInfo: true })\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.info.\" + parent + \".\" + id, { id: id, parent: parent })\n    },\n\n    add: function (wallet) {\n\n      let parent = wallet.step.parent;\n      let root = DataManager.getWallet(\"repo.root\");\n\n      if (!parent) {\n        parent = root.id;\n      }\n\n      let state = DataManager.getWallet(\"repo.state\");\n      state.nextId++;\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: wallet.step.text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime(),\n        mapId: root.id,\n        parentId: parent\n      }\n\n\n      let obj = {\n        \"{id}\": \"{ant}\",\n        \"{ant.mapId}.rels.sub.{ant.parentId}.{ant.id}\": { id: \"{ant.id}\", parent: \"{ant.parentId}\" },\n        \"{ant.mapId}.rels.allSubs.{ant.id}\": { id: \"{ant.id}\", parent: \"{ant.parentId}\" }\n      }\n\n\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeItem(root.id, _.set({}, \"rels.sub.\" + parent + \".\" + id, { id: id, parent: parent }))\n      myUB.mapview.mergeItem(root.id, _.set({}, \"rels.allSubs.\" + id, { id: id, parent: parent }))\n\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.sub.\" + parent + \".\" + id, { id: id, parent: parent })\n      DataManager.set(\"repo.root.rels.allSubs.\" + id, { id: id, parent: parent })\n\n\n      //DataManager.mergeItem( root.id + \"_state\", {lastItemId : id, changedAt : Date.now() }  )\n\n      if (wallet.step.selectItem) {\n        hapi.select(id);\n      }\n      else hapi.select(parent)\n    }\n  }\n}\nflow.start();\n\n\nlet myUB = window.myUB = {};\n\nDataManager.setCombined(\"fnsub\", {\n  loader: {\n    get: function () {\n\n      let fns = myUB;\n\n      if (!fns.fnsub || !fns.fnsub.isReady) {\n        this.make(fns, \"fnsub\", \"ub.fnsub\", {\n          old: fns.fnsub\n        })\n\n        this.setupAll(fns);\n      }\n\n      fns.fnsub.makeUb(\"mapview\", \"ub.mapView\", {\n        \"tb.db\": \"db\",\n        \"state\": \"antsDbState\",\n      })\n\n      fns.fnsub.makeUb(\"antsDbState\", \"ub.antsDbState\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"bridgeLoader\", \"ub.loaders.bridge\", {\n        \"tb.db\": \"db\"\n      })\n\n      fns.fnsub.makeUb(\"searchLoader\", \"ub.loaders.search\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"hudView\", \"ub.loaders.hud\", {\n        \"tb.db\": \"db\"\n      })\n\n\n\n      fns.fnsub.makeUb(\"db\", \"ub.db\", {})\n\n      fns.fnsub.makeUb(\"afterRenderActions\", \"ub.afterRenderActions\", {})\n      fns.fnsub.setupAll();\n\n    },\n\n    setupAll: function (fns) {\n      for (var i in fns) {\n        if (fns[i].goSetup)\n          this.setup(fns, fns[i])\n      }\n\n      return true;\n    },\n\n    make: function (fns, name, path, extra) {\n      let obj = Object.create(DataManager.getValue(path));\n      obj.goSetup = true;\n      obj.extra = extra;\n      obj.uid = cu.uids.run();\n\n      if (fns[name]) _.merge(fns[name], obj)\n      else\n        fns[name] = obj;\n    },\n\n    setup: function (fns, obj) {\n      delete obj.goSetup;\n\n      let values = {};\n      for (var i in obj.extra) {\n        let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n        if (!target) {\n          target = {};\n          _.set(fns, obj.extra[i], target)\n        }\n        _.set(values, i, target)\n      }\n\n      if (obj.setup)\n        obj.setup(values);\n\n      obj.isReady = true;\n    },\n\n    autostart: true\n\n  }\n})\n\nmyUB.fnsub = {\n  subs: [],\n  waiting: {},\n  makeUb: function (a, b, c) {\n    this.subs.push([a, b, c])\n  },\n  onready: function (sub) {\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n}\n\n\nDataManager.setCombined(\"ub.afterRenderActions\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      actions: []\n    }\n  },\n\n  add: function (name) {\n    this.wallet.actions.push(name);\n  },\n\n  runAll: function () {\n    let actions = this.wallet.actions;\n    this.wallet.actions = [];\n\n    for (var i in actions) {\n      if (this[actions[i]])\n        this[actions[i]]();\n    }\n  },\n  scrollIntoViewSelected: function () {\n    let target = $(\".content.selected\").get(0);\n    if (target) target.scrollIntoViewIfNeeded(false);\n  },\n\n  alertAnimation: function () {\n    if ($(\"body.alert\").length) return;\n\n    $(\"body\").addClass(\"alert\");\n\n    window.setTimeout(() => {\n      $(\"body\").removeClass(\"alert\")\n    }, 5000)\n  }\n})\nDataManager.setCombined(\"ub.antsDbState\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      state: {\n        prefix: \"ants\",\n        id: \"antsDbState\",\n        nextId: 1\n      }\n    };\n\n    myUB.fnsub.onready(this.tb.db)\n      .then(() => {\n        return this.tb.db.loadItems([\"antsDbState\"])\n      })\n      .catch(() => {\n      })\n      .then((state) => {\n        if (!state[0]) {\n          this.tb.db.saveItems(this.uid, [this.wallet.state])\n        }\n        else {\n          this.wallet.state = state[0];\n          this.isReady = true;\n        }\n      })\n  },\n\n  getId: function () {\n    this.wallet.state.nextId++;\n    this.tb.db.request_save(this.uid, [this.wallet.state], 100)\n    return \"ant_\" + this.wallet.state.nextId;\n  },\n\n  getTime: function () {\n    return new Date().getTime();\n  }\n})\n\nDataManager.setCombined(\"ub.fnsub\", {\n  setup: function (opts) {\n\n    _.merge(this, opts)\n\n    this.fns = opts.fns || myUB;\n\n    this.waiting = this.waiting || {};\n\n    let setupRequired = false;\n\n    if (this.old && this.old.subs) {\n      for (var i in this.old.subs) {\n        let sub = this.old.subs[i];\n        this.makeUb(sub[0], sub[1], sub[2])\n      }\n      setupRequired = true;\n      delete this.subs;\n    }\n\n    if (opts.ubs) {\n      for (var i in opts.ubs) {\n        let ub = opts.ubs[i];\n        this.makeUb(ub.name, ub.path, ub.extra)\n      }\n      setupRequired = true;\n    }\n\n    if (setupRequired)\n      this.setupAll();\n  },\n\n\n  detach: function () {\n    let id = cu.uids.run();\n\n    let name = \"internal_\" + id;\n\n    this.makeUb(name, \"ub.fnsub\", {\n      id: id,\n      fns: {},\n      parent: this\n    });\n\n    this.setupAll();\n\n\n    let item = this.fns[name];\n\n    this.fns[name].fns.fnsub = item;\n\n    return item.fns;\n  },\n\n\n  getFromParent: function (names) {\n    if (_.isString(names)) {\n      names = [names]\n    }\n\n    for (var i in names) {\n      let name = names[i] || i;\n      let ub = this.parent.fns[name];\n\n      this.fns[name] = ub;\n    }\n  },\n  addUb: function (spec) {\n    if (_.isArray(spec)) {\n      spec.forEach(spec => {\n        if (_.isString(spec) || !spec.name) this.getFromParent(spec)\n        else this.makeUb(spec.name, spec.path, spec.extra)\n      });\n      this.setupAll();\n      return;\n    }\n    this.makeUb(spec.name, spec.path, spec.extra);\n    this.setupAll();\n  },\n  setupAll: function () {\n    let fns = this.fns;\n    for (var i in fns) {\n      if (fns[i].goSetup)\n        this.setupUb(fns[i])\n    }\n\n    return true;\n  },\n\n  makeUb: function (name, path, extra, fns) {\n\n    fns = fns || this.fns;\n    let obj = Object.create(DataManager.getValue(path));\n    obj.goSetup = true;\n    obj.extra = extra;\n    obj.uid = fns[name] && fns[name].id ? fns[name].uid : (extra.id || cu.uids.run());\n\n\n    if (fns[name]) _.merge(fns[name], obj)\n    else\n      fns[name] = obj;\n  },\n\n  setupUb: function (obj, fns) {\n    fns = fns || this.fns;\n    delete obj.goSetup;\n\n    let values = {};\n    for (var i in obj.extra) {\n      let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n      if (!target) {\n        target = { uid: cu.uids.run() };\n        _.set(fns, obj.extra[i], target)\n      }\n      _.set(values, i, target)\n    }\n\n    if (obj.setup)\n      obj.setup(values);\n\n    obj.isReady = true;\n\n    if (this.waiting[obj.uid]) {\n      this.waiting[obj.uid].forEach(payload => {\n        payload.resolve()\n      })\n\n      this.waiting[obj.uid] = [];\n    }\n  },\n\n  onready: function (sub) {\n\n    if (sub.isReady) return Promise.resolve();\n\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n\n\n});\n\nDataManager.setCombined(\"ub.db\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    this.timers = {};\n  },\n\n  destroy: function () {\n    this.db.destroy();\n  },\n  request_save: function (id, src, delay) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    this.timers[id] = window.setTimeout(() => {\n      this.saveItems(id, src)\n    }, delay || 1000)\n  },\n\n  saveItems: function (id, src) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.save(items[i], items[i].id));\n\n    return Promise.all(promises).then(() => { console.log(\"saved all\", id) })\n  },\n\n  loadItems: function (src) {\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.load(items[i]))\n\n    return Promise.all(promises);\n  },\n\n\n  searchText: function (text) {\n    return this.db.searchText(text)\n  },\n\n  loadFilter: function (filter, count, sort) {\n    return this.db.loadfilter(filter, count, sort)\n  }\n})\n\nDataManager.setCombined(\"ub.loaders.map\", {\n  load: function (id) {\n    let startIds = [id, \"info_\" + id]\n    this.tb.db.loadItems(startIds)\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0])\n          this.wallet.root = items[0];\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n});\n\n\nDataManager.setCombined(\"ub.loaders.bridge\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  loadBridge: function () {\n    let items = {\n      top: {\n        notdb: true,\n        text: \"top\",\n        id: \"top\"\n      },\n      recent: {\n        notdb: true,\n        text: \"recent\",\n        id: \"recent\"\n      },\n      all: {\n        notdb: true,\n        text: \"all\",\n        id: \"all\"\n      },\n\n      root: {\n        notdb: true,\n        text: \"\",\n        id: \"root\"\n      }\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\n\nDataManager.setCombined(\"ub.loaders.search\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  search: function () {\n    let items = {\n\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\nDataManager.setCombined(\"ub.mapView\", {\n  setup: function (args) {\n    this.wallet = {\n      items: {},\n      root: {\n        id: \"ant1\",\n        text: \"welcome\",\n        rels: { sub: {} },\n        type: \"map\",\n        notdb: true,\n      },\n      changed: {},\n      state: { nextId: 1 }\n    };\n\n    this.wallet.items.ant1 = this.wallet.root;\n\n    _.merge(this, args)\n\n    return this;\n  },\n  loadMap: function (id) {\n    let startIds = [id, \"info_\" + id]\n\n    let root = DataManager.getWallet(\"repo.root\")\n\n    let start = Promise.resolve();\n\n    if (root.id !== id) {\n      if (!root.notdb)\n        start = start.then(() => this.saveItems());\n\n\n      start = start.then(() => {\n        this.wallet.items = {}\n        this.wallet.root = {\n          id: id,\n          notdb: true,\n          rels: { sub: {} },\n        }\n        this.wallet.items[id] = this.wallet.root;\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n      })\n    }\n\n    start.then(() => this.tb.db.loadItems(startIds))\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0]) {\n          let item = items[0];\n          this.wallet.root = item;\n          if (true || !item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt)\n\n          let customTpl = {\n            logo: cu.brand.getLogo(item.id + item.startedAt, 10, 5)\n          }\n          let customMolds = cu.tplObjParse.run(customTpl);\n          DataManager.setCombined(\"customTpl\", customTpl);\n\n        }\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n  getItemsToSave: function () {\n    let changed = this.wallet.changed;\n    this.wallet.changed = {};\n\n    let items = [];\n    for (var i in changed) {\n      if (this.wallet.items[i].notdb) continue;\n      items.push(this.wallet.items[i])\n    }\n    return items;\n  },\n  saveItems: function () {\n    let items = this.getItemsToSave();\n    return this.tb.db.saveItems(this.uid, items);\n  },\n  generateId: function () {\n    return this.tb.state.getId();\n  },\n  mergeItem: function (id, value) {\n    if (!id) id = this.generateId();\n    if (!this.wallet.items[id]) this.wallet.items[id] = { id: id, createdAt: new Date().getTime() };\n    _.merge(this.wallet.items[id], value);\n    this.triggerChange(id);\n    return id;\n  },\n  mergeRoot: function (value) {\n    _.merge(this.wallet.root, value);\n    this.triggerChange(this.wallet.root.id);\n\n  },\n\n  triggerChange: function (id) {\n    this.wallet.changed[id] = true;\n    this.tb.db.request_save(this.uid, this);\n  },\n\n  setRel: function (rel, a, b, value) {\n    _.set(this.wallet.root, [\"rels\", rel, a, b], value);\n    this.triggerChange(this.wallet.root.id)\n  },\n\n})\nDataManager.setCombined(\"repo\", {\n  items: {},\n  root: {\n    id: \"ant1\",\n    text: \"welcome\",\n    rels: { sub: {} }\n  },\n  state: {\n    nextId: 2\n  }\n})\n\n\nDataManager.setCombined(\"antView.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      title: `<div >item : {value.text}</div>`,\n      item: `<div on_click={actions.select} antid={id}>item : {item.text}</div>`,\n      mapView: {\n        logo: cu.brand.getLogo(faker.company.catchPhrase(), 10, 5),\n\n        frame: `<div class='map'>{title} {content}\n\n        <style>\n          .map { font-size : 15px; margin : 10px;\n            line-height: 26px;\n            background : {colors.background}\n            }\n          .map * { font-size : 17px !important}\n          .map .title { font-size : 17px !important;}\n          .topic>.text { \n              border-bottom : 1px solid {root.brand.fadedColor} ; \n              display : inline-block;\n              padding-left : 5px;\n              padding-right: 25px;\n            }\n          .topic { \n            margin-bottom : 5px;\n            margin-top : 20px;\n            position : sticky;\n            top : 25px;\n            background : {colors.background};\n            z-index : 100\n          }\n\n          .card { \n            margin-bottom : 30px;\n          }\n          .content { margin-left : 10px; padding-left : 10px;}\n\n          .mapviewtitle { position:sticky; top : -30px; margin-bottom : 20px; background : {background}; z-index:200; } \n          .logo { display : inline-block; width : 50px; height : 50px; }\n\n          .selected.title::before { content : \"●\"; display:inline-block; margin-right : 5px; margin-left:5px; color : {root.brand.mainColor}; font-size: 0.7em !important; }\n\n          .title:active { transition: all 0.4s ease; background : #333 !important; }\n          .selected.content { \n            border-left :  1px dotted {root.brand.fadedColor};\n            padding-left:25px;\n            margin-bottom: 15px;\n          }\n\n          .selected.content::after {\n            content: \">\";\n            display: inline-block;\n            border-bottom: 1px dotted {root.brand.fadedColor} ;\n            overflow: hidden;\n            position: relative;\n            left: -25px;\n            padding-left : 10px;\n            top: 8px;\n            width: 20px;\n            margin: 0px;\n          }\n\n          .mapviewtitle { font-variant: petite-caps;}\n\n          polygon.poligon {\n            fill: {root.brand.mainColor} !important;\n          }\n\n          .handle { \n            display: inline-block;\n            font-variant: petite-caps;\n            font-size: 0.7em !important;\n            color: #999;          \n          }\n\n          .alert .poligon_2  {\n            animation: rotate_poligon 5s ease;\n          }\n          \n          @keyframes rotate_poligon {\n            0% {\n              opacity : auto\n            }\n            20% {\n              opacity : 0.2\n            }\n            70% {\n              opacity : 0.7\n            }\n            100% {\n              opacity : auto\n            }\n            \n          }\n\n          .crazy_animation { \n            transform-origin: center;\n            transform: rotate(360deg);\n            transform-box: fill-box;        \n          }\n\n          .info {\n            display: inline-block;\n            color: #ff8900;\n            border: 1px solid #ff8900;\n            text-align: -webkit-center;\n            width: 1.5em;\n            height: 1em;\n            border-radius: 10px;\n            margin-left: 5px;\n            overflow: hidden;\n            font-size: 0.6em !important;\n            vertical-align: middle;\n          }\n        </style>\n      </div>`,\n\n        title: `\n        <div class='mapviewtitle '> <div class='logo'>{logo}</div> <span on_click={actions.select} antid={id} >{item.text}</span></div>`,\n      },\n\n\n      map: {\n        topic: \"<div on_click={actions.select} antid={id} class='title topic {isSelected}'><span pin='title' class='text'>{handle} {item.text} </span></div>\",\n        item: \"<div on_click={actions.select} antid={id} class='title item {isSelected}' pin='title'>{handle} {item.text}</div>\",\n        entry: \"<div on_click={actions.select} antid={id} class='title entry {isSelected}' pin='title'>{handle} {item.text}</div>\",\n        other: `<div on_click={actions.select} antid={id} class='title {isSelected}' pin='title'>{handle} {item.text}</div>`,\n        card: `<div class='card {isSelected}'>{title} <div id='content' class='content {isSelected}'>{content}</div>{afterContent}</div>`,\n\n        button: \"<span class='button' on_click={actions.log}>?</span>\",\n        info: \"<span class='info' on_click={actions.goToInfo}>^</span>\",\n\n      },\n\n      handle: \"<span class='handle'>{handle}</span>\",\n\n      bridgeTitle: `<div>{value.text}</div>`,\n      frame: \"<div>{maptitle}{items}</div>\",\n\n      mapTitle: \"\"\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.map\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          uistate: \"repo.uistate\",\n          items: \"repo.items\",\n          root: \"repo.root\",\n          repo: \"repo\",\n          molds: \"antView.molds\",\n          customTpl: \"customTpl\"\n        }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"select\", \"antid\"], goToInfo: [\"goToInfo\", \"antid\"] } });\n\n        v.selected = v.uistate.selected;\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = [\"map.topic\", \"map.item\", \"map.entry\"]\n        v.cardMold = \"map.card\";\n        v.background = \"#eee\";\n\n        //v.button = cu.reactAssembler.run(v.molds.map.button, v);\n        v.info = cu.reactAssembler.run(v.molds.map.info, v);\n\n        v.colors = {\n          background: \"#eee\"\n        }\n\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      setV: function (value, v, memo) {\n        memo = memo || {};\n        for (var i in value) {\n          if (memo[i] === undefined)\n            memo[i] = v[i];\n          v[i] = value[i]\n        }\n\n        return memo;\n      },\n      cleanV: function (v, memo) {\n        for (var i in memo)\n          v[i] = memo[i];\n      },\n\n      getBody: function (v, id, sub) {\n        let list = this.getBodyList(v, id, sub);\n\n        let logo = v.customTpl.logo ? cu.reactAssembler.run(v.customTpl.logo, v) : \"\";\n        let memo = this.setV({ logo: logo, item: v.repo.root, id: v.repo.root.id }, v, memo)\n\n        let title = cu.reactAssembler.run(v.molds.mapView.title, v);\n        memo = this.setV({ content: list, title: title }, v, memo)\n        let node = cu.reactAssembler.run(v.molds.mapView.frame, v)\n        this.cleanV(v, memo);\n        return node;\n      },\n      getBodyList: function (v, id, sub) {\n        let related = sub[id];\n\n        if (!related) return null;\n        if (v.level > 5) return null;\n        let level = v.level != undefined ? v.level + 1 : 0\n\n        let list = [];\n        let memo = this.setV({\n          id: null,\n          item: null,\n          level: 0,\n          isSelected: null,\n          content: null,\n          title: null,\n          handle: null,\n          afterContent: null\n        }, v, memo);\n\n\n        let count = 1;\n        for (var i in related) {\n\n          Object.assign(v, {\n            id: i,\n            item: v.items[i],\n            level: level,\n            isSelected: v.selected == i ? \"selected\" : \"\",\n            count: count,\n            afterContent: null\n          })\n\n          let item = this.getItem(v, sub);\n          list.push(item);\n\n          count++;\n        }\n\n        this.cleanV(v, memo);\n        return list;\n      },\n\n      getHandle: function (v, level, count) {\n        let handle;\n        if (level == 0) {\n          handle = String.fromCharCode(64 + count) + \".\"\n        }\n\n        else if (level == 1) {\n          handle = count + \".\";\n        }\n        else if (level == 2) {\n          handle = \"▪\"\n        }\n        else {\n          handle = \"- \"\n        }\n\n        if (handle == undefined) return \"\";\n\n        let node = cu.reactAssembler.run(v.molds.handle, { handle: handle });\n\n        return node;\n      },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n\n        if (!moldName) moldName = v.otherTpl;\n        let titleMold = _.get(v.molds, moldName);\n\n\n        v.handle = this.getHandle(v, v.level, v.count);\n\n        v.title = cu.reactAssembler.run(titleMold, v);\n\n        /*\n        let titlePath = titleMold.mold.pins.title;\n        let title;\n        if (titlePath.length) title = _.get(v.title, titlePath);\n        else title = v.title;\n        if (!title.children) title.children = [];\n        title.children.push(v.button);\n        */\n\n        if (v.item.hasInfo) {\n\n          let titlePath = titleMold.mold.pins.title;\n          let title;\n          //v.title = _.cloneDeep( v.title );\n          if (titlePath.length) title = _.get(v.title, titlePath);\n          else title = v.title;\n          if (!title.children) title.children = [];\n\n\n          title.children.push(v.info)\n        }\n\n\n        v.content = this.getBodyList(v, v.id, sub);\n\n        if (v.isSelected && !v.content) v.content = [];\n\n\n        let node;\n        if (v.content) {\n          let cardMold = _.get(v.molds, v.cardMold);\n\n          node = cu.reactAssembler.run(cardMold, v)\n        }\n        else node = v.title;\n\n        return node;\n      },\n\n\n\n    }\n  }\n})\n\n\nDataManager.setCombined(\"antViewBridge.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      root: {\n        bridge: `<div class='bridge'>{content}</div>`,\n        card: `<div class='card'><div class='title'><span>{item.text}</span></div> <div class='content'>{content}</div></div>`,\n        item: `<div class='title item' antid='{id}' on_click='{actions.select}' style='--color:{item.brand.mainColor}'>{item.text}</div>`,\n        style: `\n          <style>\n            .title { \n              margin-bottom : 5px;\n              padding-left : 4px;\n            }\n            .item.title::before { \n              color : var(--color);\n              content : '𝌇';\n              display : inline-block;\n              padding-right : 5px; \n            }\n\n            .item.title:active { transition: all 0.4s ease; background : #333 !important; }\n\n\n            .card {\n              margin : 20px 10px;\n            \n              border : 1px solid {brand.borderColor};\n\n              padding : 10px;\n            }\n            .bridge { font-size : 18px; margin : 10px;\n              line-height: 25px;\n              }\n\n            .card>.content { \n            }\n            .card>.title{\n              position: sticky;\n              top: 0px;\n              background : {brand.background};\n              padding-bottom : 10px;\n\n            }\n\n            .card>.title>span{ \n              border-bottom : 1px solid {brand.borderColor};\n              width : fit-content;\n              padding-left: 5px;\n              padding-right : 24px;\n              padding-bottom : 5px;\n              display : inline-block;\n              font-variant: petite-caps;\n            }\n          </style>\n        `\n      },\n    }\n  }\n})\n\n\nDataManager.setCombined(\"ub.actions\", {\n\n  setup: function (ctx, tb) {\n    let item = Object.create(this);\n    item.ctx = ctx;\n    item.state = {\n      nextId: 1, skiped: {}\n    }\n    item.tb = tb;\n\n    return item;\n  },\n  loadItem: function (op) {\n    let master = this;\n    this.tb.db.loadItems([op.id]).then(item => {\n      if (op.pin)\n        master.putValue(op.pin, item[0])\n    })\n  },\n\n  loadItems: function (op) {\n    let master = this;\n    this.tb.db.loadItems(op.ids).then(item => {\n      if (op.pin)\n        master.putValue(op.pin, item)\n    })\n  },\n\n  searchText: function (op) {\n    let master = this;\n    this.tb.db.searchText(op.text).then(item => {\n      if (op.pin)\n        master.putValue(op.pin, item)\n    })\n  },\n\n  runTriggers: function (triggers, value, isPartial) {\n    triggers(value, isPartial)\n  },\n\n  putValue: function (path, value, isPartial) {\n    _.set(this.ctx.data, path, value);\n\n    if (this.ctx.triggers[path]) {\n      this.runTriggers(this.ctx.triggers[path], value, isPartial)\n    }\n\n    if (isPartial) return;\n\n    if (this.state.running) {\n      this.state.shouldRerun = true;\n    }\n    else {\n      this.runAllOps();\n    }\n  },\n\n  prepareOp: function (op) {\n    let args = {};\n    for (var i in op.input) {\n      if (i == \"type\") args.type = op.input[i];\n      else if (!_.isString(op.input[i])) args[i] = op.input[i]\n      else {\n        let value = _.get(this.ctx.data, op.input[i]);\n        if (value === undefined) {\n          if (!op.partial)\n            return null;\n          else {\n            if (!args.missing) args.missing = [];\n            args.missing.push(i);\n          }\n        }\n        else args[i] = value;\n      }\n    }\n    for (var i in op) {\n      if (i != \"input\")\n        args[i] = op[i]\n    }\n\n    return args;\n  },\n  runOp: function (op) {\n    if (!op.uid) op.uid = \"op_\" + this.state.nextId++;\n    let args = this.prepareOp(op);\n    if (args === null) {\n      return \"notcomplete\";\n    }\n\n    let value = this[args.type](args, op);\n\n    if (value === \"notcomplete\") return \"notcomplete\";\n  },\n\n  runAllOps: function () {\n    let ncOps = [];\n\n    this.state.running = true;\n    this.state.shouldRerun = false;\n\n\n    for (var i in this.ctx.ops) {\n      let op = this.ctx.ops[i];\n      let value = this.runOp(op);\n      if (value === \"notcomplete\") ncOps.push(op)\n      else this.state.shouldRerun = true;\n    }\n\n    this.ctx.ops = ncOps;\n\n    this.state.running = false;\n\n    if (this.state.shouldRerun) {\n      this.state.shouldRerun = false;\n      this.runAllOps()\n    }\n\n  },\n\n  fn: function (op) {\n    let result = op.fn(op, this);\n\n    if (result === \"notcomplete\") return result;\n\n    if (op.pin) {\n      this.putValue(op.pin, result)\n    }\n  },\n\n  assembleObj: function (args, op) {\n    let obj = {};\n\n    for (var i in op.input) {\n      obj[i] = args[i]\n    }\n\n    if (op.partial && args.pin && args.missing) {\n\n      if (!this.state.skiped[op.uid]) this.state.skiped[op.uid] = { missing: [] }\n\n\n      obj.partial = true;\n\n      if (_.isEqual(args.missing, this.state.skiped[op.uid].missing)) {\n        return \"notcomplete\";\n      }\n      else\n        this.state.skiped[op.uid].missing = args.missing;\n\n\n\n      this.putValue(args.pin, obj, args.missing ? \"skipRerun\" : false)\n    }\n\n    else if (args.pin && !args.missing)\n      this.putValue(args.pin, obj)\n\n    if (args.missing) return \"notcomplete\";\n\n  },\n\n  listTemplate: function (v, master) {\n    let list = [];\n\n    for (var i in v.list) {\n      let item = cu.moldAssembler.run(v.tpl, v.list[i]);\n      list.push(item)\n    }\n\n\n    if (v.pin) {\n      this.putValue(v.pin, list)\n    }\n\n  },\n\n  useTpl : function (v, master) {\n    let list = [];\n\n    let item = cu.moldAssembler.run(v.tpl, v);\n\n\n    if (v.pin) {\n      this.putValue(v.pin, item)\n    }\n\n\n    return item;\n  },\n\n})\n\nDataManager.setCombined( \"ub.values\",  {\n  setup : function ( opts ) {\n    Object.assign( this, opts )\n  },\n\n  set : function ( path, value ) {\n    _.set( this.data, path, value )\n  },\n  get : function ( path ) {\n    return _.get( this.data, path);\n  }\n})\n\nDataManager.setCombined(\"ub.loaders.hud\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  load: function (cfg) {\n    let repo = {};\n\n    let tpls = {\n      isCollection: true,\n      search: {\n        highlight: \"{highlighting.text}\",\n        text : \"{doc.text}\",\n        id: \"{doc.id}\",\n        mapId: \"{doc.mapId}\",\n        started: \"{doc.startedAt}\",\n        type: \"{doc.type}\",\n        score: \"{score}\"\n      }\n    }\n\n    let molds = cu.tplObjParse.run(tpls);\n\n    let data = {\n      antId: \"ant_10\",\n\n      cfg : cfg, \n\n      makeStats: function (v, master) {\n        let stats = {};\n\n        let subs = v.map.rels.sub;\n        let currentId = v.root.id;\n\n        let count = 0;\n\n        count += Object.keys(subs[currentId] || {}).length;\n\n        return { directSubs: count, created: v.root.placedAt }\n      },\n\n      tpls: molds,\n\n    }\n\n    let ctx = {};\n    ctx.data = data;\n    ctx.triggers = this.triggers;\n\n    ctx.ops = [\n      { type: \"loadItems\", input: { ids: \"infoIds\" }, pin: \"infos\" },\n      { type: \"loadItem\", input: { id: \"cfg.antId\" }, pin: \"root\" },\n      { type: \"loadItem\", input: { id: \"root.mapId\" }, pin: \"parentMap\" },\n      { type: \"loadItem\", input: { id: \"statsId\" }, pin: \"stats\" },\n      {\n        type: \"fn\", input: { info: \"parentMap.rels.info\", antId: \"cfg.antId\" },\n        fn: op => Object.keys(op.info[op.antId] || {}), pin: \"infoIds\"\n      },\n      { type: \"fn\", input: { root: \"root\", map: \"parentMap\", fn: \"makeStats\" }, pin: \"stats\" },\n      { type: \"searchText\", input: { text: \"root.text\" }, pin: \"searchResultsRaw\" },\n      { pin: \"outcome\", partial: true, type: \"assembleObj\", input: { root: \"root\", stats: \"stats\", \"matches\": \"searchResults\" } },\n      { pin: \"searchResults\", input: { tpl: \"tpls.search\", list: \"searchResultsRaw.rows\" }, type: \"listTemplate\" }\n    ]\n    let actions = this.tb.actions.setup(ctx, this.tb)\n\n    actions.runAllOps();\n  },\n})\n\n\nDataManager.setCombined(\"ub.view.hud\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n\n  tpls : {\n    frame : `<div>Salut frame {itemTitle} {results} </div>`, \n    itemTitle : `<div class='reveal'>test {item.text} <div class='time'>{created_on}</div></div>`,\n    stats : ``,\n\n    resultSection : `<div class='reveal' >With these words {content}</div>`,\n    resultItem : `<div antid='{id}'>{text}</div>`\n  },\n  load: function (input) {\n    let repo = {};\n\n    let molds = cu.tplObjParse.run(_.cloneDeep( this.tpls)) ;\n\n    let data = {\n      antId: \"ant_10\",\n\n      tpls: molds,\n\n      input : input, \n\n    }\n\n    let ctx = {};\n    ctx.data = data;\n    ctx.triggers = this.triggers;\n\n    ctx.ops = [\n      {type : \"fn\", input : { date : \"input.root.placedAt\"}, fn : v => moment(v.date).calendar(), pin : \"created_on\"},\n      { type: \"useTpl\", input: { tpl: \"tpls.frame\" , itemTitle : \"itemTitle\", results : \"section.results.nodes\"}, pin: \"outcome\" },\n      { type: \"useTpl\", input: { tpl : \"tpls.itemTitle\", item : \"input.root\", created_on : \"created_on\"}, pin: \"itemTitle\" },\n\n\n      {type : \"useTpl\", input : {tpl : \"tpls.resultSection\", content : \"section.results.content\"}, pin : \"section.results.nodes\"},\n      {type :\"listTemplate\", input : {tpl : \"tpls.resultItem\", list : \"input.matches\"}, pin : \"section.results.content\"}\n    ]\n\n\n    let actions = this.tb.actions.setup(ctx, this.tb)\n\n    actions.runAllOps();\n  },\n})\n\n\nDataManager.setCombined(\"antsView.hudPanel\", {\n  cfg : {\n    antId : \"ant_10\"\n  },\n  nodes: {\n    loader: {\n\n      updateVersionsMap : true,\n      get: function (tb, v) {\n\n\n        tb.fetch( { cfg : \"antsView.hudPanel.cfg\" }, v );\n\n        let ub = this.getUb(tb)\n\n        console.log( ub.values.get( \"loaded\") );\n        \n        //*\n        if ( !ub.values.get( \"loaded\") ) {\n          ub.values.set( \"hudData\", null)\n          ub.values.set( \"cfg\", v.cfg);\n          ub.hudData.load( ub.values.get( \"cfg\"))\n          ub.values.set( \"loaded\", 1)\n        }\n        else if ( !_.isEqual( ub.values.get(\"cfg\"), v.cfg) ) {\n          ub.values.set( \"cfg\", v.cfg);\n          ub.values.set( \"hudData\", null)\n          ub.values.set( \"node\", null)\n\n          ub.hudData.load( ub.values.get( \"cfg\"))\n        }\n        //*/\n\n        ub.hudView.load(ub.values.get( \"hudData\"));\n\n\n        console.log( \"loaded\", ub.values.get( \"hudData\") );\n\n\n        let node = ub.values.get( \"node\" );\n\n        return node || \"\";\n      },\n      getUb: function (tb) {\n        if (tb.cache.ub) return tb.cache.ub;\n\n        var ub = myUB.fnsub.detach();\n\n        let path = tb.path();\n        console.log( path)\n        let values = {\n          hudData: {}\n        }\n\n\n        ub.fnsub.addUb([\n          \"db\",\n          {name : \"values\", path : \"ub.values\", extra : {\n            data : values\n          }},\n\n          { name: \"loaderActions\", path: \"ub.actions\", extra: {} },\n\n          {\n            name: \"hudData\", path: \"ub.loaders.hud\", extra: {\n              \"tb.db\": \"db\",\n              \"tb.actions\": \"loaderActions\",\n              \"triggers\": {\n                outcome: (result, partial) => {\n                  console.log ( \"outcom\", result)\n                  ub.values.set( \"hudData\", result )\n                  DataManager.markChangeOn( path, false, true );\n                  //values.hudData = result;\n\n                }\n              }\n            },\n\n\n          },\n\n          { name: \"viewActions\", path: \"ub.actions\", extra: {} },\n\n          {\n            name: \"hudView\", path: \"ub.view.hud\", extra: {\n              \"tb.actions\": \"viewActions\",\n              \"triggers\": {\n                outcome: (result, partial) => {\n\n                  console.log( \"salut\", result)\n                  ub.values.set( \"node\", result )\n                  DataManager.markChangeOn( path, false, true );\n                }\n              }\n            }\n          }\n        ])\n\n        tb.cache.ub = ub;\n\n\n        return ub;\n      }\n    }\n  }\n})\n\nDataManager.setCombined(\"antView.bridge\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          items: \"bridgeRepo.items\",\n          root: \"bridgeRepo.root\",\n          repo: \"bridgeRepo\",\n          molds: \"antViewBridge.molds\"\n        }, v);\n\n\n        this.addVFn(v);\n\n        v.tplSpecs = {\n          byLevel: [\"root.bridge\", \"root.card\", \"root.item\"],\n\n        }\n\n        v.brand = {\n          borderColor: \"#333\",\n          background: \"#eee\"\n        }\n\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"selectMap\", \"antid\"] } });\n\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = []\n        v.defaultTpl = {\n          card: \"root.card\",\n          title: \"root.title\"\n        }\n        v.cardMold = \"map.card\";\n        v.background = \"#eee\";\n        v.level = 0;\n        v.subs = v.root.rels.sub;\n\n        v.id = \"root\";\n        v.item = v.root;\n\n        let node = this.makeItem(v);\n\n        let style = cu.reactAssembler.run(v.molds.root.style, v)\n\n        return [node, style];\n      },\n\n      makeItem: function (v) {\n        let moldName = v.mold || v.tplSpecs.byLevel[v.level];\n        if (!moldName) console.error(\"no mold\", v);\n        let mold = _.get(v.molds, moldName);\n\n        let params = mold.mold.parameters;\n\n\n        if (params.content) {\n          let collection = v.subs[v.id];\n          let level = v.level + 1;\n          v.content = this.makeList(v, collection, (value, i) => {\n            return {\n              id: i,\n              item: v.items[i],\n              level: level\n            }\n          })\n        }\n\n\n        let node = cu.reactAssembler.run(mold, v)\n\n        return node;\n      },\n\n\n      makeList: function (v, collection, prepare) {\n        let list = [];\n        v.stack();\n\n        for (var i in collection) {\n          v.set(prepare(collection[i], i));\n          let node = this.makeItem(v);\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n\n      addVFn: function (v) {\n        v.set = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n\n        }\n\n        v.get = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n        }\n\n        v.clean = function () {\n          let v = this;\n          let memo = v.memo;\n\n          for (var i in memo)\n            v[i] = memo[i];\n\n          v.memo = v.stacks.pop();\n        }\n\n        v.stack = function () {\n\n          let v = this;\n\n          if (!v.stacks) v.stacks = [];\n\n          v.stacks.push(v.memo);\n\n          v.memo = {};\n        }\n\n\n      },\n\n\n    }\n  }\n})\n\nDataManager.setCombined(\"dbSavings\", {\n  items: {\n    /*\n    repoitems: { path: \"repo.items\", onload: [\"repo\", \"evaluateflow\"] },\n    bubblestate: \"repo.state\",\n    antsitems: \"repo.ants\",\n    */\n  }\n})\n\nDataManager.setCombined(\"tb.persisitence\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    window.onbeforeunload = () => { return this.saveAll() };\n    this.loadAll();\n\n  },\n\n  request_save: function () {\n    if (this.timer) window.clearTimeout(this.timer);\n\n    this.timer = window.setTimeout(() => {\n      this.saveAll()\n    }, 60000)\n  },\n\n  saveAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items\n    let savings = []\n    for (var i in tosave) {\n      savings.push(this.saveitem(i, tosave[i]))\n    }\n\n  },\n  saveitem: function (id, target) {\n    let path = target.path || target;\n    let repo = DataManager.getWallet(path);\n    return this.db.save({ repo }, id)\n  },\n\n  loadAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items;\n\n    for (var i in tosave)\n      this.loaditem(i, tosave[i]);\n  },\n\n  loaditem: function (id, target) {\n    let path = target.path || target;\n    let onload = target.onload || null;\n    this.db.load(id).then((items) => {\n      if (items && items.repo) DataManager.set(path, items.repo)\n      if (onload) DataManager.runOn(onload[0], onload[1])\n    })\n  },\n\n  starter: {\n    loader: {\n      autostart: true,\n      get: (tb) => {\n        if (tb.cache.done) return 1;\n        tb.cache.done = true;\n        let v = tb.fetch({ tb: \"tb.persisitence\" });\n        v.tb.setup();\n\n        return 1;\n      }\n    }\n  }\n\n})\n\n\n\n\nDataManager.setCombined(\"ui.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      main: `\n          <div id='frame'>\n            <div id='easel'>{view}</div>\n            {overPanel.frame}\n            <div id='bar'>\n              <div id='menu'>{menu}</div>\n              <myinput id='order' auto_complete=\"off\" value={order.value} on_key_press={order.place} on_change={order.change}></myinput>\n              <div id='bumb' on_click='{bumb.action}'>{picture}</div>\n            </div>\n          </div>\n          <style>\n            * { box-sizing : border-box; max-height: 40000em;}\n            body , window, html {\n              color : {textColor};\n              height : 100%; width : 100%; background : {background} }\n            #frame { height : 100%; width : 100%;}\n            #frame { display : flex; flex-direction : column; }\n            #easel { flex : 1; overflow : auto; }\n            #overPanel { position : absolute;left : 0; top : 0; z-index : 200;}\n            \n            #bar   { position : relative; border-top: 1px solid #999; width : 100%; flex-basis : {dim.barHeight}px ; display : flex;flex-direction:row; }\n            #menu  { position: absolute;  bottom: 50px; }\n            #order {  padding-left : 10px; outline: none; flex : 1; border : 0px none transparent; width: 100%;}\n            #bumb  { flex-basis : {dim.barHeight}px; background : {color} } \n\n\n            @keyframes salut {\n              0% { border : 0px solid red;}\n              100% { border : 10px solid red;}\n            }\n\n            @keyframes enter {\n              0% { opacity : 0.5; transform : translateY( 5px ); }\n              100% { opacity : 1; transform : translateY( 0px ); }\n            }\n\n\n            @keyframes reveal {\n              0% { opacity : 0.7; transform : translateY( -5px ); }\n              100% { opacity : 1; transform : translateY( 0px ); }\n            }\n\n\n            #easel>div { animation: enter 0.5s ease; }\n            .reveal { animation: enter 0.5s ease; }\n\n            </style>\n          \n  `,\n\n  overPanel : \"<div id='overPanel'>{overPanel.panel}</div>\",\n      bubbleitem: `<div on_click={selectitem} targetid={targetid}>{label}</div>`,\n\n      menuitem: `<div>{label}</div>`\n\n    }\n  }\n})\n\nDataManager.setCombined(\"workingant\", {\n  data: {\n    input: { text: \"\" },\n    currentView: 'main',\n\n    selected: \"\"\n  }\n})\n\n\nDataManager.setCombined(\"antsFrame.ui\", {\n  loader: {\n    paths: { molds: \"ui.molds\", orderText: \"workingant.data\", node: \"antsFrame.prepare\" },\n    get: function (tb, v) {\n\n      tb.fetch(this.paths, v);\n\n      _.set(v.node, v.molds.main.mold.pins.order.concat([\"props\", \"value\"]), v.orderText.input)\n\n      return v.node;\n    }\n  }\n\n})\n\nDataManager.setCombined(\"workingant.viewState\", {\n  path: \"antView.map.nodes\"\n})\n\nDataManager.setCombined(\"antsFrame.prepare\", {\n  loader: {\n    paths: { molds: \"ui.molds\", data: \"bubbles.data\", repo: \"repo\", viewState: \"workingant.viewState\" },\n    get: function (tb, v) {\n      tb.fetch(this.paths, v);\n\n      tb.fetch({ view: v.viewState.path }, v)\n\n\n      let store = cu.store.get(tb, hapi,\n        { change: { changeOrder: \"workingant.data.input\" }, run: { bumbAction: \"showhud\", placeOrder: \"placeorder\" } });\n\n      v.dim = {\n        window: {\n          height: \"400\",\n          width: \"200\",\n        },\n        barHeight: \"40\"\n      }\n\n      v.data = {\n        label: \"main\",\n        bubbleList: \"TestList\",\n        order: {\n          change: store.changeOrder,\n          place: store.placeOrder\n        },\n        bumb: {\n          action: store.bumbAction\n        },\n        dim: v.dim,\n\n        view: v.view,\n\n        color: \"#999\",\n        background: \"#eee\",\n        textColor: \"#222\",\n\n        menu: []\n      }\n\n      for (var i in v.viewState.overPanel) {\n        if (v.viewState.overPanel[i]) {\n          v.data.overPanel = tb.fetch({ panel: v.viewState.overPanel[i] })\n          v.data.overPanel.frame = cu.reactAssembler.run( v.molds.overPanel, v.data)\n        }\n      }\n\n      v.node = cu.reactAssembler.run(v.molds.main, v.data)\n      return v.node;\n    },\n    autostart: true\n  }\n})\n\n\n\nDataManager.setCombined(\"test\", {\n  loader: {\n    get: function () {\n      //myUB.mapview.loadMap(\"ant1\")\n      myUB.bridgeLoader.loadBridge();\n    },\n    autostart: true\n  }\n})\n\n//DataManager = window._DataManager.setup();\nDataManager.historyManager.recording = false;\nDataManager.runToStart();\n//------------------\n\n\n\nclass Frame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  path = \"antsFrame.ui\"\n\n  componentDidMount() {\n    DataManager.setTrigger(this.path, \"asd\", {\n      run: () => {\n        this.setState({ \"version\": new Date().getTime() })\n      }\n    })\n  }\n\n  componentDidUpdate() {\n    myUB.afterRenderActions.runAll();\n  }\n\n  render() {\n    let components = DataManager.getValue(this.path);\n    let node = cu.reactUtils.makeComponent(components || []) || \"empty\";\n    return node\n  }\n}\n\n\n\nclass FlatAnt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: { scode: \"salut\" }\n    }\n  }\n\n  _style() {\n    return `\n      html, window, body{ width : 100%; height : 100%; overflow : auto; padding: 0px; margin:0px;}\n      #root, .main { width : 100%; height : 100%;}\n      \n\n.node {\n  stroke: #fff;\n  stroke-width: 1.5px;\n}\n\n.link {\n  fill: none;\n  stroke: blue;\n  stroke-width: 1.5px;\n  opacity: 0.4;\n  marker-end: url(#end-arrow);\n}\n\n    `\n  }\n\n  render() {\n    let style = this._style();\n    let components = [\n      //<TreeDiagram />,\n      <Frame key=\"1\"></Frame>\n    ]\n    return [\n\n      <style>{style}</style>,\n      components]\n      ;\n  }\n}\n\nexport default FlatAnt;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager.js\";\n\nimport FlatAnt from \"./FlatAnt2\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = <FlatAnt />\n    return content;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","var historyManager = {\n  setup: function setup(info) {\n    var item = Object.create(this);\n    item.wallet = {\n      currentStack: {\n        info: [{\n          type: \"startedWith\",\n          info: info\n        }]\n      },\n      stacks: []\n    };\n    item.recording = true;\n    item.wallet.stacks.push(item.wallet.currentStack);\n    return item;\n  },\n  startStack: function startStack(info) {\n    if (!this.recording) return;\n    var stack = {\n      info: [],\n      prevStack: this.wallet.currentStack,\n      index: this.wallet.stacks.length,\n      start: info\n    };\n    this.addInfo({\n      type: \"subStack\",\n      stack: stack\n    }, true);\n    this.wallet.stacks.push(stack);\n    this.wallet.currentStack = stack;\n    if (info) this.addInfo(info);\n  },\n  addInfo: function addInfo(info, skipClone) {\n    if (!this.recording) return;\n    if (!skipClone) info = _.cloneDeep(info);\n    this.wallet.currentStack.info.push(info);\n  },\n  endStack: function endStack(info) {\n    if (!this.recording) return;\n    if (info) this.addInfo(info);\n    this.wallet.currentStack = this.wallet.currentStack.prevStack;\n  }\n};\nvar _DataManager = {\n  setup: function setup() {\n    var item = Object.create(this);\n    item.state = {\n      ctx: {},\n      gettingValue: {},\n      wallet: {},\n      meta: {},\n      cache: {},\n      version: {},\n      loadersCache: {},\n      triggers: {},\n      currentVersion: 1,\n      dependencies: {},\n      nextUID: 1,\n      agenda: {\n        names: {},\n        tasks: []\n      },\n      pins: {},\n      toStart: [],\n      flags: {}\n    };\n    item.historyManager = historyManager.setup(this);\n    return item;\n  },\n  state: {\n    gettingValue: {},\n    wallet: {},\n    meta: {},\n    cache: {},\n    version: {},\n    loadersCache: {},\n    triggers: {},\n    currentVersion: 1,\n    dependencies: {},\n    nextUID: 1,\n    agenda: {\n      names: {},\n      tasks: []\n    },\n    pins: {},\n    toStart: [],\n    flags: {}\n  },\n  setCtx: function setCtx(basePath, ctxPath, value, names) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    if (!ctx) _.set(this.state.ctx, [basePath, \"ctx\"].join(\".\"), ctx = {\n      names: []\n    });\n\n    _.set(ctx, ctxPath, value);\n\n    ctx.names.push({\n      names: names,\n      path: ctxPath\n    });\n  },\n  getCtx: function getCtx(basePath, name) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    ;\n    if (!ctx) return null;\n    var ctxPath;\n\n    for (var i in ctx.names) {\n      if (ctx.names[i].names.indexOf(name) != -1) {\n        ctxPath = ctx.names[i].path;\n        break;\n      }\n    }\n\n    if (!ctxPath) return null;\n\n    var target = _.get(ctx, ctxPath);\n\n    return target;\n  },\n  runOn: function runOn(basePath, name, args) {\n    var target = this.getCtx(basePath, name);\n    if (!target) return null;\n    return target[name](args);\n  },\n  runFn: function runFn(path, args) {\n    var route = path.split(\".\");\n    var fnName = route.pop();\n    var targetPath = route.join(\".\");\n    var target = this.getValue(targetPath);\n    if (!target[fnName]) return undefined;\n\n    if (_.isFunction(target[fnName])) {\n      return target[fnName](args, path, this);\n    } else if (_.isFunction(target[fnName].run)) {\n      return target[fnName].run(args, path, this);\n    }\n  },\n  getInfluenced: function getInfluenced(path) {\n    var influenced = [];\n\n    var dep = _.get(this.state.dependencies, path + \".DEP\");\n\n    if (!dep) return [];\n\n    for (var i in dep) {\n      influenced.push(i);\n      influenced = influenced.concat(this.getInfluenced(i));\n    }\n\n    return influenced;\n  },\n  getValue: function getValue(path, skipPartialValueCheck) {\n    var route = path.split(\".\");\n    var value = this.checkCache(path);\n    if (value) return value;\n    if (!skipPartialValueCheck) for (var i = 0; i < route.length; i++) {\n      var partialPath = route.slice(0, i).join(\".\");\n\n      if (this.state.gettingValue[partialPath]) {\n        var partialResult = this.state.gettingValue[partialPath].partialResult;\n        var partialSlot = route.slice(i);\n\n        var partialValue = _.get(partialResult, partialSlot);\n\n        if (partialValue !== undefined) return partialValue;\n      }\n    }\n    this.state.gettingValue[path] = true;\n    var list = this.makeList(path);\n    value = this.listToValue(list, path);\n    delete this.state.gettingValue[path];\n\n    if (value !== undefined) {\n      // let shouldUpdate = (  list.length == 1 && list[0].src == \"wallet\" )\n      this.setCache(path, value); //, shouldUpdate);\n      //this.diffCache( oldCache, path );\n    }\n\n    return value;\n  },\n  setCache: function setCache(path, value, shouldUpdate) {\n    this.state.cache[path] = {\n      value: value,\n      shouldUpdate: shouldUpdate || false,\n      version: this.state.currentVersion\n    };\n  },\n  checkCache: function checkCache(path, ignoreUpdates) {\n    if (!this.state.cache[path]) return null;\n    if (ignoreUpdates) return this.state.cache[path].value;\n    if (this.state.cache[path].shouldUpdate) return null;\n    return this.state.cache[path].value;\n  },\n  prepareCache: function prepareCache(path) {\n    var cache = this.state.loadersCache[path];\n\n    if (!cache) {\n      cache = this.state.loadersCache[path] = {\n        old: {},\n        contains: {},\n        dependsOn: {}\n      };\n    }\n\n    var old = {\n      contains: cache.contains || {},\n      dependsOn: cache.dependsOn || {}\n    };\n    cache.old = old;\n    delete cache.contains;\n    delete cache.dependsOn;\n    return old;\n  },\n  diffCache: function diffCache(oldCache, path) {\n    if (!this.state.loadersCache[path]) this.state.loadersCache[path] = {};\n    var cache = this.state.loadersCache[path] || {};\n    var dependencies = this.state.dependencies;\n\n    var addDependency = function addDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) _.set(dependencies, a + \".DEP\", dep = {});\n      dep[b] = true; //_.set( dependencies, a + \".DEP\",dep );\n    };\n\n    var remDependency = function remDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) return;\n      delete dep[b];\n    };\n\n    var check = function check(newC, oldC) {\n      for (var i in newC) {\n        if (!oldC || !oldC[i]) addDependency(i, path);\n      }\n\n      for (var i in oldC) {\n        if (!newC || !newC[i]) remDependency(i, path);\n      }\n    };\n\n    check(cache.contains, oldCache.contains);\n    check(cache.dependsOn, oldCache.dependsOn);\n  },\n  updateVersionsMap: function updateVersionsMap(path) {\n    var cache = this.state.loadersCache[path] || {};\n    var depOn = cache.dependsOn;\n\n    for (var i in depOn) {\n      var currentVersion = this.getVersion(i);\n      depOn[i].version = currentVersion;\n    }\n  },\n  makeList: function makeList(path) {\n    var list = [];\n    var route = path.substr ? path.split(\".\") : path;\n\n    var walletValue = _.get(this.state.wallet, path);\n\n    if (walletValue !== undefined) {\n      if (!_.isObjectLike(walletValue)) {\n        list.push({\n          src: \"wallet\",\n          value: walletValue,\n          path: [],\n          srcPath: path,\n          version: 1\n        });\n        return list;\n      }\n\n      walletValue = _.cloneDeep(walletValue);\n      list.push({\n        src: \"wallet\",\n        value: walletValue,\n        path: [],\n        srcPath: path,\n        version: 1\n      });\n    }\n\n    var meta = this.state.meta;\n\n    for (var i = 0; i < route.length; i++) {\n      if (!meta) break;\n\n      if (meta.loader) {\n        var item = {\n          src: \"root\",\n          loader: meta.loader,\n          path: [],\n          srcPath: route.slice(0, i),\n          select: route.slice(i)\n        };\n        list.push(item);\n      }\n\n      meta = meta[route[i]];\n    }\n\n    var rootPath = route;\n\n    var iterate = function iterate(obj, route, list) {\n      if (!obj) return;\n\n      if (obj.loader) {\n        var _item = {\n          src: \"sub\",\n          loader: obj.loader,\n          path: route,\n          srcPath: rootPath.concat(route)\n        };\n        list.push(_item);\n      }\n\n      for (var _i in obj) {\n        if (_i == \"loader\") continue;\n        iterate(obj[_i], route.concat(_i), list);\n      }\n    };\n\n    iterate(meta, [], list);\n    return list;\n  },\n  silentSet: function silentSet(path, value, skipPathAffected) {\n    this.historyManager.addInfo({\n      type: \"silentSet\",\n      path: path,\n      value: value\n    });\n\n    _.set(this.state.wallet, path, value);\n\n    if (this.state.cache[path]) this.state.cache[path].shouldUpdate = true;\n    if (!skipPathAffected) this.getAffectedPaths(path);\n  },\n  listToValue: function listToValue(list, path) {\n    if (list.length == 1 && list[0].value) return list[0].value;\n    var result = {};\n    this.state.gettingValue[path] = {\n      partialResult: result\n    };\n    var postponedSteps = list;\n    var hasSteps = true;\n    var snoozeCount = 0;\n\n    while (hasSteps) {\n      snoozeCount++;\n\n      if (snoozeCount > 5) {\n        //console.log( \"postponed more than 5 times\", path, result, _.cloneDeep( this.state.gettingValue ) );\n        this.state.cache[path].shouldUpdate = true;\n        return result;\n      }\n\n      list = postponedSteps;\n      postponedSteps = [];\n      hasSteps = false;\n\n      for (var i = 0; i < list.length; i++) {\n        var step = list[i];\n        var value = void 0;\n\n        if (step.value) {\n          value = step.value;\n        } else if (step.loader) {\n          try {\n            value = this.getFromLoader(step, result, path);\n          } catch (e) {\n            if (e == \"postpone\") {\n              this.state.cache[path].shouldUpdate = true;\n              postponedSteps.push(step);\n              hasSteps = true;\n            } else {\n              console.error(e);\n            }\n\n            continue;\n          }\n        }\n\n        if (step.select) value = _.get(value, step.select);\n\n        if (step.path.length) {\n          _.set(result, step.path, value);\n        } else {\n          if (Object.values(result).length == 0) {\n            result = value;\n          } else //console.log( \"merging\" , _.cloneDeep( result ), value, result);\n            _.merge(result, value);\n        }\n      }\n    }\n\n    return result;\n  },\n  loadersCache: {},\n  addLog: function addLog(lhs, rel, rhs, value) {\n    if (!this.state.loadersCache[lhs]) this.state.loadersCache[lhs] = {\n      version: this.state.currentVersion,\n      cachedValue: {}\n    };\n    var xcache = this.state.loadersCache[lhs];\n    if (!xcache[rel]) xcache[rel] = {};\n    xcache[rel][rhs] = value || true;\n  },\n  getFromLoader: function getFromLoader(step, result, requester, force) {\n    var _this = this;\n\n    var srcPath = step.srcPath.join(\".\");\n    var value;\n\n    try {\n      var logger = {\n        add: function add(path, name) {\n          _this.addLog(srcPath, \"dependsOn\", path, {\n            version: true,\n            name: name,\n            path: path,\n            srcPath: srcPath\n          });\n        }\n      };\n      var loader = step.loader;\n\n      if (loader.prism) {\n        if (loader.loadedPrism) loader = loader.loadedPrism;else {\n          var loadedPrism = this.getFromDispatch(loader.prism);\n          loader.loadedPrism = loadedPrism;\n          loader = loadedPrism;\n        }\n      }\n\n      if (loader.load) {\n        if (this.state.cache[srcPath]) {\n          return {};\n        }\n\n        value = loader.load(result, this, logger, step.loader, step);\n\n        _.set(this.state.wallet, srcPath, value);\n\n        this.state.cache[srcPath] = {\n          loader: true,\n          value: {}\n        };\n        return value;\n      }\n\n      if (!force) {\n        var _value = this.checkCache(srcPath);\n\n        if (_value) return _value;\n      }\n\n      if (step.src == \"sub\") this.addLog(requester, \"contains\", srcPath);\n      var oldCache = this.prepareCache(srcPath);\n\n      if (loader.get) {\n        try {\n          var tb = TB.init(result, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n          if (DataManager.newAPI) value = loader.get(tb, tb.v);else value = loader.get(tb, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n        } catch (e) {\n          if (e && e.type == \"return\") {\n            value = e.value;\n          } else {\n            throw e;\n          }\n        }\n      }\n\n      if (value === \"forceCache\") {\n        return this.checkCache(srcPath, true);\n      } else if (value !== undefined) {\n        this.setCache(srcPath, value);\n        this.diffCache(oldCache, srcPath);\n        if (loader.updateVersionsMap) this.updateVersionsMap(srcPath);\n\n        _.set(this.state.version, srcPath + \".version\", this.state.currentVersion);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (loader && loader.skipCache) this.state.cache[srcPath].shouldUpdate = true;\n    return value;\n  },\n  runUtils: function runUtils(path, args) {\n    var fn = this.getValue(path);\n    if (fn && fn.run) return fn.run.apply(fn, args);\n  },\n  getWallet: function getWallet(path) {\n    return _.get(this.state.wallet, path);\n  },\n  mergeValue: function mergeValue(path, value) {\n    var _this2 = this;\n\n    this.historyManager.addInfo({\n      type: \"mergeValue\",\n      path: path,\n      value: value\n    });\n    var oldValue = path ? _.get(this.state.wallet, path) : this.state.wallet; //this.getValue( path );\n\n    if (!oldValue) {\n      oldValue = {};\n\n      _.set(this.state.wallet, path, oldValue);\n    }\n\n    var changedPaths = [];\n    this.state.currentVersion++;\n    var route = _.isString(path) ? path.split(\".\") : path || [];\n    if (route.length == 1 && route[0] == \"\") route = [];\n    var fn = {\n      addPath: function addPath(relPath) {\n        var fullPath = route.concat(relPath);\n        changedPaths.push(fullPath);\n\n        _.set(_this2.state.version, fullPath.join(\".\") + \".version\", _this2.state.currentVersion);\n      }\n    };\n    this.pauseAll();\n\n    if (_.isObjectLike(value)) {\n      this.setObObj(oldValue, value, fn, []);\n    } else {\n      console.log(\"it's not object\");\n    }\n\n    for (var i in changedPaths) {\n      this.updateVersionForAll(changedPaths[i]);\n      this.getAffectedPaths(changedPaths[i].join(\".\"));\n    }\n\n    this.req_triggers();\n  },\n  pauseAll: function pauseAll() {\n    if (this.state.runningReqTriggers_timer) {\n      this.clearInterval(this.state.runningReqTriggers_timer);\n      delete this.state.runningReqTriggers_timer;\n    }\n\n    if (this.state.runningAgendaTriggers_timer) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n    }\n  },\n  setInterval: function setInterval(callback, delay, name) {\n    var stop = false;\n\n    var fn = function fn() {\n      if (stop) return; //console.log( \"interval\", name );\n\n      callback();\n      window.requestAnimationFrame(fn);\n    };\n\n    window.requestAnimationFrame(fn);\n    return function () {\n      stop = true;\n    };\n  },\n  clearInterval: function clearInterval(stopFn) {\n    if (!stopFn) return;\n    return stopFn();\n  },\n  req_triggers: function req_triggers() {\n    var _this3 = this;\n\n    if (this.state.runningReqTriggers_timer) return; //if ( Object.keys( this.affected ).length == 0 ) return;\n\n    this.state.runningReqTriggers_timer = this.setInterval(function () {\n      //console.log( \"affected::\", _.cloneDeep(this.affected ) );\n      _this3.asyncTriggers();\n    }, 0, \"triggers\");\n  },\n  asyncTriggers: function asyncTriggers() {\n    var keys = Object.keys(this.affected);\n\n    if (keys.length == 0) {\n      this.clearInterval(this.state.runningReqTriggers_timer); //console.log( \"affected_checked\", this.affected_checked );\n\n      this.affected_checked = {};\n      delete this.state.runningReqTriggers_timer;\n      return;\n    } //console.log( \"checking\", keys[0 ] );\n\n\n    this.affected_checked[keys[0]] = this.affected[keys[0]];\n    delete this.affected[keys[0]];\n    this.lazy_checkTriggers(keys[0]);\n  },\n  req_Agenda: function req_Agenda() {\n    var _this4 = this;\n\n    if (this.state.runningAgendaTriggers_timer) return;\n    if (this.state.agenda.tasks.length == 0) return;\n    this.state.runningAgendaTriggers_timer = this.setInterval(function () {\n      _this4.asyncTriggersAgenda();\n    }, 0, \"agenda\");\n  },\n  asyncTriggersAgenda: function asyncTriggersAgenda() {\n    if (this.state.agenda.tasks.length == 0) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n      return;\n    }\n\n    var trigger = this.state.agenda.tasks.shift();\n    if (!trigger) return console.error(trigger); //console.log( \"checking\", keys[0 ] );\n\n    delete this.state.agenda.names[trigger.id];\n    this.runTrigger(trigger, trigger.target, trigger.listener); //this.lazy_checkTriggers( keys[0] );\n  },\n  lazy_checkTriggers: function lazy_checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      if (this.state.agenda.names[path]) return;\n      var triggers = this.state.triggers[path];\n\n      for (var i in triggers) {\n        var trigger = triggers[i];\n        var id = trigger.id || path + \"___\" + i;\n        if (this.state.agenda.names[i]) continue;\n        if (!trigger.path) trigger.target = path;\n        if (!trigger.token) trigger.listener = i;\n        if (!trigger.id) trigger.id = id;\n        this.state.agenda.names[id] = true;\n        this.state.agenda.tasks.push(trigger);\n      }\n\n      this.sortAgenda();\n      this.req_Agenda();\n    }\n  },\n  sortAgenda: function sortAgenda() {\n    this.state.agenda.tasks.sort(function (taskA, taskB) {\n      if (!taskB.salience) return 1;\n      if (!taskA.salience) return -1;\n      return taskA.salience - taskB.salience;\n    });\n  },\n  setObObj: function setObObj(target, source, fn, path) {\n    for (var i in source) {\n      if (source[i] === undefined) continue;else if (_.isObjectLike(source[i])) {\n        if (!target[i]) target[i] = {};\n        this.setObObj(target[i], source[i], fn, path.concat(i));\n      } else {\n        if (target[i] != source[i]) {\n          target[i] = source[i];\n          fn.addPath(path.concat(i));\n        }\n      }\n    }\n  },\n  appendToArray: function appendToArray(path, value, setVersion) {\n    var target = _.get(this.state.wallet, path);\n\n    if (!target) {\n      value = [value];\n      return this.set(path, value, false, setVersion);\n    }\n\n    var index = target.length;\n    var route = _.isArray(path) ? path : path.split(\".\");\n    route.push(index);\n    return this.set(route, value, false, setVersion);\n  },\n  setByLoader: function setByLoader(path, value) {\n    if (_.isArray(path)) path = path.join(\".\");\n\n    var prism = _.get(this.state.meta, path);\n\n    if (!prism || !prism.loader || !prism.loader.set) return false;\n    var tb = TB.init({}, this, {}, prism.loader, {}, this.state.loadersCache[path]);\n    value = prism.loader.set(tb, value);\n    return true;\n  },\n  set: function set(path, value, isLoaders, setVersion) {\n    this.historyManager.startStack({\n      type: \"set\",\n      path: path,\n      value: value\n    });\n\n    try {\n      if (this.setByLoader(path, value)) {\n        return;\n      }\n\n      var target = isLoaders ? this.state.meta : this.state.wallet;\n\n      _.set(target, path, value); //if ( setVersion ) {\n\n\n      this.state.currentVersion++; //}\n\n      this.updateVersionForAll(path.split(\".\"));\n\n      _.set(this.state.version, path + \".version\", this.state.currentVersion);\n\n      var strPath = _.isArray(path) ? path.join(\".\") : path;\n      this.getAffectedPaths(strPath);\n      this.req_triggers();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.historyManager.endStack();\n    }\n  },\n  affected: {},\n  affected_checked: {},\n  affected_version: 1,\n  markChangeOn: function markChangeOn(path, skipTrigger, incAffected) {\n    if (incAffected) this.affected_version++;\n    if (!skipTrigger) this.pauseAll();\n    this.getAffectedPaths(path);\n    console.log(Object.keys(this.affected), Object.keys(this.affected_checked));\n    if (!skipTrigger) this.req_triggers();\n  },\n  getAffectedPaths: function getAffectedPaths(path) {\n    if (this.state.cache[path]) {\n      this.state.cache[path].shouldUpdate = true;\n    }\n\n    if (this.affected[path] && this.affected[path].affected_version == this.affected_version) {\n      return;\n    }\n\n    this.affected[path] = {\n      affected_version: this.affected_version,\n      version: this.state.currentVersion,\n      state: 1\n    };\n    var route = path.split(\".\");\n    var strPath = route[0];\n    this.getAffectedPaths(route[0]);\n\n    for (var i = 1; i < route.length - 1; i++) {\n      strPath += \".\" + route[i];\n      this.getAffectedPaths(strPath);\n    }\n\n    var influenced = this.getInfluenced(path);\n\n    for (var i in influenced) {\n      this.getAffectedPaths(influenced[i]);\n    }\n  },\n  markChangedPaths: function markChangedPaths(path) {\n    //let influenced = this.getInfluenced( path );\n    var route = path.split(\".\");\n    var strPath = route[0];\n\n    for (var i = 1; i < route.length; i++) {\n      strPath += \".\" + route[i];\n      if (this.state.cache[strPath]) this.state.cache[strPath].shouldUpdate = true;\n      this.checkTriggers(strPath);\n      this.setUpdateFlag(strPath);\n    }\n  },\n  changedPaths: {},\n  setUpdateFlag: function setUpdateFlag(path) {\n    var influenced = this.getInfluenced(path);\n    var cache = this.state.cache;\n\n    for (var i in influenced) {\n      if (cache[influenced[i]]) {\n        cache[influenced[i]].shouldUpdate = true;\n      }\n\n      this.setUpdateFlag(cache[influenced[i]]);\n      this.checkTriggers(influenced[i]);\n    }\n  },\n  checkTriggers: function checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      this.runTriggers(this.state.triggers[path], path);\n    }\n  },\n  runTriggers: function runTriggers(collection, path) {\n    for (var i in collection) {\n      this.runTrigger(collection[i], path, i);\n    }\n  },\n  runTrigger: function runTrigger(trigger, path, token) {\n    if (_.isFunction(trigger.run)) {\n      return trigger.run(trigger, path, token);\n    }\n\n    var fn = _.get(this.state.wallet, trigger.run);\n\n    if (_.isFunction(fn)) return fn(trigger, path, token);else if (fn.run) return fn.run(trigger, path, token);\n  },\n  run: function run(path, value) {},\n  fetchValues: function fetchValues(target, map, wallet, master, logger, onlyPaths) {\n    for (var i in map) {\n      if (i == \"type\") continue;\n      var value = map[i];\n\n      if (_.isString(value)) {\n        if (value.charAt(0) == \"$\") {\n          var _path = value.substr(2);\n\n          if (logger) logger.add(_path, i);\n          value = master.getValue(_path);\n        } else if (onlyPaths) {\n          var _path2 = value;\n          if (logger) logger.add(_path2, i);\n          value = master.getValue(_path2);\n        }\n      } else if (value.KEY == \"fullPath\") {\n        path = value.path.join(\".\");\n        if (logger) logger.add(path, i);\n        value = master.getValue(path);\n      }\n\n      if (value === undefined) throw \"postpone\";\n      var slot = i;\n      target[slot] = value;\n      if (!target.src) target.src = {};\n      target.src[slot] = {\n        key: map[i],\n        slot: i\n      };\n    }\n\n    return target;\n  },\n  setCombined: function setCombined(path, value) {\n    this.historyManager.startStack({\n      type: \"setCombined\",\n      path: path,\n      value: value\n    });\n    var payload = {\n      loaders: {},\n      loadersPaths: [],\n      basePath: path.split(\".\"),\n      value: value,\n      pins: [],\n      afterOp: []\n    };\n    var isEmpty = this.iterate(value, [], payload);\n\n    if (payload.pins.length) {\n      var currentPins = {};\n\n      for (var i in payload.pins) {\n        var _pin = payload.pins[i];\n\n        var name = _pin.value || _pin.path.slice(-1)[0];\n\n        currentPins[name] = {\n          path: _pin.path,\n          fullPath: payload.basePath.concat(_pin.path)\n        };\n      }\n\n      var pins = _.get(this.state.pins, path + \".pins\");\n\n      if (!pins) _.set(this.state.pins, path + \".pins\", pins = {});\n\n      _.merge(pins, currentPins);\n    }\n\n    if (payload.afterOp.length) {\n      for (var i in payload.afterOp) {\n        var op = payload.afterOp[i];\n\n        if (op.type == \"gluePin\") {\n          var pin = pins[op.pin];\n          var pinKey = {\n            KEY: \"fullPath\",\n            path: pin.fullPath\n          };\n\n          if (op.isLoader) {\n            _.set(payload.loaders, op.dest, pinKey);\n          } else {\n            _.set(value, op.dest, pinKey);\n          }\n        } else if (op.type == \"flags\") {\n          if (op.flags.hasVersion) {\n            this.updateVersion(op.path);\n          }\n        }\n      }\n    }\n\n    if (!isEmpty) this.set(path, value, false, true);\n\n    if (payload.hasLoaders) {\n      //console.log( \"loaders\", payload.loadersPaths );\n      this.set(path, payload.loaders, true, true);\n\n      for (var i in payload.loadersPaths) {\n        var lPath = payload.loadersPaths[i];\n        this.setCache(lPath.join(\".\"), {}, true);\n\n        var loader = _.get(this.state.meta, lPath);\n\n        if (loader.loader && loader.loader.autostart) {\n          this.state.toStart.push({\n            path: lPath.join(\".\")\n          }); //this.getValue(lPath.join(\".\"));\n        } //console.log( \"loader\", loader );\n\n      }\n    }\n\n    this.historyManager.endStack();\n  },\n  runToStart: function runToStart() {\n    var toStart = this.state.toStart;\n\n    while (toStart.length) {\n      var item = toStart.shift();\n      this.getValue(item.path);\n    }\n  },\n  buildModel: function buildModel(input, path) {\n    var modelName = input.MODEL;\n    input = _.cloneDeep(input);\n    var tokens;\n\n    if (modelName.indexOf(\":\") != -1) {\n      tokens = modelName.split(\":\");\n      modelName = tokens.shift();\n      input.tokens = tokens;\n    }\n\n    var mold = this.getValue(modelName);\n\n    if (mold.handleTokens && tokens) {\n      mold.handleTokens(input, tokens, path);\n    }\n\n    var obj = _.cloneDeep(mold.modelObj);\n\n    if (mold.modelSpec) {\n      var spec = mold.modelSpec;\n\n      if (spec.ops) {\n        for (var i in spec.ops) {\n          var op = spec.ops[i];\n\n          if (op.type == \"replaceValue\") {\n            var value = _.get(input, op.source);\n\n            if (!op.dest) obj = value;else _.set(obj, op.dest, value);\n          } else if (op.type == \"eval\") {\n            var _value2 = op.fn(input, op);\n\n            console.log(_value2);\n\n            _.set(input, op.dest, _value2);\n          }\n        }\n      }\n\n      if (spec.isLoader) {\n        obj = {\n          loader: obj\n        };\n      }\n    }\n\n    if (input.pin !== undefined) obj.pin = input.pin;\n    this.historyManager.addInfo({\n      type: \"buildModel\",\n      path: path,\n      input: input,\n      obj: obj\n    });\n    return obj;\n  },\n  iterate: function iterate(obj, path, payload) {\n    while (obj && obj.MODEL) {\n      var newObj = this.buildModel(obj, payload.basePath.concat(path));\n\n      for (var i in obj) {\n        delete obj[i];\n      }\n\n      _.merge(obj, newObj); //really ? it was easier that way then to put inside the loop and on setCombined ? really ? \n      //yea, keeping the traditional approach\n\n    }\n\n    var isEmpty = true;\n\n    for (var i in obj) {\n      var subPath = path.concat(i);\n\n      if (i == \"pin\") {\n        payload.pins.push({\n          subPath: subPath,\n          path: path,\n          value: obj[i]\n        });\n        delete obj[i];\n      } else if (i == \"loader\") {\n        this.setLoader(payload.loaders, path, obj[i], payload.basePath, payload);\n        payload.loadersPaths.push(payload.basePath.concat(path));\n        delete obj[i];\n        payload.hasLoaders = true;\n      } else if (i == \"flags\") {\n        payload.afterOp.push({\n          type: \"flags\",\n          path: payload.basePath.concat(path).join(\".\"),\n          relPath: path,\n          flags: obj.flags\n        });\n      } else if (_.isString(obj[i]) && obj[i].charAt(0) == \"%\") {\n        obj[i] = this.getStaticValue(obj[i], i, obj, subPath, payload);\n        isEmpty = false;\n      } else if (_.isObjectLike(obj[i])) {\n        var subIsEmpty = this.iterate(obj[i], subPath, payload);\n\n        if (subIsEmpty) {//delete obj[ i ];\n        } else {\n          isEmpty = false;\n        }\n\n        isEmpty = false;\n      } else {\n        isEmpty = false;\n      }\n    }\n\n    return isEmpty;\n  },\n  getStaticValue: function getStaticValue(slot, index, obj, path, payload) {\n    if (slot == \"%PATH\") return payload.basePath.concat(path);else {\n      payload.afterOp.push({\n        type: \"gluePin\",\n        dest: path,\n        pin: slot.substring(1)\n      });\n      return {\n        KEY: \"relative path\"\n      };\n    }\n  },\n  getUID: function getUID() {\n    return this.state.nextUID++;\n  },\n  setTrigger: function setTrigger(target, listener, trigger) {\n    if (!this.state.triggers[target]) this.state.triggers[target] = {};\n    this.state.triggers[target][listener] = trigger;\n  },\n  getTrigger: function getTrigger(target, listener) {\n    if (!this.state.triggers[target]) return null;\n    return this.state.triggers[target][listener];\n  },\n  remTrigger: function remTrigger(target, listener) {\n    if (!this.state.triggers[target]) return;\n    delete this.state.triggers[target][listener];\n  },\n  setLoader: function setLoader(loaders, path, value, basePath, payload) {\n    if (_.isString(value)) {\n      var listenerPath = basePath.concat(path).join(\".\");\n      var oldTrigger = this.getTrigger(value, listenerPath);\n      if (oldTrigger && oldTrigger.path) this.remTrigger(oldTrigger.path, listenerPath);\n      this.setTrigger(value, listenerPath, {\n        run: \"base.updateLoader\",\n        loaderPath: value,\n        destination: listenerPath\n      });\n      value = this.getValue(value);\n    }\n\n    this.prepareLoader(value, basePath, path.concat(\"loader\"), payload);\n\n    _.set(loaders, path.concat(\"loader\"), value); //this.markChangeOn( path, true );\n\n  },\n  prepareLoader: function prepareLoader(loader, basePath, loaderPath, payload) {\n    this.deepTransformObj(loader, [], function (obj, slot, path) {\n      if (_.isString(obj) && obj.charAt(0) == \"%\") {\n        if (obj == \"%PATH\") {\n          return payload.basePath.concat(loaderPath);\n        }\n\n        payload.afterOp.push({\n          type: \"gluePin\",\n          dest: loaderPath.concat(path),\n          pin: obj.substring(1),\n          isLoader: true\n        });\n        return {\n          x: 12\n        };\n      }\n    });\n  },\n  deepTransformObj: function deepTransformObj(obj, path, test) {\n    if (!obj || !_.isObject(obj)) return;\n\n    for (var i in obj) {\n      var value = test(obj[i], i, path.concat([i]));\n\n      if (value !== undefined) {\n        obj[i] = value;\n        continue;\n      }\n\n      if (_.isObject(obj[i])) this.deepTransformObj(obj[i], path.concat([i]), test);\n    }\n  },\n  setMap: function setMap(map) {\n    for (var i in map) {\n      this.setCombined(i, map[i]);\n    }\n  },\n  getFromDispatch: function getFromDispatch(path) {\n    return this.getValue(path);\n  },\n  getVersion: function getVersion(path) {\n    var route = path.split(\".\");\n    var version = -1;\n    var versionsTree = this.state.version;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n      if (!versionsTree[slot]) return version;\n      versionsTree = versionsTree[slot];\n      if (versionsTree.version) version = versionsTree.version;\n    }\n\n    return version;\n  },\n  getVersionTree: function getVersionTree(path) {\n    var versionsTree = this.state.version;\n    return _.get(versionsTree, path);\n  },\n  updateVersionForAll: function updateVersionForAll(path) {\n    for (var i = 0; i < path.length; i++) {\n      _.set(this.state.version, path.slice(0, i).concat(\"version\"), this.state.currentVersion);\n      /*\n      \n      var node = _.get( this.state.version, path.slice(0,i) );\n      if ( !node ) break;\n      if ( node.version ) node.version = this.state.currentVersion;\n      */\n\n    }\n  },\n  updateVersion: function updateVersion(path) {\n    _.set(this.state.version, path + \".version\", this.state.currentVersion);\n  },\n  objectDiff: function difference(oldObject, newObject) {\n    function changes(oldO, newO) {\n      if (!_.isObject(oldO) || !_.isObject(newO)) return {\n        change: {\n          from: oldO,\n          to: newO\n        }\n      };\n      var result = {};\n      var hasChanges = false;\n\n      for (var i in newO) {\n        if (oldO[i] === undefined) {\n          result[i] = {\n            change: {\n              from: undefined,\n              to: newO[i],\n              type: \"added\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isFunction(newO[i]) && oldO[i] && newO[i].toString() != oldO[i].toString()) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"function changed\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isObject(newO[i])) {\n          var subChanges = changes(oldO[i], newO[i]);\n\n          if (subChanges) {\n            result[i] = subChanges;\n            hasChanges = true;\n          }\n        } else if (newO[i] != oldO[i]) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"changed\"\n            }\n          };\n          hasChanges = true;\n        }\n      }\n\n      for (var i in oldO) {\n        if (newO[i] === undefined) {\n          hasChanges = true;\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: null,\n              type: \"deleted\"\n            }\n          };\n        }\n      }\n\n      return hasChanges ? result : null;\n    }\n\n    return changes(oldObject, newObject);\n  },\n  act: function act(path, args, tb) {\n    var value = _.isObject(path) ? path : this.getValue(path);\n\n    if (!tb) {\n      tb = this.tb();\n    }\n\n    var act = ACT.init(value, this, args, path, tb);\n    return act;\n  },\n  tb: function tb() {\n    var tb = TB.init({}, this, null, {}, {}, {});\n    return tb;\n  }\n};\n\nvar DataManager = _DataManager.setup();\n\nvar ACT = {\n  master: null,\n  actions: null,\n  args: null,\n  init: function init(actions, master, args, path, tb) {\n    var item = Object.create(this);\n    item.master = master;\n    item.actions = actions;\n    item.args = args;\n    item.path = path;\n    item.tb = tb;\n    return item;\n  },\n  run: function run(name, args) {\n    return this.actions[name].apply(this.actions, [args, this.tb]);\n  }\n};\nvar TB = {\n  master: null,\n  logger: null,\n  spec: null,\n  step: null,\n  cache: null,\n  v: null,\n  init: function init(wallet, master, logger, spec, step, cache) {\n    var item = Object.create(this);\n    Object.assign(item, {\n      wallet: wallet,\n      master: master,\n      logger: logger,\n      spec: spec,\n      step: step,\n      cache: cache\n    });\n    item.v = {};\n    return item;\n  },\n  act: function act(path, args) {\n    var act = this.master.act(path, args, this);\n    return act;\n  },\n  go: function go(name, args) {\n    if (!this.toolbox) this.toolbox = DataManager.getValue(\"toolBox\");\n\n    if (!this.toolbox[name]) {\n      console.log(\"no \", name);\n      return null;\n    }\n\n    if (this.toolbox[name].run) return this.toolbox[name].run(args, this);else if (_.isFunction(this.toolbox[name])) return this.toolbox[name](args, this);\n  },\n  path: function path() {\n    return this.step.srcPath.join(\".\");\n  },\n  fetch: function fetch(paths, target) {\n    return this.run_fetch(paths, target);\n  },\n  run_fetch: function run_fetch(paths, target, prefix) {\n    var _this5 = this;\n\n    var singlePath = false;\n\n    if (_.isString(paths) || paths.KEY) {\n      singlePath = true;\n      paths = {\n        SINGLEPATH: paths\n      };\n    }\n\n    var values = {};\n    this.master.fetchValues(values, paths, this.wallet, this.master, {\n      add: function add(path, slot) {\n        if (!_this5.logger) return;\n        var name = slot !== \"SINGLEPATH\" ? (prefix || []).concat(slot) : prefix || [];\n\n        _this5.logger.add(path, name.join(\".\"));\n      }\n    }, true);\n\n    for (var i in values) {\n      if (values[i] && values[i].type == \"routes\") {\n        var subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n        values[i] = this.run_fetch(values[i], null, subPrefix);\n      } else if (values[i] && values[i].type == \"value\") {//let subPrefix = i != \"SINGLEPATH\" ? (prefix || [] ).concat( i ) : prefix;\n        //values[ i ] = this.run_fetch( values[ i ], null, subPrefix )\n      } else if (values[i] && _.isString(values[i]) && values[i].charAt(0) == \"$\") {\n        var _subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n\n        values[i] = this.run_fetch(values[i].substring(2), null, _subPrefix);\n      }\n    }\n\n    if (singlePath) values = values.SINGLEPATH;\n\n    if (target) {\n      if (target.src) {\n        var src = values.src;\n        delete values.src;\n\n        _.merge(target.src, src);\n      }\n\n      Object.assign(target, values);\n      return target;\n    } else {\n      return values;\n    }\n  },\n  pathOf: function pathOf(path) {\n    var path = this.v.src[path];\n    if (path.key) return path.key;\n    if (_.isString(path)) return path;\n  },\n  set: function set(path, value) {\n    var target = this.v;\n    var route = _.isString(path) ? path.split(\".\") : path;\n    var last_src = null;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n\n      if (target.src && target.src[slot]) {\n        last_src = {\n          src: target.src[slot],\n          left: route.slice(i + 1)\n        };\n      }\n\n      if (!target[slot]) {\n        break;\n      }\n\n      target = target[slot];\n    }\n\n    if (last_src) {\n      var basePath = _.isString(last_src.src.key) ? last_src.src.key.split(\".\") : last_src.src.key.path;\n      var fullPath = basePath.concat(last_src.left).join(\".\");\n      this.master.set(fullPath, value);\n    }\n  },\n  detach: function detach() {\n    var detached = Object.create(this);\n    detached.v = {};\n    detached.logger = null;\n    return detached;\n  },\n  feed: function feed(path) {\n    var feedModel = this.master.getValue(path);\n    var feed = feedModel.init();\n    var start = 1;\n\n    for (var i = start; i < arguments.length; i++) {\n      feed.in(arguments[i]);\n    }\n\n    return feed;\n  }\n};\n\ntry {\n  if (!window.DataManager) {\n    window.DataManager = DataManager;\n    window._DataManager = _DataManager;\n  } //eval( 'export default DataManager' );\n\n} catch (e) {}","module.exports = __webpack_public_path__ + \"static/media/logo.06a44ff7.svg\";"],"sourceRoot":""}
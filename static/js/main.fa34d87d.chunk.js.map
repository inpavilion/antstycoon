{"version":3,"sources":["units/units/db.js","components/CodeMirrorEditor.js","managers/KeyboardManager.js","managers/TimerManager.js","units/main.js","units/units/brand.js","units/units/bubbleBoard.js","units/units/bubbleFlow.js","units/units/bubbleGuns.js","units/units/bubbleTest.js","units/units/bubbleTypes.js","units/units/parseStringIntoComp.js","units/units/prettyScode.js","units/units/reactAssembler.js","components/MyInput.js","units/units/reactUtils.js","units/units/store.js","units/units/testDataGenerator.js","units/units/testMolds.js","units/units/testTplAssembling.js","units/units/tplObjParse.js","units/units/treeCardsBuilder.js","units/units/treeIterator.js","units/units/uids.js","units/init.js","units/index.js","FlatAnt1.js","App.js","serviceWorker.js","index.js","../../data-department/dataManager.js","logo.svg"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","faker__WEBPACK_IMPORTED_MODULE_1__","faker__WEBPACK_IMPORTED_MODULE_1___default","pouchdb__WEBPACK_IMPORTED_MODULE_2__","pouchdb_find__WEBPACK_IMPORTED_MODULE_3__","pouchdb_quick_search__WEBPACK_IMPORTED_MODULE_4__","pouchdb_quick_search__WEBPACK_IMPORTED_MODULE_4___default","PouchDB","plugin","PouchDBFind","PouchDBQuickSearch","cu","window","ub","ctx","serialize","obj","_","cloneDeepWith","value","isFunction","TYPE","body","toString","deserialize","item","fn","eval","e","save","id","db","this","uid","generateUid","_id","get","then","doc","rev","_rev","put","i","catch","err","load","_this","cfg","state","nextId","prefix","init","name","auto_compaction","Date","getTime","Math","random","Object","create","destroy","alert","loadfilter","selector","count","sort","find","partialTextSearch","text","query","emit","split","forEach","element","type","map","mapId","parent","parentId","test","key","result","x","y","obj2","run","def","debug","require","Component","DataManager","KeyboardManager","setup","isInitialized","$","on","evt","handleKey","setTrigger","layout","getValue","altKey","push","ctrlKey","metaKey","shiftKey","toLowerCase","comb","join","action","TimerManager","wallet","timers","start","delay","clearTimeout","timer","setTimeout","cancel","date","set","end","getRandomFn","str","seed","charCodeAt","sin","floor","getBrand","randomFn","baseBrand","brand","mainColor_hsl","getColor","complementColor_hsl","mainColor","complementColor","fadedColor","baseColor","hue","color","chroma","hsl","getRandom","scale","max","pointsStar","polies","_loop","j","poligonPoints","col","classname","round","points","concat","getLogo","bubbleBoard","addItem","getId","mergeItem","data","minStep","changed","appendTo","results","console","log","versions","isReady","undefined","completedAt","rewindTo","tb","onchanged","step","createdAt","values","items","hasChanges","slot","bubbleid","isString","charAt","substring","isObject","isMatch","version","evalItems","affected","_evalItems","isCompleteValues","evalItem","node","getNode","bubble","defaultsDeep","trails","rels","bellow","above","uses","checkIfComplete","tpl","val","master","evaluateflow","getVersion","bubbleFlow","fns","doubleCheck","evaluate","target","checks","check","shaddow","score","subs","total","resolved","unresolved","tplParams","defined","parameters","mold","param","model","v","targetId","opt","_setup","assign","shaft","fullPath","getFull","route","base","relPath","fetch","it","collection","cb","oldValues","info","sub","paths","stateCurrentId","currentItem","targetid","path","compile","clues","needes","provides","collections","subScore","params","undefinedCount","length","definedCount","bubbleGuns","bubbleTypes","dispatch","bubbleTest","nodeType","tplObjParse","viewAs","dataNode","reactNode","neededValues","reactAssembler","op","cues","pins","mirror","description","newItem","cloneDeep","bubbles","cache","newId","newValues","mirrorBubble","types","phase1","html","trim","nest","document","createElement","innerHTML","specs","childNodes","el","spec","_spec","nodeValue","props","attributes","attr","indexOf","replace","all","char","toUpperCase","class","className","style","_style","componentName","nodeName","children","htmlSlot","keys","child","match","reg","css","exec","phase2","attrs","_this2","payload","ops","watchAttrs","isArray","iterate","a","b","stage","opValues","handleObj","childrenPath","subPath","handleProp","pin","addOp","prepareAction","concatOp","_this3","filter","index","concatParent","parseStringIntoComp","nextUID","makestr","indent","usequouts","js_beautify","indent_size","indent_level","preserve_newlines","max_preserve_newlines","indent_inner_html","trimStart","lines","isObjectLike","isNil","beautify","prettyScode","getter","applyOps","tplid","newOps","MyInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","setState","nextProps","React","customComponents","myinput","makeComponent","flattenDeep","component","error","reactUtils","tplComponent","createStore","hapi","store","tpls","parents","change","runWith","src","getItem","getSubs","registerTpl","args","cases","faker","company","catchPhrase","setter","level","generated","uuid","arrayElement","oldPayload","prepare","ret","integrate","addPayload","_case","testDataGenerator","parser","testMolds","parseTpl","renderTpl","assembleTpl","molds","iterateBubbles","shouldAssemble","isRegistered","addBubble","computedAtStep","uids","addedAtStep","inputs","salut","testTplAssembing","value_setter","content","#test","tplId","isUnparsedTpl","isList","parseHtml","_check","payload1","tplsMapping","defaultTpl","usedGlobalStyles","addSubs","nodes","card","useTemplate","skipGlobalStyle","root","globalStyle","title","getMolds","buildTpls","iterator","addGlobalStyles","gbs","styles","makeSelector","treeCardsBuilder","repo","mappings","treeIterator","mub","tests","pending","passes","shift","group","groupEnd","ctxpins","newAPI","TimerManagerBuilder","showhud","currentView","goToCard","placeorder","which","flow","place","restart","parseinput","parse","select","focus","myUB","afterRenderActions","add","bridge","bridgeLoader","loadBridge","selectMap","mapview","loadMap","setCombined","input","showSearch","noPlace","substr","editStartedAt","firstCharAt","antsDbState","getParent","actions","main","prevStep","startedAt","getWallet","selectItem","changeItem","createMap","merge","ant","allSubs","history","changeAt","now","placedAt","mergeRoot","loader","fnsub","make","old","setupAll","makeUb","tb.db","goSetup","extra","autostart","waiting","c","onready","promise","Promise","resolve","opts","runAll","scrollIntoViewSelected","scrollIntoViewIfNeeded","alertAnimation","addClass","removeClass","loadItems","saveItems","request_save","setupUb","getItemsToSave","promises","loadFilter","startIds","related","ids","top","notdb","recent","docs","search","ant1","_this4","customTpl","logo","generateId","triggerChange","setRel","rel","mapView","frame","topic","entry","other","handle","bridgeTitle","mapTitle","uistate","rows","selected","otherTpl","moldsMap","cardMold","background","colors","getBody","setV","memo","cleanV","list","getBodyList","isSelected","afterContent","getHandle","String","fromCharCode","moldName","titleMold","addVFn","tplSpecs","byLevel","borderColor","makeItem","makeList","stack","clean","stacks","pop","_this5","onbeforeunload","saveAll","loadAll","_this6","tosave","savings","saveitem","loaditem","onload","runOn","starter","done","bubbleitem","orderText","order","viewState","view","changeOrder","bumbAction","placeOrder","dim","height","width","barHeight","label","bubbleList","bumb","textColor","historyManager","recording","runToStart","Frame","_this7","_this8","components","FlatAnt","_this9","scode","react_default","FlatAnt1_Frame","App","FlatAnt1","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","currentStack","startStack","prevStack","addInfo","skipClone","endStack","_DataManager","gettingValue","meta","loadersCache","triggers","currentVersion","dependencies","agenda","names","tasks","toStart","flags","setCtx","basePath","ctxPath","getCtx","runFn","fnName","targetPath","getInfluenced","influenced","dep","skipPartialValueCheck","checkCache","partialPath","slice","partialResult","partialSlot","partialValue","listToValue","setCache","shouldUpdate","ignoreUpdates","prepareCache","contains","dependsOn","diffCache","oldCache","addDependency","remDependency","newC","oldC","updateVersionsMap","depOn","walletValue","srcPath","rootPath","_item","_i","silentSet","skipPathAffected","getAffectedPaths","postponedSteps","hasSteps","snoozeCount","getFromLoader","addLog","lhs","rhs","cachedValue","xcache","requester","force","logger","prism","loadedPrism","getFromDispatch","_value","TB","skipCache","runUtils","apply","mergeValue","oldValue","changedPaths","addPath","pauseAll","setObObj","updateVersionForAll","req_triggers","runningReqTriggers_timer","clearInterval","runningAgendaTriggers_timer","setInterval","callback","stop","requestAnimationFrame","stopFn","asyncTriggers","affected_checked","lazy_checkTriggers","req_Agenda","asyncTriggersAgenda","trigger","runTrigger","listener","token","sortAgenda","taskA","taskB","salience","source","appendToArray","setVersion","setByLoader","isLoaders","strPath","markChangeOn","skipTrigger","markChangedPaths","checkTriggers","setUpdateFlag","runTriggers","fetchValues","onlyPaths","_path","_path2","KEY","loaders","loadersPaths","afterOp","isEmpty","currentPins","_pin","pinKey","isLoader","dest","hasVersion","updateVersion","hasLoaders","lPath","buildModel","tokens","modelName","MODEL","handleTokens","modelObj","modelSpec","_value2","newObj","setLoader","getStaticValue","getUID","getTrigger","remTrigger","listenerPath","oldTrigger","loaderPath","destination","prepareLoader","deepTransformObj","setMap","versionsTree","getVersionTree","objectDiff","oldObject","newObject","changes","oldO","newO","from","to","subChanges","act","ACT","go","toolbox","run_fetch","singlePath","SINGLEPATH","subPrefix","_subPrefix","pathOf","last_src","left","detach","detached","feed","arguments","in","module","exports","p"],"mappings":"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","file":"static/js/main.fa34d87d.chunk.js","sourcesContent":["import _ from \"lodash\"\nimport faker from \"faker\"\nimport PouchDB from \"pouchdb\"\nimport PouchDBFind from 'pouchdb-find';\nimport PouchDBQuickSearch from 'pouchdb-quick-search';\n\nPouchDB.plugin(PouchDBFind);\nPouchDB.plugin(PouchDBQuickSearch);\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {},\n\n    serialize : function( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( _.isFunction( value ) ) return { TYPE : \"FN\", body : value.toString() };\n        })\n\n        return item;\n    },\n\n    deserialize : function ( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( value && value.TYPE == \"FN\" ) {\n                let fn;\n                try  { \n                    eval( \"fn=\" + value.body )\n                } catch (e ) {\n\n                }\n                return fn;\n            } \n        })\n\n        return item;\n    },\n\n    save: function (value, id) {\n        var db = this.ctx.db;\n\n        let item = this.serialize( value );\n        if (!item.uid) item.uid = id || item.id || this.generateUid();\n        if (!item._id) item._id = item.uid;\n  \n        return db.get(item._id)\n          .then((doc) => {\n            let rev = doc.rev;\n            let _rev = doc._rev;\n\n            item.rev = rev;\n            item._rev = _rev;\n            return db.put(item).then( ( i)=> {\n            })\n          })\n          .catch(err => {\n            return db.put(item);\n          })\n\n\n\n    },\n\n\n\n    load: function (id) {\n        return this.ctx.db.get(id).catch( e => {\n            return null\n        })\n        .then ( item => {\n            if ( item ) item = this.deserialize( item );\n            return item;\n        })\n    },\n\n\n    generateUid : function ( ) {\n        this.cfg.state.nextId++;\n        return this.cfg.state.prefix + \"_\" + this.cfg.state.nextId;\n    },\n\n    init: function (name) {\n        let ctx = {\n            db: new PouchDB(name, {auto_compaction: true}),\n            state: {\n                prefix: new Date().getTime().toString() + \"_\" + Math.random().toString(),\n                nextId: 0,\n                id : \"state\"\n            }\n        }\n\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        item.load(\"state\").then(state => {\n            if ( state ) item.ctx.state = state\n            else item.save( item.ctx.state )\n        })\n\n        return item;\n    },\n\n    destroy : function ( ) {\n        this.ctx.db.destroy( ) \n            .then ( () => {\n\n                alert( \"done cleanup\")\n            })\n    },\n\n    loadfilter : function ( selector, count, sort ) {\n        return this.ctx.db.find( { selector  });\n    },\n\n    partialTextSearch : function ( text ) { \n        return this.ctx.db.query( (doc, emit)=> {\n            if ( !doc.text ) return;\n            let tokens = doc.text.split( /\\s+/g );\n            tokens.forEach(element => {\n                emit( element, { type : doc.type, map : doc.mapId , parent : doc.parentId ,test : \"salut\"} )\n            });\n        }, {key : text})\n    },\n\n\n\n\n}\n\nvar test = (result) => {\n    result.obj = ub.serialize( {x : function ( ) {} , y : \"test\"})\n\n    result.obj2 = ub.deserialize( result.obj );\n\n    ub.init(\"testdb\")\n}\n\n\ncu.db = {\n    //test,\n    run: function (name) {\n        return ub.init(name);\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/javascript/javascript');\n\nclass CodeMirrorEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.changeValue = this.changeValue.bind(this);\n    this.changeCursor = this.changeCursor.bind(this);\n    this.isBlured = this.isBlured.bind(this);\n  }\n\n  changeValue(editor, data, value) {\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    //window.editor = editor;\n\n\n    let cursor = editor.getCursor();\n    if (data.origin != undefined) {\n      this.props.valueChanged({ scode: value, cursor: { line: cursor.line, ch: cursor.ch } });\n    }\n    else {\n      this.props.valueChanged({ scode: value })\n    }\n\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n  }\n\n  changeCursor(editor, cursor) {\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n\n    if (cursor.sticky == undefined) return;\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    this.props.valueChanged({ cursor: { line: cursor.line, ch: cursor.ch } });\n\n  }\n  isBlured() {\n    if (this.props.blured)\n      this.props.blured()\n  }\n\n  render() {\n\n    //this means that setting the value with null will delete the value from wallet ?!?\n    let text = this.props.data.scode || \"\";\n    if (!text.length) text = \"\";\n\n    let cursor = this.props.data.cursor;\n    if (!cursor || !cursor.ch) cursor = 0;\n\n    let popup;\n    let caret = this.state.caret || { right : 0, bottom : 0} \n    if (caret) {\n\n      let left = caret.right + 30;\n      let top = caret.bottom + 0;\n\n      popup = <div className=\"popup\" style={{ transform: \"translate(\" + left + \"px ,\" + top + \"px)\", zIndex: 100 }} > Salut  </div>\n    }\n    else popup = null;\n\n    let style = `\n      .popup { border : 1px solid #999; background : #bbb; padding : 10px; min-width:40px; width : 100px; transition : all 0.2s ease; }\n\n      .popup { opacity : 0.05; position : absolute;pointer-events: none;}\n    `\n    return <div style={{position:\"relative\"}}>\n      <style>{style}</style>\n      {popup}\n      <CodeMirror\n        value={text}\n\n        options={{\n          mode: 'javascript',\n          lineNumbers: true, \n          smartIndent : true,\n        }}\n\n        autoCursor={false}\n\n        cursor={cursor}\n        ///onBeforeChange={this.changeValue}\n        onChange={this.changeValue}\n        onCursor={this.changeCursor}\n        onBlur={this.isBlured}\n      />\n    </div>\n  }\n}\n\nexport default CodeMirrorEditor;","import React, { Component } from 'react';\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"../libs/dataManager\";\nvar DataManager = window.DataManager;\n\n\nvar KeyboardManager = {\n    setup: function () {\n        if (this.isInitialized) return;\n\n        $(\"body\").on(\"keydown\", (evt) => {\n            this.handleKey(evt)\n        })\n\n        DataManager.setTrigger(\"keyboardShortcuts.layout\", \"kbdManager\", {\n            run: () => {\n                this.load();\n            }\n        })\n        this.load();\n    },\n\n    load: function () {\n        let layout = DataManager.getValue(\"keyboardShortcuts.layout\");\n        this.layout = layout || {};\n    },\n\n    handleKey: function (evt) {\n        var name = [];\n        if (evt.altKey) name.push(\"alt\");\n        if (evt.ctrlKey) name.push(\"ctrl\");\n        if (evt.metaKey) name.push(\"meta\");\n        if (evt.shiftKey) name.push(\"shift\");\n\n        name.push(evt.key.toLowerCase())\n        let comb = name.join(\"+\");\n\n        if (this.layout[comb])\n            return this.run(this.layout[comb], comb)\n    },\n\n    run: function (action,comb) {\n        if (_.isFunction(action)) return action(comb, action);\n        else if (action.run)\n            return action.run(comb, action)\n    }\n}\n\nKeyboardManager.setup();\n\nexport default KeyboardManager","var TimerManager = {\n    init : function ( DataManager ) {\n      var item = Object.create( this );\n\n      item.DataManager = DataManager;\n      item.wallet = {timers : {} }\n      return item;\n    },\n    wallet: { timers: {} },\n  \n    start: function (name, action, delay) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n  \n      var timer = window.setTimeout(() => {\n        this.cancel( name );\n        action(name, action, delay);\n      }, delay)\n  \n      this.wallet.timers[name] = timer;\n\n      let date = new Date();\n      this.DataManager.set(\"TimerManager.timer.\"  + name , { start : date.getTime(), end : date.getTime() + delay })\n    },\n  \n    cancel: function (name) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n      delete this.wallet.timers[name]\n      this.DataManager.set(\"TimerManager.timer.\"  + name , \"\")\n\n    }\n  }\n\n  export {TimerManager};","\nvar cu = {}\n\nwindow.cu = cu;\n\nexport default cu;\n","import _ from \"lodash\"\nimport faker from \"faker\"\nimport chroma from \"chroma-js\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    getRandomFn : function ( str ) {\n      var seed = 0;\n      for (var i in str) {\n        seed += str.charCodeAt(i) * i\n      }\n      function getRandom() {\n        var x = Math.sin(seed++) * 10000;\n        return x - Math.floor(x);\n      }\n\n      return getRandom;\n\n    },\n\n    getBrand : function( uid ) {\n      let randomFn = this.getRandomFn( uid );\n\n      let baseBrand = {\n        mainColor : \"#007abc\",\n        complementColor : \"\"\n      }\n\n      let brand = {\n        mainColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n        complementColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n      }\n\n      brand.mainColor = \"hsl( \" + brand.mainColor_hsl[0] + \",\" + brand.mainColor_hsl[1] + \"% ,\" + (brand.mainColor_hsl[2]) + \"%  )\"\n      brand.complementColor = \"hsl( \" + brand.complementColor_hsl[0] + \",\" + brand.complementColor_hsl[1] + \"% ,\" + (brand.complementColor_hsl[2]) + \"%  )\"\n\n      brand.fadedColor = \"hsla( \" + brand.mainColor_hsl[0] + \",\" + 10 + \"% ,\" + (brand.mainColor_hsl[2]) + \"%, 0.5  )\"\n\n      return brand;\n    },\n\n    getColor : function ( seed, baseColor  ) {\n\n        baseColor = baseColor || \"#007abc\";\n        let hue = seed * 360;\n        let color = chroma(\"#007abc\").set(\"hsi.h\", hue).hsl();\n    \n        color[1] = color[1] * 100;\n        color[2] = color[2] * 100;\n\n        return color;\n    },\n    get : function ( seed, count)  {\n\n        var str = seed; //faker.lorem.sentence(10);\n        var seed = 0;\n        for (var i in str) {\n          seed += str.charCodeAt(i) * i\n        }\n        function getRandom() {\n          var x = Math.sin(seed++) * 10000;\n          return x - Math.floor(x);\n        }\n\n        count = Math.max( 2, Math.floor( (getRandom() * 5 )) )\n\n        \n        \n        let scale =  50 / count ;\n\n        let color = this.getColor( getRandom() );\n\n        let pointsStar = [\n            [0, 0, 0.5, 0.5, 1, 0],\n            [0, 0, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 1, 0],\n        ]\n\n\n        \n        let polies = [];\n        for (var i = 0; i < count; i++) {\n          for (var j = 0; j < count; j++) {\n              let lum = 10; //points[i][j];\n              let x = i  * scale;\n              let y = j * scale;\n              let poly = pointsStar.map((poligonPoints) => {\n                let col = \"hsl( \" + color[0] + \",\" + color[1] + \"% ,\" + (color[2]) + \"%  )\";\n                let classname = Math.round( getRandom( ) * 5 );\n                let points = poligonPoints.map( ( value, i )  => {\n                  return value * scale + ( i %2 ? x : y)  } )\n                polies.push(`<polygon\n                  class='poligon poligon_${classname}'\n                  points=\"` + points.join(\" \") + `\" stroke=\"transparent\" fill=\"transparent\" \n                  style=\" strokeWidth: ` + (1 / scale) + `;\n                  fill: `+ col + `;\n                  opacity : `+ getRandom() + `; \n                  \" />`)\n\n              })\n            }\n          }\n\n        return \"<svg style='position :relative;width: inherit; height: inherit;'> \" + polies.join( \"\" ) + \"</svg>\"\n\n\n    }\n}\n\nvar test = (result) => {\n    \n}\n\ncu.brand = {\n    //test,\n\n    getLogo: function (seed, scale, count) {\n        let logo=  ub.get(seed,  count );\n        return logo;\n    },\n\n    getBrand : function ( uid ) {\n      return ub.getBrand( uid );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleBoard = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n\n    addItem : function ( obj ) {\n        let id = this.getId();\n        obj.id = id;\n        this.mergeItem( id, obj );\n        return id;\n    },\n\n    getId : function ( ) {\n        this.ctx.data.state.nextId++;\n\n        let id = \"bubble_\" + this.ctx.data.state.nextId;\n\n        return id;\n    },\n    mergeItem: function (id, value) {\n        let ctx = this.ctx;\n        let result = ctx.data.result[id];\n\n\n        ctx.changed = {};\n\n        this.appendTo(id, value)\n\n        let minStep;\n        let results = ctx.data.result;\n        let changed = ctx.changed;\n\n        console.log( ctx.data );\n        let versions = ctx.data.versions;\n\n        for ( var i in changed ) {\n            if ( !versions[i] ) versions[i] = 0;\n            versions[i]++;\n            let result = results[ i ];\n            if ( !result ) continue;\n            if ( !result.isReady ) continue;\n            if ( minStep == undefined ) minStep = result.completedAt;\n            if ( minStep > result.completedAt ) minStep = result.completedAt;\n        }\n\n        if (minStep !== undefined) {\n            this.rewindTo(minStep)\n        }\n\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( changed )\n        \n        return minStep;\n    },\n\n    rewindTo: function (step) {\n        let ctx = this.ctx;\n        for (var id in ctx.data.result) {\n            let result = ctx.data.result[id];\n            if (result.isReady && (result.completedAt >= step || result.createdAt > step)) {\n                result.isReady = false;\n                result.completedAt = 0;\n            }\n        }\n\n        ctx.data.step = step;\n    },\n\n    appendTo: function (id, values) {\n        let ctx = this.ctx;\n        let item = ctx.data.items[id];\n        let hasChanges = false;\n\n        if (!item) {\n            ctx.data.step++;\n            ctx.data.items[id] = item = {}\n            ctx.data.result[id] = { createdAt: ctx.data.step }\n            hasChanges = true;\n        }\n\n        for (var slot in values) {\n            let value = values[slot];\n            if ( value == \"REMOVE\" && item[slot] !== undefined ) {\n                delete item[slot];\n                hasChanges = true;\n                continue;\n            }\n            if ( value === null && item[slot] !== undefined ) {\n                delete item[slot]\n                hasChanges = true;\n                continue;\n\n            }\n\n            if ( !value ) continue;\n\n            let bubbleid = item[slot] ? item[slot].id : null;\n            if (_.isString(value) && value.charAt(0) == \"#\") {\n                value = {id : value.substring(1) };\n            }\n\n            if ( value.id !== undefined) {\n                if ( value.id == \"#\"  || value.id==\"\" ) value.id = null;\n                value.id = value.id || bubbleid || this.getId();\n                item[slot] = { id: value.id };\n            }\n\n\n            if (value.id && _.isObject(value)) {\n                if ( value.id != bubbleid ) hasChanges = true;\n                this.appendTo(value.id, value)\n            }\n\n            else if ( _.isObject( value ) && !_.isMatch(item[slot], value )) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n            else if ( item[slot]!=value) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n\n        }\n\n        if( hasChanges ) {\n            if ( item.version ) {\n                item.version = item.version ? item.version+1 : 1;\n            }\n            this.ctx.changed[ id ] =true;\n        }\n    },\n\n    evalItems: function (count) {\n        this.ctx.affected = {};\n        this._evalItems( count );\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( this.ctx.affected )\n        \n    },\n\n    _evalItems : function ( count ) {\n\n        if (count<=0) return;\n\n        let ctx = this.ctx;\n\n        let hasChanges = false;\n\n        for (var id in ctx.data.items) {\n            let item = ctx.data.items[id];\n            let result = ctx.data.result[id];\n\n            if (result && result.isReady) continue;\n            let values = this.isCompleteValues(item, id);\n            if (values) {\n                if (!ctx.data.result[id]) ctx.data.result[id] = {};\n\n                this.evalItem(item, id, values, ctx.data.result[id]);\n                if ( ctx.data.result[id].isReady )\n                    hasChanges = true;\n            }\n        }\n\n\n        if (hasChanges) this._evalItems(count - 1);\n    },\n\n    evalItem: function (item, id, values, result) {\n        let ctx = this.ctx;\n\n        result.isReady = true;\n        result.values = values;\n\n        let node = this.ctx.tb.getNode(item, values, result, ctx);\n        if ( node ) \n            result.node = node;\n\n        if ( result.isReady ) {\n            ctx.data.step++;\n            result.completedAt = ctx.data.step;\n            this.ctx.affected[ id ] = true;\n        }\n\n    },\n\n    isCompleteValues(item) {\n        //if (!this.ctx.tb.checkIfComplete(item)) return false;\n\n        let ctx = this.ctx;\n\n        let values = {};\n\n        let bellow = [];\n\n        for (var slot in item) {\n            let value = item[slot];\n            if (value.id) {\n                let bubble = ctx.data.result[value.id];\n\n                if (!bubble || !bubble.isReady) return false;\n\n                let node = bubble.node;\n\n                if ( item[slot+\"_path\"]) {\n                    node = _.get( node, item[slot+\"_path\"] )\n                }\n\n                values[slot] = node;\n            }\n            else values[slot] = value\n        }\n\n        return values;\n    },\n\n    init: function (ctx) {\n        let item = Object.create(this);\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data : {\n                items : {},\n                result : {},\n                step : 1,\n                versions : {},\n                trails : {},\n                rels : {\n                    bellow : {},\n                    above  : {},\n                    uses   : {}\n                },\n\n                state : {\n                    nextId : 8\n                }\n            },  \n            tb: {\n                checkIfComplete: (item) => item.type || item.tpl || item.node,\n                getNode: (item, values, result) => { return { val: values, x: item.tpl } }\n            }\n        })\n\n        ctx.master = item; \n        return item;\n    },\n\n    evaluateflow : function () {\n        this.evalItems(5);\n    },\n\n    getVersion : function ( id ) {\n        let item = this.ctx.data.items[ id ];\n\n        if ( !item ) return null;\n        return item.version;\n    }\n}\n\nvar test = (result) => {\n    let ctx = {\n        data: {\n            items: {},\n            result: {},\n            versions : {},\n            ants : {},\n            step: 1,\n        }\n    }\n\n    let nub = ub.init(ctx);\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salut\",\n        testval: \"#\"\n    })\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n    nub.evalItems(0);\n\n\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n\n\n    nub.evalItems(0);\n\n\n    result.ctx = ctx;\n}\n\ncu.bubbleFlow = {\n    //test,\n\n\n    run: function (ctx) {\n        return ub.init( ctx );\n    },\n    init: function () {\n\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\nvar fns = {}\n\nvar ub = {\n\n    ctx: {\n    },\n\n    doubleCheck: function (id) {\n        let tb = fns.evaluate.setup({ data: this.ctx.data, state: this.ctx.state }).target(id);\n\n        for (var i in checks)\n            tb.run(checks[i])\n    },\n\n    check: function (id) {\n        let item = this.ctx.data.items[id];\n        let result = this.ctx.data.result[id];\n        let shaddow = this.ctx.data.shaddow[id];\n\n        if (!shaddow)\n            shaddow = this.ctx.data.shaddow[id] = {}\n\n        let results = this.ctx.data.result;\n\n        let score = shaddow.score = {\n            subs: {\n                total: 0,\n                resolved: [],\n                unresolved: []\n            },\n        };\n\n        for (var slot in item) {\n            if (item[slot].id) {\n                score.subs.total++;\n\n                if (results[item[slot].id] && results[item[slot].id].isReady)\n                    score.subs.resolved.push({ slot: slot, id: item[slot].id });\n                else\n                    score.subs.unresolved.push({ slot: slot, id: item[slot].id });\n\n            }\n        }\n\n        if (result && result.values && result.values.tpl) {\n            let tpl = result.values.tpl;\n            score.tplParams = { total: 0, defined: 0, resolved: 0, unresolved: [] }\n            let parameters = tpl.mold.parameters;\n\n            for (var param in parameters) {\n                score.tplParams.total++;\n                if (result.values[param] || item[param]) {\n                    score.tplParams.defined++;\n                }\n                else {\n                    score.tplParams.unresolved.push(param)\n                }\n            }\n        }\n\n    },\n\n    setup: function (ctx) {\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data: {\n                items: {},\n                result: {},\n                shaddow: {},\n                trails: {}\n            }\n        })\n\n        return item;\n    }\n}\n\n\n\nfns.evaluate = {\n    target: function (id) {\n\n        let model = this.model || this;\n\n        var item = Object.create(model);\n\n        item.model = model;\n\n        item.setup();\n\n        item.v.targetId = id;\n\n        return item;\n    },\n    setup: function (opt) {\n        this._setup(opt);\n        return this;\n    },\n    _setup: function (opt) {\n        if (opt) Object.assign(this, opt)\n\n        if (this.model && this.model.shaft) {\n            this.shaft = {};\n        }\n\n        this.v = { result: {} };\n    },\n    get: function (key) {\n        if (!_.isString(key)) return key;\n        let id = this.v.targetId;\n\n        let fullPath;\n        if (key == \"values\")\n            fullPath = [\"result\", this.v.targetId, \"values\"]\n        if (key == \"item\")\n            fullPath = [\"items\", this.v.targetId]\n        else\n            fullPath = [key, \"id\"];\n        return _.get(this.data, fullPath)\n    },\n\n    getFull: function (route) {\n        let base = route[0];\n        let id = route[1];\n        let relPath = route[2];\n\n        if (!base) base = \"items\";\n        if (base == \"item\") base = \"items\";\n\n        if (!id) id = this.v.targetId;\n\n        let fullPath = [base, id]\n        if (relPath) fullPath.push(relPath);\n\n        return _.get(this.data, fullPath.join(\".\"))\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.v[i] = this.getFull(map[i])\n        }\n        return this;\n    },\n\n    it: function (collection, cb) {\n        collection = this.get(collection);\n\n        //let subTb = Object.create( this );\n        //subTb.v  = Object.create( this.v )\n\n        //prepare\n        let subTb = this;\n        let oldValues = {\n            slot: subTb.v.slot,\n            value: subTb.v.value,\n            info: subTb.v.info,\n            sub: subTb.v.sub\n        }\n        subTb.v.slot = null;\n        subTb.v.value = null;\n        subTb.v.info = null;\n        subTb.v.sub = null;\n        for (var i in collection) {\n            subTb.v.slot = i;\n            subTb.v.value = collection[i];\n            subTb.v.info = i;\n            subTb.v.sub = {};\n            cb(subTb, subTb.v)\n        }\n\n        //cleanup\n        for (var i in oldValues)\n            subTb[i] = oldValues[i]\n\n    },\n\n    run: function (cb) {\n        try {\n            let result = cb(this, this.v)\n        } catch (e) {\n            if (e && e.type == \"notApplicable\") {\n                return;\n            }\n            console.log(e)\n        }\n\n        if (this.v.result) {\n\n            if (!this.data.trails[this.v.targetId]) {\n                this.data.trails[this.v.targetId] = {};\n            }\n            Object.assign(this.data.trails[this.v.targetId], this.v.result)\n        }\n    },\n\n    result: function (name, value) {\n        this.v.result[name] = value;\n    },\n\n    check: function (paths) {\n        for (var i in paths) {\n            let path = paths[i];\n\n            if (path == \"isCurrentItem\") {\n                let stateCurrentId = this.state.currentItem.targetid;\n                if (!stateCurrentId || this.v.targetId != stateCurrentId)\n                    throw { type: \"notApplicable\", path: paths[i] }\n            }\n            else {\n                let value = _.get(this.v, paths[i]);\n                if (value === undefined) throw { type: \"notApplicable\", path: paths[i] }\n            }\n        }\n    }\n}\n\nfns.compile = Object.assign({}, fns.evaluate, {\n    setup: function (opt) {\n        this._setup(opt);\n\n        this.clues = {\n            needes: {},\n            provides: {},\n            collections: []\n        }\n\n        return this;\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.clues.needes[i] = { key: map[i] }\n            this.v[i] = { test: \"test\" }\n        }\n        return this;\n    },\n\n\n    check: function (check) {\n\n    },\n\n    result: function (name, value) {\n        this.clues.provides[name] = value;\n    },\n\n    it: function (collection, cb) {\n        this.clues.collections.push(collection)\n    },\n\n    run: function (cb) {\n        let result = cb(this, this.v);\n    }\n});\n\n\nvar checks = [\n\n    (tb, v) => {\n\n        tb.fetch({\n            item: [\"item\"]\n        })\n\n        v.score = {\n            total: 0,\n            resolved: [],\n            unresolved: []\n        }\n\n        tb.it(v.item, (tb, v) => {\n            let sub = v.value;\n            if (!sub.id) return;\n\n            v.score.total++;\n\n            let result = tb.getFull([\"result\", sub.id]);\n\n            if (!result || !result.isReady) v.score.unresolved.push(sub.id)\n            else v.score.resolved.push(sub.id)\n        })\n\n        tb.result(\"subScore\", v.score)\n        return { subScore: v.score }\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch({\n            values: [\"result\", \"\", \"values\"],\n            item: [\"item\"],\n            parameters: [\"result\", \"\", \"values.tpl.mold.parameters\"]\n        })\n\n        tb.check([\n            \"values.tpl\"\n        ])\n\n        v.score = { total: 0, defined: 0, undefined: [] }\n        v.params = {};\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n            v.score.total++;\n            if (!v.item[param] && !v.values[param])\n                v.score.undefined.push(param)\n        })\n\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n        })\n\n\n        v.score.undefinedCount = v.score.undefined.length;\n        v.score.definedCount = v.score.total - v.score.undefinedCount;\n\n        tb.result(\"tplParamsScore\", v.score);\n        tb.result(\"tplParams\", v.params)\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch(  {\n            trails : [\"trails\"],\n\n        })\n        tb.check([\n            \"isCurrentItem\"\n        ])\n\n        console.log(\"trails is currentItem\", v.trails);\n    }\n\n]\n\nvar test = (result) => {\n\n    ub.ctx.data = {\n        items: {\n            bubble1: {\n                slot1: \"salut\",\n                slot2: { id: \"bubble2\" }\n            },\n            bubble2: {\n                test: \"salut\"\n            }\n        },\n        result: {},\n        trails: {}\n    }\n\n    let tb = fns.evaluate.target(\"bubble1\");\n\n    tb.run(checks[0]);\n    tb.run(checks[1]);\n\n    result.tb = tb.v.result;\n    result.trails = ub.ctx.data.trails;\n}\n\ncu.bubbleGuns = {\n    //test,\n\n    setup: function (ctx) {\n        return ub.setup(ctx);\n    },\n    init: function () {\n\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n    ctx: {\n        tb: {\n\n            onchanged: function (changed) { },\n            getNode: function (item, values, result, ctx) {\n                return cu.bubbleTypes.dispatch.getNode(item, values, result, ctx)\n            }\n        },\n\n        data: {\n            state: {\n                nextId: 0\n            }\n        }\n    }\n}\n\n\nvar test = (result) => {\n    ub.ctx.data = { state: { nextId: 0 } };\n    ub.ctx.tb.guns = cu.bubbleGuns.setup(ub.ctx);\n    ub.ctx.tb.flow = cu.bubbleFlow.run(ub.ctx)\n\n    ub.ctx.tb.flow.mergeItem(\"item1\", {\n        id: \"item1\",\n        tpl: {\n            id: \"item2\",\n            type: \"tpl\",\n            main: \"<div style='border:1px solid #007abc'>{h1} {salut} {someothervalue}</div>\"\n        },\n        tpl_path: \"main\",\n        h1: \"noh\",\n        salut: {\n            id: \"item3\",\n            tpl: {\n                id: \"item4\",\n                type: \"tpl\",\n                main: \"<div style='border:1px solid #007abc'>{text}</div>\"\n            },\n            tpl_path: \"main\",\n            text: \"salutare\"\n        }\n    });\n\n\n    ub.ctx.tb.flow.mergeItem(\"item5\", {\n        id: \"item5\",\n        type: \"mirror\",\n        model: \"item1\",\n        data: {\n            id: \"item6\",\n            version: 1,\n            node: {\n                h1: \"hh1\",\n                salut: {\n                    text: \"hey\"\n                }\n            }\n        }\n    })\n\n\n\n    ub.ctx.tb.flow.evaluateflow();\n\n    ub.ctx.tb.flow.mergeItem(\"item6\", {\n        node: {\n            h1: \"hh11\",\n            salut: {\n                text: \"testchanged\"\n            }\n        }\n    })\n\n    ub.ctx.tb.flow.evaluateflow();\n\n\n    result.items = ub.ctx.data.items;\n    result.result = ub.ctx.data.result;\n    result.shaddow = ub.ctx.data.shaddow;\n    //result.item6_1 = ub.ctx.data.result.item5.mirror.node.children[0][0];\n    //result.item6_2 = ub.ctx.data.result.item5.mirror.node.children[0][2].children\n}\n\ncu.bubbleTest = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar type = {}\n\n\ntype.dispatch = {\n    getNode: function (item, values, result, ctx) {\n        let nodeType = values.type;\n        if (!nodeType) {\n            if (values.tpl) nodeType = \"reactNode\"\n\n            else if (values.node) nodeType = \"dataNode\"\n        }\n\n        if (nodeType && type[nodeType]) {\n            return type[nodeType].getNode(item, values, result, ctx)\n        }\n        else result.isReady = false;\n    }\n}\n\ntype.tpl = {\n    getNode: function (item, values, result, ctx) {\n        delete values.type;\n        let tpl = cu.tplObjParse.run(values);\n        result.viewAs = \"object\";\n        return tpl;\n    }\n}\n\ntype.dataNode = {\n    getNode: function (item, values, result, ctx) {\n        return item.node;\n    }\n}\n\ntype.reactNode = {\n    getNode: function (item, values, result, ctx) {\n\n        let tpl = values.tpl;\n        if (!tpl || !tpl.mold) {\n            result.isReady = false;\n            return;\n        }\n\n        let neededValues = [];\n        let node = cu.reactAssembler.run(tpl, values, (data, path, op) => {\n            let value = _.get(data, path);\n            if (value !== undefined) return value;\n            neededValues.push(path);\n            return \"dummyvalue\"\n        });\n\n        if (neededValues.length) {\n            node = [neededValues, node];\n        }\n        result.viewAs = \"reactComponent\"\n\n        result.cues = { pins: tpl.mold.pins }\n\n        return node;\n\n    }\n\n}\n\ntype.mirror = {\n\n    description: \"\",\n\n\n    getNode: function (item, values, result, ctx) {\n\n\n        let model = ctx.data.items[item.model];\n        let data = values.data;\n\n        let newItem = _.cloneDeep(model);\n\n        if (!result.bubbles) result.bubbles = {};\n        if (!result.cache) result.cache = { data: {} };\n\n        if (!_.isMatch(result.cache.data, data)) {\n            result.cache.data = data;\n\n            for (var i in newItem) {\n                if (i != \"tpl\" && newItem[i].id && data[i]) {\n                    if (result.bubbles[i]) {\n                        ctx.master.mergeItem(result.bubbles[i].id, { data: data[i] })\n                    }\n                }\n            }\n        }\n\n        for (var i in newItem) {\n            if (i != \"tpl\" && newItem[i].id && data[i]) {\n\n                if (result.bubbles[i]) {\n                    newItem[i] = { id: result.bubbles[i].id }\n                }\n                else {\n                    let newId = ctx.master.addItem({ type: \"mirror\", data: data[i], model: newItem[i].id })\n                    result.bubbles[i] = { id: newId, model: newItem[i].id };\n                }\n\n                newItem[i] = { id: result.bubbles[i].id }\n            }\n            else if (data[i]) {\n                newItem[i] = data[i]\n            }\n        }\n\n        newItem.id = item.id;\n\n        let newValues = ctx.master.isCompleteValues(newItem);\n\n        if (!newValues) {\n            result.isReady = false;\n            return;\n        }\n\n        result.mirror = {};\n        ctx.master.evalItem(item, item.id, newValues, result.mirror)\n        if (result.mirror.viewAs) result.viewAs = result.mirror.viewAs;\n        return result.mirror.node;\n    }\n}\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleTypes = {\n    //test,\n\n    mirror: type.mirrorBubble,\n\n    types: type,\n    dispatch: type.dispatch,\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar phase1 = {\n\n    run: function (html) {\n        html = html.trim();\n\n        let nest = document.createElement('div');\n        nest.innerHTML = html;\n\n        let specs = [];\n\n        for (var i = 0; i < nest.childNodes.length; i++) {\n            let el = nest.childNodes[i];\n\n            let spec = this._spec(el);\n\n            specs.push(spec);\n        }\n\n        return specs.length == 1 ? specs[0] : specs;\n    },\n\n\n    _spec: function (el) {\n\n        if (el.nodeType == 3) {\n            return el.nodeValue\n        }\n\n        let props = {};\n        for (var i = 0; i < el.attributes.length; i++) {\n            let attr = el.attributes[i];\n            let name = attr.name;\n            if (name.indexOf(\"_\") != -1) {\n                name = name.replace(/\\_(.)/g, (all, char) => { return char.toUpperCase() })\n            }\n            props[name] = attr.value;\n        }\n\n        if (props.class) {\n            props.className = props.class;\n            delete props.class;\n        }\n\n        if (props.style) {\n            props.style = this._style(props.style);\n        }\n\n\n        let spec = {\n          type: \"node\",\n          componentName: el.nodeName.toLowerCase(),\n          props: props,\n          children: null,\n      };\n\n        if ( props.htmlSlot ) {\n          props[ props.htmlSlot ] = el.innerHTML;\n          return spec;\n        }\n\n        if (Object.keys(props) == 0) props = null;\n\n        let children = []\n        el.childNodes.forEach(child => {\n            children.push(this._spec(child))\n        })\n        if (children.length == 0) children = null;\n        spec.children = children;\n\n        return spec;\n    },\n\n    _style: function (str) {\n        str = str + \";\";\n        let reg = /\\s*([^:\\s]+)\\s*\\:\\s*([^;]+)\\s*\\;+/g\n        let css = {};\n        let match;\n        while (match = reg.exec(str)) {\n            css[match[1]] = match[2]\n        }\n\n        return css;\n    },\n\n}\n\nvar phase2 = {\n    run: function (obj , attrs ) {\n      let payload = {\n        ops: [],\n        pins: {},\n        parameters : {},\n        attrs : {},\n        watchAttrs : attrs || []\n      }\n  \n      if ( _.isArray( obj ) )\n        payload.tpl = obj.map(( obj, i)  => this.iterate(obj, [i], payload) )\n      else \n        payload.tpl = this.iterate(obj, [], payload)\n\n      payload.ops.sort ( (a,b) => a.stage - b.stage )\n  \n      return { ops: payload.ops, tpl: payload.tpl, pins : payload.pins , parameters : payload.parameters, attrs : payload.attrs}\n    },\n    iterate: function (obj, path, payload) {\n      if (!obj) return;\n  \n      if (_.isString(obj)) {\n        return this.opValues(obj, path, payload, false);\n      }\n  \n      obj = this.handleObj(obj, path, payload);\n  \n      let childrenPath = path.concat([\"children\"])\n      for (var i in obj.children) {\n        obj.children[i] = this.iterate(obj.children[i], childrenPath.concat(i), payload)\n      }\n  \n      let subPath = path.concat([\"props\"])\n      for (var i in obj.props) {\n        if (i == \"style\") continue;\n        obj.props[i] = this.handleProp(obj.props[i], subPath.concat(i), obj, payload)\n      }\n  \n      if (obj.props && obj.props.style) {\n        let subPath = path.concat([\"props\", \"style\"])\n        for (var i in obj.props.style) {\n          obj.props.style[i] = this.handleProp(obj.props.style[i], subPath.concat(i), obj, payload)\n        }\n      }\n  \n      if (obj.props && obj.props.pin) {\n        payload.pins[ obj.props.pin ] = path;\n      }\n\n      if (obj.props && obj.props.id) {\n        payload.pins[ obj.props.id ] = path;\n      }\n\n      if ( obj.props )\n        payload.watchAttrs.forEach( attr => {\n            if ( !obj.props[attr] ) return ;\n            if ( !payload.attrs[attr] ) payload.attrs[ attr ] = [];\n            payload.attrs[ attr ].push({  path, value : obj.props[attr] } );\n        })\n  \n      return obj;\n    },\n  \n    handleObj: function (obj, path) {\n      return obj;\n    },\n  \n    handleProp: function (obj, path, parent, payload) {\n      if (!_.isString(obj)) return obj;\n  \n      return this.opValues(obj, path, payload, true)\n    },\n    addOp: function (payload, path, op) {\n\n        if ( !op.stage ) op.stage = 0;\n      payload.parameters[ op.action ] = op.path;\n      payload.ops.push(op)\n    },\n  \n    prepareAction: function (item) {\n      return item;\n    },\n    opValues: function (value, path, payload, concatOp) {\n      if (!_.isString(value)) return value;\n      if (value.indexOf(\"{\") == -1) return value;\n  \n      let ops = payload.ops;\n      let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}/g);\n      values = values.map((item, i) => {\n        if (item == \"\") return null\n        if (item.charAt(0) !== \"{\") return item;\n  \n        item = item.substring(1);\n        let action = this.prepareAction(item)\n        return { type: \"value\", action: action };\n      })\n        .filter(item => item)\n  \n  \n      if (values.length == 0) return null;\n      else if (values.length == 1) {\n        values = values[0];\n        if (values.type) {\n          values.path = path;\n        }\n        if ( _.isObject( values ))\n          this.addOp(payload, values.path, values)\n        return values;\n      }\n      else if (!concatOp) {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.stage = 0;\n            this.addOp(payload, path, item);\n  \n            return item;\n          }\n          else return item;\n        })\n        return values;\n      }\n      else {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.concatParent = true;\n            item.stage = 0;\n\n            this.addOp(payload, path, item);\n            return item;\n          }\n          else return item;\n        })\n        this.addOp(payload, path, { path: path, type: \"concat\", ops: values, stage : 1 });\n        return values;\n      }\n  \n    }\n  \n  }\n\n\nvar ub = {\n    run : function ( html , attrs ) {\n        var result = phase1.run( html );\n        result = phase2.run( result, attrs );\n\n        return result;\n    }\n}\n\nvar test = (result) => {\n    result.output = ub.run( \"<div>Salut {#test} </div>\");\n}\n\ncu.parseStringIntoComp = {    \n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n    def: `\n        @obj string \n        transform it into componentsObjects\n    `\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport js_beautify from \"js-beautify\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n\n    makestr : function ( obj, indent ) {\n        if ( _.isFunction( obj ) ) return obj.toString();\n        if ( _.isString( obj ) ) {\n \n            let usequouts = '\"';\n            if ( obj.indexOf( \"\\n\") != -1 ) usequouts = \"`\";\n            if ( obj.indexOf('\"') != -1 ) usequouts = \"`\";\n            \n            if (usequouts == \"`\") {\n                obj = js_beautify.html( obj, { \n                    indent_size : 2,\n                    indent_level : indent + 1,\n                    preserve_newlines : true,\n                    max_preserve_newlines : 0,\n                    indent_inner_html: true,\n                } )\n\n                obj = obj.trimStart();\n            }\n            return usequouts + obj + usequouts\n        }\n        if ( _.isArray(obj)) {\n            let lines = [];\n            for ( var i in obj ) {\n                let value = this.makestr( obj[i] , indent + 1);\n\n                lines.push( value)\n            }\n\n            return \"[\" + lines.join(\",\\n\") + \"]\";\n        }\n\n        if ( _.isObjectLike(obj)) {\n            let lines = [];\n            let multiLine = false;\n            for ( var i in obj ) {\n                let slot = i;\n                let value = this.makestr( obj[i], indent + 1 );\n\n                if ( !slot.match( /^[a-z0-9$_]+$/) ) slot = '\"' + slot + '\"'\n\n                if ( value.indexOf(\"\\n\") != -1 ) multiLine = false;\n                lines.push( slot + \":\" + value )\n            }\n\n            return \"{\" + lines.join(\",\") + \"}\"\n        }\n        \n        if ( _.isNil( obj )) return \"null\"\n\n        return obj.toString();\n    },\n\n    beautify : function ( str ) {\n        return js_beautify.js_beautify( str, {\n            indent_size :2 ,\n            indent_level : -1, \n            max_preserve_newlines : 1,\n            preserve_newlines : true\n        } )\n    }\n}\n\nvar test = (result) => {\n\n    var obj = {\n        tpl : `<div>s\nce mai faci <span>\nsdf</span>\n        alut</div>`,\n        fn : function ( ) {\n\n        },\n        \"#b ce mai faci\" : \"\",\n        x : {\n            \"test\" : \"salut\" \n        }\n    }\n\n    result.str = ub.makestr( obj ,10 )\n    result.beuaty = js_beautify.js_beautify( result.str, {\n        indent_size :2 ,\n        indent_level : -1, \n        max_preserve_newlines : 1,\n        preserve_newlines : true\n    } )\n}\n\ncu.prettyScode = {\n    //test,\n\n    run: function (name) {\n        let str =  ub.makestr(name, 1)\n        return ub.beautify( str );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {}\n    },\n\n    run: function (model, data, getter ) {\n        model = _.cloneDeep( model );\n        let obj = model.mold.tpl;\n\n        this.applyOps( model.mold.ops, obj , data,  getter );\n\n\n        if ( obj.props ) \n            obj.props.tplid = model.uid;\n        \n\n        return obj;\n    },\n\n    applyOps : function ( ops, obj, data, getter ) {\n        let get = getter || _.get;\n\n        let newOps = [];\n        for (var i = 0; i < ops.length; i++) {\n\n            let op = ops[i];\n\n            if (op.type == \"value\") {\n                let value = get(data, op.action, op, newOps);\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"computedValue\") {\n                let value = op.value;\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"concat\") {\n                let value = get(obj, op.path, op, newOps).join(\"\");\n                _.set(obj, op.path, value)\n            }\n        }\n\n        if ( newOps.length ) \n            this.applyOps( newOps, obj, data, getter )\n    },\n\n\n}\n\n\nvar inputs = {\n    data: {\n        \"#color\": 12,\n        \"#handle\": \"handle\",\n        \"#test2\": \"test2\",\n        \"#test1\": \"test1\",\n        \"#title\": \"title it is\",\n    }\n}\n\nvar test = (result) => {\n\n    let mold = cu.tests.get(\"mold.x\");\n\n    if (!mold) return \"pending\";\n\n    let value = ub.run(mold, inputs.data);\n\n    result.value = value;\n    result.mold = mold;\n\n    cu.tests.pin( \"reactTree\", value)\n\n    //result.mold = value;\n}\n\ncu.reactAssembler = {\n    //test,\n\n    run: function (mold, data, getter) {\n        return ub.run(mold, data, getter)\n    },\n\n    init: function () {\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\n\nclass MyInput extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        value : \"\"\n      }\n\n      this.onChange = this.onChange.bind( this );\n    }\n\n    onChange ( evt ) {\n      this.setState( {value : evt.target.value});\n\n      if ( this.props.onChange ) this.props.onChange( evt );\n    }\n  \n\n    componentWillReceiveProps(nextProps) {\n      if ( nextProps.value!==undefined && nextProps.value.text!==undefined) this.setState({value : nextProps.value.text})\n    }\n\n    render () {\n\n      let props = Object.assign({}, this.props, {value : this.state.value, onChange : this.onChange })\n      \n      return React.createElement(\"input\", props, null);\n    }\n  }\n\n  export default MyInput;","import _ from \"lodash\"\nimport faker from \"faker\"\nimport React, { Component } from 'react';\nimport MyInput from \"../../components/MyInput\"\nvar cu = window.cu;\n\n\nvar customComponents = {\n  myinput : MyInput\n}\n\n\nvar ub = {\n\n    makeComponent : function (obj, i ) {\n        if (!obj) return null;\n        if (_.isString(obj)) return obj;\n        if (_.isArray(obj)) return obj.map((obj, i) => this.makeComponent(obj, i))\n        if ( !obj.componentName) return null;\n    \n        let children = null;\n        if (obj.children) children = obj.children.map((obj, i) => this.makeComponent(obj, i));\n    \n        let props = null;\n        if (obj.props) props = _.cloneDeep(obj.props);\n    \n        if (props && !props.key) props.key = i;\n        if (!props) props = { key: i }\n    \n        if (obj.componentName == \"style\") {\n          children = [_.flattenDeep(children).join(\"\")]\n        }\n    \n        let component = obj.componentName;\n        if (customComponents[component]) component = customComponents[component];\n    \n        var node;\n        try {\n          node = React.createElement(component, props, children)\n        } catch (e) {\n          console.error(e)\n          node = \"error\"\n        }\n        return node;\n        },\n\n}\n\nvar test = (result) => {\n}\n\ncu.reactUtils = {\n    //test,\n\n    makeComponent: function (tplComponent) {\n        return ub.makeComponent(tplComponent, 1)\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport $ from \"jquery\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    createStore : function ( tb, hapi, fns  ) {\n        if ( tb.cache.store ) return tb.cache.store;\n\n        let tpls = {\n          changeValueTpl : ( path ) =>  {\n            return function ( evt ) {\n              let value = evt.target.value;\n              hapi.set( path, value )\n            }\n          }, \n          runActionTpl : ( action ) => {\n            return function ( evt ) {\n              if ( hapi[action] ) return hapi[action]( evt );\n            }\n          },\n          runWithActionTpl : ( action ) => {\n            return function ( evt ) {\n                let target = evt.target;\n                let attr = $(target).attr( action[1])\n                if ( attr === undefined ) {\n                    target = $(target).parents(\"[\" + action[1] + \"]\")\n                    attr = $(target[0]).attr( action[1])\n\n                }\n\n              if ( hapi[action[0]] ) return hapi[action[0]]( attr, evt );\n            }\n          }\n\n        }\n\n\n        let store = {}\n  \n        for ( var i in fns.change ) {\n          store[i]  = tpls.changeValueTpl( fns.change[ i ])\n        }\n  \n  \n        for ( var i in fns.run ) {\n            store[i]  = tpls.runActionTpl( fns.run[ i ])\n          }\n\n          \n            \n        for ( var i in fns.runWith ) {\n            store[i]  = tpls.runWithActionTpl( fns.runWith[ i ])\n          }\n  \n        tb.cache.store = store;\n        return store;\n      }\n\n}\n\nvar test = (result) => {\n}\n\ncu.store = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    get : function ( tb, hapi,  fns ) {\n        return ub.createStore( tb, hapi, fns )\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            data: {\n\n                items: {},\n                subs: {},\n            },\n\n            src: {\n                getItem: function (id) {\n\n                },\n\n                getSubs: function (id) {\n\n                }\n            },\n\n            tpls: [],\n            registerTpl: function (args, master) {\n                this.tpls.push(args.path);\n            },\n\n            cases: [\n                result => {\n                    let isApplicable = !result.obj.item;\n\n                    if (!isApplicable) return;\n\n                    let id = result.obj.id;\n                    let item = ub.ctx.payload.data.items[id]\n\n                    if (!item) {\n                        item = {\n                            text: faker.company.catchPhrase(),\n                            id: id\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"items\", id], _.cloneDeep(item) )\n                    }\n\n\n                    result.obj.item = item;\n                    return \"applied\";\n                },\n\n                result => {\n                    let isApplicable = !result.obj.subs && result.obj.item && result.obj.level < 4;\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let id = result.obj.id;\n\n                    let subs = ub.ctx.payload.data.subs[id];\n\n                    if (!subs && !ub.ctx.payload.generated) {\n                        subs = {};\n\n                        let count = 4;\n                        for (var i = 0; i < count; i++) {\n                            let id = faker.random.uuid();\n                            let tpl = null;\n                            if (obj.level == 1) tpl = faker.random.arrayElement([null, \"columns\"]);\n                            let sub = {\n                                id: id,\n                                level: result.obj.level + 1,\n                                tpl: tpl\n                            }\n\n                            subs[id] = sub;\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"subs\", id], _.cloneDeep( subs ) )\n\n                    }\n\n                    if ( !subs ) subs = {}\n\n                    result.obj.subs = subs;\n                    result.subs = subs;\n\n                    return \"applied\";\n                }\n            ]\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run: function (obj, attrs) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs || [];\n\n        let mold = this.it(obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar inputs = {\n    items: { level: 0 },\n    subs: {},\n}\nvar test = (result) => {\n    let value = ub.run(inputs.items);\n\n    result.x = value;\n\n\n    cu.tests.pin(\"testRepo\", value)\n    //result.mold = value;\n}\n\ncu.testDataGenerator = {\n    //test,\n\n    run: function (id, data, generated,  setter) {\n\n        ub.ctx.payload.data = data;\n        ub.ctx.payload.setter = setter;\n        ub.ctx.payload.generated = generated;\n\n        return ub.run({ id: id || \"root\", level: 0 }, [])\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb : {}\n    },\n\n    run : function ( str ) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run( mold , [\"comp\"] );\n\n        return mold;\n    },\n\n\n}\n\n\nvar inputs = {\n    tplTree : {\n        x : `<div> <div id='title' comp='salut' class='{#test1} {#test2}' style='color : {#color}'> {#handle} : {#title}\n        \n        \n            <style>\n                @input \n                .column  { x : 12; background : {styleforred}red;}\n            </style>\n        </div> `\n    }\n}\nvar test = (result) => {\n    let value = ub.run( inputs.tplTree);\n\n    result.x = value.x.mold;\n\n    cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n}\n\ncu.testMolds = {\n    //test,\n\n    run: function (obj) {\n        return ub.run(obj, [])\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport $ from \"jquery\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n\n        wallet: {}\n    },\n\n    run: function (str) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run(mold, [\"comp\"]);\n\n        return mold;\n    },\n\n    parseTpl: function (obj) {\n        let mold = this.ctx.tb.parser.run(obj, [\"comp\"]);\n        return mold;\n    },\n\n    renderTpl: function (mold, data, getter) {\n        return this.ctx.tb.reactAssembler.run(mold, data, getter)\n    },\n\n    assembleTpl: function (mold, data) {\n        if (_.isString(mold)) mold = _.get(this.ctx.payload.molds, mold);\n        return this.ctx.tb.reactAssembler.run(mold, data, (data, path) => {\n            let value = _.get( data, path );\n            if ( value.node ) return value.node;\n            return value;\n        })\n    },\n\n\n    iterateBubbles: function (bubbles, count ) {\n        if ( count == undefined ) count = 0;\n\n        if ( count && count > 5 ) return;\n\n        bubbles = bubbles || this.ctx.payload.bubbles;\n\n        let changed = false;\n        for (var i = 0; i< bubbles.length; i++ ) {\n            let bubble = bubbles[i];\n\n            if ( bubble.isReady ) continue;\n\n\n            let shouldAssemble = true;\n\n            for (var j in bubble) {\n                if (bubble[j].tpl) {\n                    if ( !bubble[j].isRegistered ) {\n                        bubble[j].isRegistered = true;\n                        this.addBubble( bubble[j] )\n                    }\n                    if (!bubble[j].isReady) {\n                        shouldAssemble = false;\n                        continue;\n                    }\n                }\n            }\n\n            if (shouldAssemble) {\n                let node = ub.assembleTpl(bubble.tpl, bubble);\n                bubble.node = node;\n                bubble.isReady = true;\n                bubble.computedAtStep = this.ctx.payload.step++;\n                changed = true;\n            }\n        }\n        if ( changed)\n            this.iterateBubbles( bubbles, count+1)\n\n    },\n\n    addBubble: function (bubble) {\n        bubble.uid = cu.uids.run(\"bubble\");\n        bubble.addedAtStep = this.ctx.payload.step;\n        this.ctx.payload.bubbles.push(bubble);\n        //this.iterateBubbles();\n    },\n\n    start: function (molds) {\n        this.ctx.payload = {\n            bubbles: [],\n            molds: molds,\n            step : 0,\n        }\n    }\n\n}\n\n\nvar inputs = {\n    tplTree: {\n        x: `\n            <div><input id='order' syncwith={value} />\n            {value} \n            <div id='menu'> </div>\n            <div id='bar'> </div>\n            <div id='window' > {content}</div>\n            </div>\n        `,\n        y: \"salut {#test} salutare din alt template \"\n    }\n}\nvar test = (result) => {\n\n    ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n    ub.addBubble({\n        tpl: \"x\", \n        value : \"salutare\", \n        value_setter : () => { console.log( \"setting\")},\n        content : {\n            tpl : \"y\",\n            \"#test\" : \"yo\"\n        }\n    })\n\n    ub.iterateBubbles();\n\n    result.bubbles = ub.ctx.payload;\n    //cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n    //return nodes;\n}\n\nlet data = window.salut = { value: \"elefant\" }\ncu.testTplAssembing = {\n    //test,\n\n    run: function () {\n        ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n        ub.addBubble({\n            tpl: \"x\", \n            value : \"salutare\", \n            value_setter : () => { console.log( \"setting\")},\n            content : {\n                tpl : \"y\",\n                \"#test\" : \"yo\"\n            }\n        })\n    \n        ub.iterateBubbles();\n    \n        //result.bubbles = ub.ctx.payload;\n        return ub.ctx.payload.bubbles[0].node;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            tpls: {},\n            registerTpl: function (args, result,  master) {\n\n                result.obj.uid = cu.uids.run();\n\n                if ( result.obj.mold.props ) result.obj.mold.props.tplId = result.obj.uid;\n                //this.tpls.push(args.path);\n\n                this.tpls[ args.path.join(\".\") ] = result.obj.uid;\n            }\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: obj,\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.sub) {\n            let ret = this.it(result.sub[i], path.concat(i));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n        let checks = {\n            isString: result => result.obj && result.obj.trim,\n            isUnparsedTpl: result => result.obj && result.obj.html && !result.obj.mold,\n            isList: result => true\n        }\n\n        let cases = {\n            \"isString\": (result) => {\n                result.values = result.obj = { html: result.obj };\n                result.sub = [];\n                return \"applied\";\n            },\n            \"isUnparsedTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseHtml.run( result.obj.html, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n        }\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _check = checks[i];\n                if (!_check(result)) continue;\n\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op, result, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.values;\n    }\n}\n\nvar test = (result) => {\n    let value = ub.run({ x: `\n        <div pin = \"test\" > \n        <input id=\"dalut\" test=\"{salut}\" />\n            <div> \n                    <div xid='x{#tes}'> \n                    </div>\n            </div>\n\n        </div>\n    `, y: { a: { b: `\n    \n        <div id='yo'> Salutare </div>\n    ` } } }, []);\n    //value = ub.it(value, []);\n\n    result.mold = value;\n}\n\ncu.tplObjParse = {\n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parseHtml = cu.parseStringIntoComp;\n    },\n    \n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n        payload1: {\n            tplsMapping: [\n                \"map\",\n                \"topic\",\n                \"item\",\n                \"entry\"\n            ],\n            defaultTpl: \"item\",\n            usedGlobalStyles: {},\n\n\n            addSubs: function (args, result, master) {\n                result.obj.subs = result.values;\n                //console.log( arguments );\n\n                let obj = result.obj;\n                let content = [];\n                for (var i in result.values) {\n                    let item = result.values[i];\n                    if (item.nodes && item.nodes.card)\n                        content.push(item.nodes.card)\n                }\n\n                if (content) {\n                    result.obj.nodes.content = master.ctx.payload.useTemplate(obj.tpl + \".content\", { subs: content });\n                }\n\n                let data = result.obj.nodes;\n                result.obj.nodes.card = master.ctx.payload.useTemplate(obj.tpl + \".card\", data)\n\n            },\n\n            useTemplate: function (tpl, data, skipGlobalStyle) {\n\n                if (!skipGlobalStyle) {\n                    let route = tpl.split(\".\");\n                    let root = ub.ctx.wallet.molds;\n\n                    for (var i = 0; i < route.length; i++) {\n                        let step = route[i];\n                        if (root[step].globalStyle) {\n                            let id = root[step].globalStyle.uid;\n                            this.usedGlobalStyles[id] = { parent: root[step] };\n                        }\n                        if (root[step])\n                            root = root[step];\n                        else break;\n                    }\n                }\n\n                let mold = _.get(ub.ctx.wallet.molds, tpl); // .item.title;\n                return ub.ctx.tb.reactAssembler.run(mold, data)\n            },\n            cases: [\n                (result, master) => {\n\n                    let isApplicable = !result.obj.data\n                    if (!isApplicable) return;\n\n                    let tpls = master.ctx.payload.tplsMapping;\n\n                    let defaultTpl = tpls[result.obj.level] || master.ctx.payload.defaultTpl;\n\n\n                    let obj = {\n                        tpl: result.obj.tpl || defaultTpl,\n                        data: result.obj.item,\n                        level: result.obj.level,\n                        nodes: {}\n                    }\n\n                    result.subs = result.obj.subs;\n                    result.obj = obj;\n                    result.ops.push({ name: \"addSubs\", args: \"subs\" })\n\n                    return \"applied\"\n                },\n\n                (result, master) => {\n                    let isApplicable = !result.obj.nodes.title\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let mold = ub.ctx.wallet.molds.item.title;\n                    let values = {\n                        title: result.obj.data.text,\n                        level: result.obj.level\n                    }\n\n                    result.obj.nodes.title = master.ctx.payload.useTemplate(obj.tpl + \".title\", values);\n\n                    return \"applied\"\n                },\n\n\n            ]\n\n        },\n\n    },\n\n    getMolds: function (tpls) {\n        let molds = this.ctx.tb.parser.run(tpls);\n        return molds;\n    },\n\n\n    buildTpls: function (data) {\n        let node = this.ctx.tb.iterator.run(data, { payload: this.ctx.payload1 });\n        return node;\n    },\n\n    addGlobalStyles: function (nodes, gbs) {\n        let styles = [];\n        gbs = gbs || this.ctx.payload1.usedGlobalStyles\n\n\n        var parent;\n\n        let makeSelector = (path) => \"[tplid='\" + parent[path].uid + \"']\";\n\n        let getter = (data, path) => {\n            if (parent[path]) {\n                return makeSelector(path)\n            }\n            else if (path == \"*\")\n\n                return Object.keys(parent).filter(item => item != \"globalStyle\").map(item => makeSelector(item)).join(\",\")\n\n            return _.get(data, path)\n        }\n\n        let data = { color: \"red\" }\n        for (var i in gbs) {\n            parent = gbs[i].parent;\n            let style = ub.ctx.tb.reactAssembler.run(parent.globalStyle, data, getter)\n            styles.push(style)\n        }\n\n        if (styles.length) {\n            nodes = [nodes, styles];\n        }\n        return nodes;\n    }\n}\n\nvar input = {\n    tpls: {\n        map: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div>{subs}</div>\",\n            card: \"<div class='map'>{title} {content} </div>\",\n            style: `\n\n            `\n        },\n        topic: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='topic'>{title} {content} </div>\"\n        },\n        item: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='item'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n        entry: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\"\n        },\n\n        summart: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>summary</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n\n        columns: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='columns'>{title} {content} </div>\",\n            globalStyle: `<style htmlSlot='content'>\n               {content} { display : flex; background : hsla(100, 50%, 70%, 0.4)}\n               {content}>* { flex-basis : 100px; padding :0px 10px; border-left : 1px solid red; }\n         \n            </style>`\n        },\n    }\n}\n\nvar test = (result) => {\n    let wallet = {\n        molds: ub.getMolds(input.tpls),\n        repo: cu.tests.get(\"testRepo\"),\n    }\n\n    ub.ctx.wallet = wallet;\n\n    wallet.tpls = ub.buildTpls(wallet.repo);\n\n    let card = wallet.tpls.nodes.card;\n    card = ub.addGlobalStyles(card)\n    cu.tests.pin(\"testRoot\", card)\n    Object.assign(result, wallet)\n}\n\ncu.treeCardsBuilder = {\n    //test,\n\n    run: function (obj) {\n\n        let wallet = ub.ctx.wallet = {\n            molds : obj.molds,\n            repo  : obj.data\n        };\n\n        Object.assign(ub.ctx.payload1, {\n            tplsMapping: obj.mappings.tplsMapping,\n            defaultTpl: obj.mappings.defaultTpl, \n            usedGlobalStyles: {},\n        });\n\n        wallet.tpls = ub.buildTpls(wallet.repo);\n\n        let card = wallet.tpls.nodes.card;\n        card = ub.addGlobalStyles(card)\n\n        return card;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n        ub.ctx.tb.iterator = cu.treeIterator;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result, this);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, result,  this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar test = (result) => {\n}\n\ncu.treeIterator = {\n    //test,\n\n    run: function (obj, ctx ) {\n        let mub = Object.create( ub )\n        mub.ctx = ctx;\n        if ( !ctx.payload ) ctx.payload = { cases : [] }\n        return mub.run(obj, [])\n    },\n\n    init : function ( ) {\n        //ub.ctx.tb.parser = cu.tplObjParse;\n        //ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n}\n\nvar test = (result) => {\n}\n\ncu.uids = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\nfor (var i in cu) {\n    if (cu[i].init) cu[i].init();\n}\n\n\n\ncu.tests = {\n    wallet: {\n        test: {},\n        pins: {},\n        pending: []\n    },\n    pin: function (name, value) {\n        this.wallet.pins[name] = value;\n    },\n    get: function (name) {\n        let value = _.get(this.wallet.pins, name);\n        if (!value) value = _.get(this.wallet.test, name);\n        return value;\n    }\n}\n\n\nfor (var i in cu) {\n    if (cu[i].test) {\n        cu.tests.wallet.pending.push(i);\n\n    }\n}\n\n\nlet passes = 0;\nwhile (passes < 5 && cu.tests.wallet.pending.length) {\n    let i = cu.tests.wallet.pending.shift();\n    passes++;\n    let result = {};\n    let ret;\n    try {\n        ret = cu[i].test(result);\n    } catch (e) {\n        console.log(\"error when running \", i, e)\n    }\n\n    if (ret == \"pending\") {\n        cu.tests.wallet.pending.push(i)\n        continue;\n    }\n    console.group(\"test for \", i)\n\n    cu.tests.wallet.test[i] = result;\n\n    if (ret) console.log(ret)\n    if (Object.keys(result)) {\n        for (var i in result) console.log(i, result[i])\n    }\n    console.groupEnd();\n}\n\nif (cu.tests.wallet.pending.length)\n    console.error(\"error with tests : \")\n\n\n","\nimport cu from './main.js';\nimport './units/brand.js';\nimport './units/bubbleBoard.js';\nimport './units/bubbleFlow.js';\nimport './units/bubbleGuns.js';\nimport './units/bubbleTest.js';\nimport './units/bubbleTypes.js';\nimport './units/db.js';\nimport './units/parseStringIntoComp.js';\nimport './units/prettyScode.js';\nimport './units/reactAssembler.js';\nimport './units/reactUtils.js';\nimport './units/store.js';\nimport './units/testDataGenerator.js';\nimport './units/testMolds.js';\nimport './units/testTplAssembling.js';\nimport './units/tplObjParse.js';\nimport './units/treeCardsBuilder.js';\nimport './units/treeIterator.js';\nimport './units/uids.js';\nimport './init.js';\nexport default cu;\n   ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager\";\nimport KeyboardManager from \"./managers/KeyboardManager\"\nimport StaticManager from \"./managers/StaticManager\"\nimport { TimerManager as TimerManagerBuilder } from \"./managers/TimerManager\"\nimport PouchDB from \"pouchdb\"\nimport js_beautify from \"js-beautify\"\nimport { fchown, link, fstat } from 'fs';\nimport { debug } from 'util';\nimport faker from 'faker'\nimport { timingSafeEqual } from 'crypto';\nimport cu from \"./units/\"\nimport { delay } from 'q';\n\nvar fns = window.fns = {}\n\nwindow.$ = $;\n\nvar ctxpins = window.ctxpins = {};\n\nvar customComponents = {\n  codemirror: CodeMirrorEditor\n}\n\nvar DataManager = window.DataManager;\nDataManager.newAPI = true;\n\nvar TimerManager = TimerManagerBuilder.init(DataManager);\n\n//--------------------\nwindow.$ = $;\n\nvar pinedTasks = `\n`\n\nvar hapi = {\n  showhud: function () {\n    let currentView = DataManager.getValue(\"workingant.viewState.path\");\n\n    console.log(currentView);\n    currentView = currentView == \"antView.map.nodes\" ? \"bridge\" : \"map\"\n\n    this.goToCard(currentView);\n\n    //DataManager.set(\"workingant.viewState.path\", currentView);\n  },\n  placeorder: function (evt) {\n    if (evt.which !== 13) return;\n\n    flow.place();\n    DataManager.set(\"workingant.data.input\", { text: \"\" })\n    flow.restart();\n  },\n  set: function (path, value) {\n    DataManager.set(path, value)\n  },\n  parseinput: function () {\n    let text = DataManager.getValue(\"workingant.data.input\");\n    if (_.isString(text))\n      flow.parse(text)\n  },\n\n  select: function (id) {\n    console.log( \"selecting\", id )\n    flow.change({ parent: id })\n    DataManager.set(\"repo.uistate.selected\", id)\n\n    $(\"#order\").focus();\n\n    myUB.afterRenderActions.add( \"scrollIntoViewSelected\")\n  },\n\n  goToCard: function (id) {\n    var cards = {\n      bridge: \"antView.bridge.nodes\",\n      map: \"antView.map.nodes\"\n    }\n\n    let path = cards[id];\n\n    if (id == \"bridge\") {\n      myUB.bridgeLoader.loadBridge();\n    }\n\n    DataManager.set(\"workingant.viewState.path\", path);\n\n  },\n\n  selectMap: function (id) {\n    console.log(\"selecting map\", id);\n    myUB.mapview.loadMap(id)\n    this.goToCard(\"map\");\n  },\n}\n\nDataManager.setTrigger(\"workingant.data.input\", \"ada\", {\n  run: hapi.parseinput\n})\n\n\nDataManager.setCombined(\"ub.flow\", {\n  start: function () {\n    this.wallet = {\n      step: { createdAt: new Date().getTime() },\n    }\n  },\n\n  parse: function (input) {\n    if ( input.indexOf( \".s\") == 0 ) {\n\n\n      this.wallet.step.showSearch = true;\n      this.wallet.step.noPlace = true;\n    }\n    else {\n      this.wallet.step.showSearch = false;\n      this.wallet.step.noPlace = false;\n    }\n\n    var result = input.match(/^(\\.[^\\s]+\\s+)*/)\n    var text = input.substr(result[0].length)\n    var dirs = result[0].trim().split(\" \");\n\n    if (!this.wallet.step.editStartedAt) this.wallet.step.firstCharAt = new Date().getTime();\n\n    this.wallet.step.text = text;\n  },\n\n  place: function () {\n    let ant = {\n      text: this.wallet.text,\n      id: myUB.antsDbState.getId(),\n      times: {\n        createdAt: this.wallet.step.createdAt,\n        firstCharAt: this.wallet.step.firstCharAt,\n        addedAt: new Date().getTime()\n      }\n    };\n\n    let parent = this.getParent();\n\n\n\n  }\n\n})\n\nvar flow = {\n\n  start: function () {\n    this.wallet = {\n      step: {},\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  restart: function () {\n    let prevStep = this.wallet.step;\n    this.wallet = {\n      step: {\n        parent: prevStep.parent\n      },\n      startedAt: new Date().getTime(),\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  parse: function (text) {\n    this.wallet.parser.parse(this.wallet, text)\n  },\n\n  change: function (values) {\n    this.wallet.actions.change(this.wallet, values)\n  },\n\n  place: function () {\n    this.wallet.actions.place(this.wallet)\n  },\n\n  parser: {\n    parse: function (wallet, text) {\n      wallet.actions.change(wallet, { text: text, x: text.substr(1) })\n    }\n  },\n\n  main: {\n    place: function (wallet) {\n      if (wallet.step.text == \"destroy\") {\n        myUB.db.destroy();\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".m\") == 0) {\n        let id = this.createMap(wallet.step.text.substr(2).trim());\n        hapi.selectMap(id);\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".e\") == 0) {\n        let id = this.changeItem({ text : wallet.step.text.substr(2).trim() }, wallet);\n        return;\n      }\n      else if ( wallet.step.text.indexOf(\".t\") == 0 ) {\n        let text = wallet.step.text.substr( 2 ).trim();\n        let root = DataManager.getWallet(\"repo.root\");\n        let parent = root.id;\n\n        wallet.step.text = text;\n        wallet.step.parent = parent;\n        wallet.step.selectItem = true;\n      }\n\n      this.add(wallet)\n\n      myUB.afterRenderActions.add(\"alertAnimation\");\n    },\n    change: function (wallet, values) {\n      _.merge(wallet.step, values)\n    },\n\n    createMap: function (name) {\n      let id = myUB.antsDbState.getId();\n      let ant = {\n        id: id,\n        text: name,\n        startedAt: myUB.antsDbState.getTime(),\n        type: \"map\",\n\n        rels: {\n          sub: {},\n          allSubs: {}\n        },\n        mapId : id,\n        parentId : id\n      }\n\n      myUB.mapview.mergeItem(ant.id, ant);\n      DataManager.set(\"repo.items.\" + ant.id, ant);\n\n      return ant.id;\n    },\n\n    changeItem : function ( change, wallet ) {\n      let id = wallet.step.parent;\n      if ( !id ) return;\n\n      let ant = DataManager.getWallet(\"repo.items.\" + id);\n\n      _.merge(ant, change);\n\n      if ( !ant.history )  ant.history = []\n      ant.history.push( { changeAt : Date.now() });\n\n      myUB.mapview.mergeItem(id, ant);\n      DataManager.set(\"repo.items.\" + id, ant);\n\n    },\n\n    add: function (wallet) {\n\n      let parent = wallet.step.parent;\n      let root = DataManager.getWallet(\"repo.root\");\n\n      if (!parent) {\n        parent = root.id;\n      }\n\n      let state = DataManager.getWallet(\"repo.state\");\n      state.nextId++;\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: wallet.step.text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime(),\n        mapId : root.id,\n        parentId : parent \n      }\n\n\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeRoot(_.set({}, \"rels.sub.\" + parent + \".\" + id, { id: id, parent: parent }))\n      myUB.mapview.mergeRoot(_.set({}, \"rels.allSubs.\" + id, { id: id, parent: parent }))\n\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.sub.\" + parent + \".\" + id, { id: id, parent: parent })\n      DataManager.set(\"repo.root.rels.allSubs.\" + id, { id: id, parent: parent })\n\n      if ( wallet.step.selectItem ) {\n        hapi.select( id );\n      }\n    }\n  }\n}\nflow.start();\n\n\nlet myUB = window.myUB = {};\n\nDataManager.setCombined(\"fnsub\", {\n  loader: {\n    get: function () {\n\n      let fns = myUB;\n\n      if (!fns.fnsub || !fns.fnsub.isReady) {\n        this.make(fns, \"fnsub\", \"ub.fnsub\", {\n          old: fns.fnsub\n        })\n\n        this.setupAll(fns);\n      }\n\n      fns.fnsub.makeUb(\"mapview\", \"ub.mapView\", {\n        \"tb.db\": \"db\",\n        \"state\": \"antsDbState\",\n      })\n\n      fns.fnsub.makeUb(\"antsDbState\", \"ub.antsDbState\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"bridgeLoader\", \"ub.loaders.bridge\", {\n        \"tb.db\": \"db\"\n      })\n\n      fns.fnsub.makeUb(\"searchLoader\", \"ub.loaders.search\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"db\", \"ub.db\", {})\n\n      fns.fnsub.makeUb(\"afterRenderActions\", \"ub.afterRenderActions\", {})\n      fns.fnsub.setupAll();\n\n    },\n\n    setupAll: function (fns) {\n      for (var i in fns) {\n        if (fns[i].goSetup)\n          this.setup(fns, fns[i])\n      }\n\n      return true;\n    },\n\n    make: function (fns, name, path, extra) {\n      let obj = Object.create(DataManager.getValue(path));\n      obj.goSetup = true;\n      obj.extra = extra;\n      obj.uid = cu.uids.run();\n\n      if (fns[name]) _.merge(fns[name], obj)\n      else\n        fns[name] = obj;\n    },\n\n    setup: function (fns, obj) {\n      delete obj.goSetup;\n\n      let values = {};\n      for (var i in obj.extra) {\n        let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n        if (!target) {\n          target = {};\n          _.set(fns, obj.extra[i], target)\n        }\n        _.set(values, i, target)\n      }\n\n      if (obj.setup)\n        obj.setup(values);\n\n      obj.isReady = true;\n    },\n\n    autostart: true\n\n  }\n})\n\nmyUB.fnsub = {\n  subs: [],\n  waiting: {},\n  makeUb: function (a, b, c) {\n    this.subs.push([a, b, c])\n  },\n  onready: function (sub) {\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n}\n\n\nDataManager.setCombined(\"ub.afterRenderActions\", {\n  setup : function ( opts ) {\n    _.merge( this, opts);\n\n    this.wallet = {\n      actions : []\n    }\n  },\n\n  add : function ( name) {\n    this.wallet.actions.push( name );\n  },\n\n  runAll : function ( ) {\n    let actions = this.wallet.actions ;\n    this.wallet.actions = [];\n\n    for ( var i in actions ) {\n      if ( this[ actions[i]] ) \n      this[ actions[i]] ( );\n    }\n  },\n  scrollIntoViewSelected : function ( ) {\n    let target = $(\".content.selected\").get(0);\n    if ( target ) target.scrollIntoViewIfNeeded(false);\n  },\n\n  alertAnimation : function ( ) { \n    if ( $(\"body.alert\").length ) return ;\n\n    $(\"body\").addClass( \"alert\");\n\n    window.setTimeout( () => {\n      $(\"body\").removeClass( \"alert\")\n    }, 5000 )\n  }\n})\nDataManager.setCombined(\"ub.antsDbState\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      state: {\n        prefix: \"ants\",\n        id: \"antsDbState\",\n        nextId: 1\n      }\n    };\n\n    myUB.fnsub.onready(this.tb.db)\n      .then(() => {\n        return this.tb.db.loadItems([\"antsDbState\"])\n      })\n      .catch(() => {\n      })\n      .then((state) => {\n        console.log(\"state\", state)\n        if (!state[0]) {\n          console.log(\"state\", this.wallet.state)\n\n          this.tb.db.saveItems(this.uid, [this.wallet.state])\n        }\n        else {\n          console.log(\"state\", state[0])\n          this.wallet.state = state[0];\n          this.isReady = true;\n        }\n      })\n  },\n\n  getId: function () {\n    this.wallet.state.nextId++;\n    this.tb.db.request_save(this.uid, [this.wallet.state], 100)\n    return \"ant_\" + this.wallet.state.nextId;\n  },\n\n  getTime: function () {\n    return new Date().getTime();\n  }\n})\n\nDataManager.setCombined(\"ub.fnsub\", {\n  setup: function (opts) {\n\n    _.merge(this, opts)\n\n    this.fns = myUB;\n\n    this.waiting = this.waiting || {};\n\n    if (this.old.subs) {\n      for (var i in this.old.subs) {\n        let sub = this.old.subs[i];\n        this.makeUb(sub[0], sub[1], sub[2])\n      }\n      this.setupAll();\n      delete this.subs;\n    }\n  },\n\n\n  setupAll: function () {\n    let fns = this.fns;\n    for (var i in fns) {\n      if (fns[i].goSetup)\n        this.setupUb(fns[i])\n    }\n\n    return true;\n  },\n\n  makeUb: function (name, path, extra) {\n\n    let fns = this.fns;\n    let obj = Object.create(DataManager.getValue(path));\n    obj.goSetup = true;\n    obj.extra = extra;\n    obj.uid = fns[name] && fns[name].id ? fns[name].uid : cu.uids.run();\n\n\n    if (fns[name]) _.merge(fns[name], obj)\n    else\n      fns[name] = obj;\n  },\n\n  setupUb: function (obj) {\n    let fns = this.fns;\n    delete obj.goSetup;\n\n    let values = {};\n    for (var i in obj.extra) {\n      let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n      if (!target) {\n        target = { uid: cu.uids.run() };\n        _.set(fns, obj.extra[i], target)\n      }\n      _.set(values, i, target)\n    }\n\n    if (obj.setup)\n      obj.setup(values);\n\n    obj.isReady = true;\n\n    if (this.waiting[obj.uid]) {\n      this.waiting[obj.uid].forEach(payload => {\n        payload.resolve()\n      })\n\n      this.waiting[obj.uid] = [];\n    }\n  },\n\n  onready: function (sub) {\n\n    if (sub.isReady) return Promise.resolve();\n\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n\n\n});\n\nDataManager.setCombined(\"ub.db\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    this.timers = {};\n  },\n\n  destroy: function () {\n    this.db.destroy();\n  },\n  request_save: function (id, src, delay) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    this.timers[id] = window.setTimeout(() => {\n      this.saveItems(id, src)\n    }, delay || 1000)\n  },\n\n  saveItems: function (id, src) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.save(items[i], items[i].id));\n\n    return Promise.all(promises).then(() => { console.log(\"saved all\", id) })\n  },\n\n  loadItems: function (src) {\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.load(items[i]))\n\n    return Promise.all(promises);\n  },\n\n  loadFilter: function (filter, count, sort) {\n    return this.db.loadfilter(filter, count, sort)\n  }\n})\n\nDataManager.setCombined(\"ub.loaders.map\", {\n  load: function (id) {\n    let startIds = [id, \"info_\" + id]\n    this.tb.db.loadItems(startIds)\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0])\n          this.wallet.root = items[0];\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n});\n\n\nDataManager.setCombined(\"ub.loaders.bridge\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  loadBridge: function () {\n    let items = {\n      top: {\n        notdb: true,\n        text: \"top\",\n        id: \"top\"\n      },\n      recent: {\n        notdb: true,\n        text: \"recent\",\n        id: \"recent\"\n      },\n      all: {\n        notdb: true,\n        text: \"all\",\n        id: \"all\"\n      },\n\n      root: {\n        notdb: true,\n        text: \"\",\n        id: \"root\"\n      }\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        console.log(\"loaded bridges\", result.docs)\n\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\n\nDataManager.setCombined(\"ub.loaders.search\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  search: function () {\n    let items = {\n\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        console.log(\"loaded bridges\", result.docs)\n\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\nDataManager.setCombined(\"ub.mapView\", {\n  setup: function (args) {\n    this.wallet = {\n      items: {},\n      root: {\n        id: \"ant1\",\n        text: \"welcome\",\n        rels: { sub: {} },\n        type: \"map\",\n        notdb : true,\n      },\n      changed: {},\n      state: { nextId: 1 }\n    };\n\n    this.wallet.items.ant1 = this.wallet.root;\n\n    _.merge(this, args)\n\n    return this;\n  },\n  loadMap: function (id) {\n    let startIds = [id, \"info_\" + id]\n\n    let root = DataManager.getWallet(\"repo.root\")\n\n    let start = Promise.resolve();\n\n    if (root.id !== id) {\n      if (!root.notdb)\n        start = start.then(  () => this.saveItems() ) ;\n\n\n      start = start.then ( ()=> {\n      this.wallet.items = {}\n      this.wallet.root = {\n        id: id,\n        notdb: true,\n        rels: { sub: {} },\n      }\n      this.wallet.items[id] = this.wallet.root;\n      DataManager.set(\"repo.items\", this.wallet.items)\n      DataManager.set(\"repo.root\", this.wallet.root)\n    })\n    }\n\n    start.then( ()=> this.tb.db.loadItems(startIds) )\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0]) {\n          let item = items[0];\n          this.wallet.root = item;\n          if ( true || !item.brand ) item.brand = cu.brand.getBrand(item.id + item.startedAt)\n\n          let customTpl =  {\n            logo : cu.brand.getLogo( item.id + item.startedAt,  10, 5)\n          }\n          let customMolds = cu.tplObjParse.run(customTpl);\n          DataManager.setCombined( \"customTpl\", customTpl);\n\n        }\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        console.log(\"done\", this.wallet)\n\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n  getItemsToSave: function () {\n    let changed = this.wallet.changed;\n    this.wallet.changed = {};\n\n    let items = [];\n    for (var i in changed) {\n      if (this.wallet.items[i].notdb) continue;\n      items.push(this.wallet.items[i])\n    }\n    return items;\n  },\n  saveItems: function () {\n    let items = this.getItemsToSave();\n    return this.tb.db.saveItems(this.uid, items);\n  },\n  generateId: function () {\n    return this.tb.state.getId();\n  },\n  mergeItem: function (id, value) {\n    if (!id) id = this.generateId();\n    if (!this.wallet.items[id]) this.wallet.items[id] = { id: id, createdAt: new Date().getTime() };\n    _.merge(this.wallet.items[id], value);\n    this.triggerChange(id);\n    return id;\n  },\n  mergeRoot: function (value) {\n    _.merge(this.wallet.root, value);\n    this.triggerChange(this.wallet.root.id);\n\n  },\n\n  triggerChange: function (id) {\n    this.wallet.changed[id] = true;\n    this.tb.db.request_save(this.uid, this);\n  },\n\n  setRel: function (rel, a, b, value) {\n    _.set(this.wallet.root, [\"rels\", rel, a, b], value);\n    this.triggerChange(this.wallet.root.id)\n  },\n\n})\nDataManager.setCombined(\"repo\", {\n  items: {},\n  root: {\n    id: \"ant1\",\n    text: \"welcome\",\n    rels: { sub: {} }\n  },\n  state: {\n    nextId: 2\n  }\n})\n\n\nDataManager.setCombined(\"antView.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      title: `<div >item : {value.text}</div>`,\n      item: `<div on_click={actions.select} antid={id}>item : {item.text}</div>`,\n      mapView: {\n        logo: cu.brand.getLogo(faker.company.catchPhrase(), 10, 5),\n\n        frame: `<div class='map'>{title} {content}\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        \n        <style>\n          .map { font-size : 15px; margin : 10px;\n            line-height: 23px;\n            background : {colors.background}\n            }\n          .topic>.text { \n              border-bottom : 1px solid {root.brand.fadedColor} ; \n              display : inline-block;\n              padding-left : 5px;\n              padding-right: 25px;\n            }\n          .topic { \n            margin-bottom : 5px;\n            margin-top : 20px;\n            position : sticky;\n            top : 20px;\n            background : {colors.background}\n          }\n          .content { margin-left : 10px; padding-left : 10px;}\n\n          .mapviewtitle { position:sticky; top : -30px; margin-bottom : 20px; background : {background}; z-index:200; } \n          .logo { display : inline-block; width : 50px; height : 50px; }\n\n          .selected.title::before { content : \"⏺\"; display:inline-block; margin-right : 5px; margin-left:5px; color : {root.brand.mainColor}; font-size: 0.7em; }\n\n          .selected.content { \n            border-left :  1px dotted {root.brand.fadedColor};\n            padding-left:25px;\n          }\n\n          .selected.content::after {\n            content: \">\";\n            display: inline-block;\n            border-bottom: 1px dotted {root.brand.fadedColor} ;\n            overflow: hidden;\n            position: relative;\n            left: -25px;\n            padding-left : 10px;\n            top: 8px;\n            width: 20px;\n            margin: 0px;\n          }\n\n          .mapviewtitle { font-variant: petite-caps;}\n\n          polygon.poligon {\n            fill: {root.brand.mainColor} !important;\n          }\n\n          .handle { \n            display: inline-block;\n            font-variant: petite-caps;\n            font-size: 0.7em;\n            color: #999;          \n          }\n\n          .alert .poligon_2  {\n            animation: rotate_poligon 5s ease;\n          }\n          \n          @keyframes rotate_poligon {\n            0% {\n              opacity : auto\n            }\n            20% {\n              opacity : 0.2\n            }\n            70% {\n              opacity : 0.7\n            }\n            100% {\n              opacity : auto\n            }\n            \n          }\n\n          .crazy_animation { \n            transform-origin: center;\n            transform: rotate(360deg);\n            transform-box: fill-box;        \n          }\n        </style>\n      </div>`,\n\n        title: `\n        <div class='mapviewtitle '> <div class='logo'>{logo}</div> <span on_click={actions.select} antid={id} >{item.text}</span></div>`,\n      },\n\n\n      map: {\n        topic: \"<div on_click={actions.select} antid={id} class='title topic {isSelected}'><span class='text'>{handle} {item.text} </span></div>\",\n        item: \"<div on_click={actions.select} antid={id} class='title item {isSelected}'>{handle} {item.text}</div>\",\n        entry: \"<div on_click={actions.select} antid={id} class='title entry {isSelected}'>{handle} {item.text}</div>\",\n        other: `<div on_click={actions.select} antid={id} class='title {isSelected}'>{item.text}</div>`,\n        card: `<div class='{isSelected}'>{title} <div id='content' class='content {isSelected}'>{content}</div>{afterContent}</div>`,\n\n      },\n\n      handle : \"<span class='handle'>{handle}.</span>\",\n\n      bridgeTitle: `<div>{value.text}</div>`,\n      frame: \"<div>{maptitle}{items}</div>\",\n\n      mapTitle: \"\"\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.map\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          uistate: \"repo.uistate\",\n          items: \"repo.items\",\n          root: \"repo.root\",\n          repo: \"repo\",\n          molds: \"antView.molds\",\n          customTpl : \"customTpl\"\n        }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"select\", \"antid\"] } });\n\n        v.selected = v.uistate.selected;\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = [\"map.topic\", \"map.item\", \"map.entry\"]\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n\n        v.colors = {\n          background : \"#000\"\n        }\n\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      setV: function (value, v, memo) {\n        memo = memo || {};\n        for (var i in value) {\n          if (memo[i] === undefined)\n            memo[i] = v[i];\n          v[i] = value[i]\n        }\n\n        return memo;\n      },\n      cleanV: function (v, memo) {\n        for (var i in memo)\n          v[i] = memo[i];\n      },\n\n      getBody: function (v, id, sub) {\n        let list = this.getBodyList(v, id, sub);\n\n        let logo = v.customTpl.logo ? cu.reactAssembler.run(v.customTpl.logo, v) : \"\";\n        let memo = this.setV({ logo: logo, item: v.repo.root , id : v.repo.root.id}, v, memo)\n\n        let title = cu.reactAssembler.run(v.molds.mapView.title, v);\n        memo = this.setV({ content: list, title: title }, v, memo)\n        let node = cu.reactAssembler.run(v.molds.mapView.frame, v)\n        this.cleanV(v, memo);\n        return node;\n      },\n      getBodyList: function (v, id, sub) {\n        let related = sub[id];\n\n        if (!related) return null;\n        if (v.level > 5) return null;\n        let level = v.level != undefined ? v.level + 1 : 0\n\n        let list = [];\n        let memo = this.setV({\n          id: null,\n          item: null,\n          level: 0,\n          isSelected: null,\n          content: null,\n          title: null,\n          handle : null,\n          afterContent : null\n        }, v, memo);\n\n\n        let count = 1;\n        for (var i in related) {\n\n          _.merge(v, {\n            id: i,\n            item: v.items[i],\n            level: level,\n            isSelected: v.selected == i ? \"selected\" : \"\",\n            count : count , \n            afterContent : null\n          })\n\n          let item = this.getItem(v, sub);\n          list.push(item);\n\n          count++;\n        }\n\n        this.cleanV(v, memo);\n        return list;\n      },\n\n      getHandle : function ( v, level, count ) {\n        let handle;\n        if ( level == 0 ) {\n          handle =  String.fromCharCode(64 + count) \n        }\n\n        else if ( level == 1 )  {\n          handle =  count + \"\" ;\n        }\n\n          if ( handle == undefined ) return \"\";\n\n          let node =  cu.reactAssembler.run( v.molds.handle, { handle : handle });\n\n          return node;\n        },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n\n        if (!moldName) moldName = v.otherTpl;\n        let titleMold = _.get(v.molds, moldName);\n\n        v.handle = this.getHandle( v, v.level, v.count );\n\n        v.title = cu.reactAssembler.run(titleMold, v);\n        v.content = this.getBodyList(v, v.id, sub);\n\n        if (v.isSelected && !v.content) v.content = [];\n\n\n        let node;\n        if (v.content) {\n          let cardMold = _.get(v.molds, v.cardMold);\n\n          node = cu.reactAssembler.run(cardMold, v)\n        }\n        else node = v.title;\n\n        return node;\n      },\n\n\n\n    }\n  }\n})\n\n\n\n\nDataManager.setCombined(\"antViewBridge.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      root: {\n        bridge: `<div class='bridge'>{content}</div>`,\n        card: `<div class='card'><div class='title'><span>{item.text}</span></div> <div class='content'>{content}</div></div>`,\n        item: `<div class='title' antid='{id}' on_click='{actions.select}' style='--color:{item.brand.fadedColor}'>{item.text}</div>`,\n        style: `\n          <style>\n            .title { \n              border-left : 2px solid var(--color);\n              margin-bottom : 5px;\n              padding-left : 4px;\n            }\n\n            .card {\n              margin : 20px 10px;\n            \n              border : 1px solid {brand.borderColor};\n\n              padding : 10px;\n            }\n            .bridge { font-size : 18px; margin : 10px;\n              line-height: 25px;\n              }\n\n            .card>.content { \n            }\n            .card>.title{\n              position: sticky;\n              top: 0px;\n              background : {brand.background};\n              padding-bottom : 10px;\n\n            }\n\n            .card>.title>span{ \n              border-bottom : 1px solid {brand.borderColor};\n              width : fit-content;\n              padding-left: 5px;\n              padding-right : 24px;\n              padding-bottom : 5px;\n              display : inline-block;\n              font-variant: petite-caps;\n            }\n          </style>\n        `\n      },\n    }\n  }\n})\n\nDataManager.setCombined(\"antView.bridge\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          items: \"bridgeRepo.items\",\n          root: \"bridgeRepo.root\",\n          repo: \"bridgeRepo\",\n          molds: \"antViewBridge.molds\"\n        }, v);\n\n\n        this.addVFn(v);\n\n        v.tplSpecs = {\n          byLevel: [\"root.bridge\", \"root.card\", \"root.item\"],\n\n        }\n\n        v.brand = {\n          borderColor: \"#333\",\n          background : \"#000\"\n        }\n\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"selectMap\", \"antid\"] } });\n\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = []\n        v.defaultTpl = {\n          card: \"root.card\",\n          title: \"root.title\"\n        }\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n        v.level = 0;\n        v.subs = v.root.rels.sub;\n\n        v.id = \"root\";\n        v.item = v.root;\n\n        let node = this.makeItem(v);\n\n        let style = cu.reactAssembler.run(v.molds.root.style, v)\n\n        return [node, style];\n      },\n\n      makeItem: function (v) {\n        let moldName = v.mold || v.tplSpecs.byLevel[v.level];\n        if (!moldName) console.error(\"no mold\", v);\n        let mold = _.get(v.molds, moldName);\n\n        let params = mold.mold.parameters;\n\n\n        if (params.content) {\n          let collection = v.subs[v.id];\n          let level = v.level + 1;\n          v.content = this.makeList(v, collection, (value, i) => {\n            return {\n              id: i,\n              item: v.items[i],\n              level: level\n            }\n          })\n        }\n\n\n        let node = cu.reactAssembler.run(mold, v)\n\n        return node;\n      },\n\n\n      makeList: function (v, collection, prepare) {\n        let list = [];\n        v.stack();\n\n        for (var i in collection) {\n          v.set(prepare(collection[i], i));\n          let node = this.makeItem(v);\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n\n      addVFn: function (v) {\n        v.set = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n\n        }\n\n        v.get = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n        }\n\n        v.clean = function () {\n          let v = this;\n          let memo = v.memo;\n\n          for (var i in memo)\n            v[i] = memo[i];\n\n          v.memo = v.stacks.pop();\n        }\n\n        v.stack = function () {\n\n          let v = this;\n\n          if (!v.stacks) v.stacks = [];\n\n          v.stacks.push(v.memo);\n\n          v.memo = {};\n        }\n\n\n      },\n\n\n    }\n  }\n})\n\nDataManager.setCombined(\"dbSavings\", {\n  items: {\n    /*\n    repoitems: { path: \"repo.items\", onload: [\"repo\", \"evaluateflow\"] },\n    bubblestate: \"repo.state\",\n    antsitems: \"repo.ants\",\n    */\n  }\n})\n\nDataManager.setCombined(\"tb.persisitence\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    window.onbeforeunload = () => { return this.saveAll() };\n    this.loadAll();\n\n  },\n\n  request_save: function () {\n    if (this.timer) window.clearTimeout(this.timer);\n\n    this.timer = window.setTimeout(() => {\n      this.saveAll()\n    }, 60000)\n  },\n\n  saveAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items\n    let savings = []\n    for (var i in tosave) {\n      savings.push(this.saveitem(i, tosave[i]))\n    }\n\n  },\n  saveitem: function (id, target) {\n    let path = target.path || target;\n    let repo = DataManager.getWallet(path);\n    return this.db.save({ repo }, id)\n  },\n\n  loadAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items;\n\n    for (var i in tosave)\n      this.loaditem(i, tosave[i]);\n  },\n\n  loaditem: function (id, target) {\n    let path = target.path || target;\n    let onload = target.onload || null;\n    this.db.load(id).then((items) => {\n      if (items && items.repo) DataManager.set(path, items.repo)\n      if (onload) DataManager.runOn(onload[0], onload[1])\n    })\n  },\n\n  starter: {\n    loader: {\n      autostart: true,\n      get: (tb) => {\n        if (tb.cache.done) return 1;\n        tb.cache.done = true;\n        let v = tb.fetch({ tb: \"tb.persisitence\" });\n        v.tb.setup();\n\n        return 1;\n      }\n    }\n  }\n\n})\n\n\n\n\nDataManager.setCombined(\"ui.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      main: `\n          <div id='frame'>\n            <div id='easel'>{view}</div>\n            <div id='bar'>\n              <myinput id='order' auto_complete=\"off\" value={order.value} on_key_press={order.place} on_change={order.change}></myinput>\n              <div id='bumb' on_click='{bumb.action}'>{picture}</div>\n            </div>\n          </div>\n          <style>\n            * { box-sizing : border-box}\n            body , window, html {\n              color : {textColor};\n              height : 100%; width : 100%; background : {background} }\n            #frame { height : 100%; width : 100%;}\n            #frame { display : flex; flex-direction : column; }\n            #easel { flex : 1; overflow : auto; }\n            #bar   { border-top: 1px solid #999; width : 100%; flex-basis : {dim.barHeight}px ; display : flex;flex-direction:row; }\n\n            #order {  padding-left : 10px; outline: none; flex : 1; border : 0px none transparent; width: 100%;}\n            #bumb  { flex-basis : {dim.barHeight}px; background : {color} } \n\n          </style>\n          \n  `,\n      bubbleitem: `<div on_click={selectitem} targetid={targetid}>{label}</div>`,\n\n    }\n  }\n})\n\nDataManager.setCombined(\"workingant\", {\n  data: {\n    input: { text: \"\" },\n    currentView: 'main',\n\n    selected: \"\"\n  }\n})\n\n\nDataManager.setCombined(\"antsFrame.ui\", {\n  loader: {\n    paths: { molds: \"ui.molds\", orderText: \"workingant.data\", node: \"antsFrame.prepare\" },\n    get: function (tb, v) {\n\n      tb.fetch(this.paths, v);\n\n      _.set(v.node, v.molds.main.mold.pins.order.concat([\"props\", \"value\"]), v.orderText.input)\n\n      return v.node;\n    }\n  }\n\n})\n\nDataManager.setCombined(\"workingant.viewState\", {\n  path: \"antView.map.nodes\"\n})\n\nDataManager.setCombined(\"antsFrame.prepare\", {\n  loader: {\n    paths: { molds: \"ui.molds\", data: \"bubbles.data\", repo: \"repo\", viewState: \"workingant.viewState\" },\n    get: function (tb, v) {\n      tb.fetch(this.paths, v);\n\n      tb.fetch({ view: v.viewState.path }, v)\n\n\n      let store = cu.store.get(tb, hapi,\n        { change: { changeOrder: \"workingant.data.input\" }, run: { bumbAction: \"showhud\", placeOrder: \"placeorder\" } });\n\n      v.dim = {\n        window: {\n          height: \"400\",\n          width: \"200\",\n        },\n        barHeight: \"50\"\n      }\n\n      v.data = {\n        label: \"main\",\n        bubbleList: \"TestList\",\n        order: {\n          change: store.changeOrder,\n          place: store.placeOrder\n        },\n        bumb: {\n          action: store.bumbAction\n        },\n        dim: v.dim,\n\n        view: v.view,\n\n        color: \"#999\",\n        background: \"#000\",\n        textColor: \"#eee\"\n      }\n\n\n      v.node = cu.reactAssembler.run(v.molds.main, v.data)\n      return v.node;\n    },\n    autostart: true\n  }\n})\n\n\n\nDataManager.setCombined(\"test\", {\n  loader: {\n    get: function () {\n      //myUB.mapview.loadMap(\"ant1\")\n      myUB.bridgeLoader.loadBridge();\n    },\n    autostart: true\n  }\n})\n\n//DataManager = window._DataManager.setup();\nDataManager.historyManager.recording = false;\nDataManager.runToStart();\n//------------------\n\n\n\nclass Frame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  path = \"antsFrame.ui\"\n\n  componentDidMount() {\n    DataManager.setTrigger(this.path, \"asd\", {\n      run: () => {\n        this.setState({ \"version\": new Date().getTime() })\n      }\n    })\n  }\n\n  componentDidUpdate () {\n    myUB.afterRenderActions.runAll();\n  }\n\n  render() {\n    let components = DataManager.getValue(this.path);\n    let node = cu.reactUtils.makeComponent(components || []) || \"empty\";\n    return node\n  }\n}\n\nclass FlatAnt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: { scode: \"salut\" }\n    }\n  }\n\n  _style() {\n    return `\n      html, window, body{ width : 100%; height : 100%; overflow : auto; padding: 0px; margin:0px;}\n      #root, .main { width : 100%; height : 100%;}\n      \n    `\n  }\n\n  render() {\n    let style = this._style();\n    let components = [\n      <Frame key=\"1\"></Frame>\n    ]\n    return [\n      <style>{style}</style>,\n      components]\n      ;\n  }\n}\n\nexport default FlatAnt;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager.js\";\n\nimport FlatAnt from \"./FlatAnt1\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = <FlatAnt />\n    return content;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","var historyManager = {\n  setup: function setup(info) {\n    var item = Object.create(this);\n    item.wallet = {\n      currentStack: {\n        info: [{\n          type: \"startedWith\",\n          info: info\n        }]\n      },\n      stacks: []\n    };\n    item.recording = true;\n    item.wallet.stacks.push(item.wallet.currentStack);\n    return item;\n  },\n  startStack: function startStack(info) {\n    if (!this.recording) return;\n    var stack = {\n      info: [],\n      prevStack: this.wallet.currentStack,\n      index: this.wallet.stacks.length,\n      start: info\n    };\n    this.addInfo({\n      type: \"subStack\",\n      stack: stack\n    }, true);\n    this.wallet.stacks.push(stack);\n    this.wallet.currentStack = stack;\n    if (info) this.addInfo(info);\n  },\n  addInfo: function addInfo(info, skipClone) {\n    if (!this.recording) return;\n    if (!skipClone) info = _.cloneDeep(info);\n    this.wallet.currentStack.info.push(info);\n  },\n  endStack: function endStack(info) {\n    if (!this.recording) return;\n    if (info) this.addInfo(info);\n    this.wallet.currentStack = this.wallet.currentStack.prevStack;\n  }\n};\nvar _DataManager = {\n  setup: function setup() {\n    var item = Object.create(this);\n    item.state = {\n      ctx: {},\n      gettingValue: {},\n      wallet: {},\n      meta: {},\n      cache: {},\n      version: {},\n      loadersCache: {},\n      triggers: {},\n      currentVersion: 1,\n      dependencies: {},\n      nextUID: 1,\n      agenda: {\n        names: {},\n        tasks: []\n      },\n      pins: {},\n      toStart: [],\n      flags: {}\n    };\n    item.historyManager = historyManager.setup(this);\n    return item;\n  },\n  state: {\n    gettingValue: {},\n    wallet: {},\n    meta: {},\n    cache: {},\n    version: {},\n    loadersCache: {},\n    triggers: {},\n    currentVersion: 1,\n    dependencies: {},\n    nextUID: 1,\n    agenda: {\n      names: {},\n      tasks: []\n    },\n    pins: {},\n    toStart: [],\n    flags: {}\n  },\n  setCtx: function setCtx(basePath, ctxPath, value, names) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    if (!ctx) _.set(this.state.ctx, [basePath, \"ctx\"].join(\".\"), ctx = {\n      names: []\n    });\n\n    _.set(ctx, ctxPath, value);\n\n    ctx.names.push({\n      names: names,\n      path: ctxPath\n    });\n  },\n  getCtx: function getCtx(basePath, name) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    ;\n    if (!ctx) return null;\n    var ctxPath;\n\n    for (var i in ctx.names) {\n      if (ctx.names[i].names.indexOf(name) != -1) {\n        ctxPath = ctx.names[i].path;\n        break;\n      }\n    }\n\n    if (!ctxPath) return null;\n\n    var target = _.get(ctx, ctxPath);\n\n    return target;\n  },\n  runOn: function runOn(basePath, name, args) {\n    var target = this.getCtx(basePath, name);\n    if (!target) return null;\n    return target[name](args);\n  },\n  runFn: function runFn(path, args) {\n    var route = path.split(\".\");\n    var fnName = route.pop();\n    var targetPath = route.join(\".\");\n    var target = this.getValue(targetPath);\n    if (!target[fnName]) return undefined;\n\n    if (_.isFunction(target[fnName])) {\n      return target[fnName](args, path, this);\n    } else if (_.isFunction(target[fnName].run)) {\n      return target[fnName].run(args, path, this);\n    }\n  },\n  getInfluenced: function getInfluenced(path) {\n    var influenced = [];\n\n    var dep = _.get(this.state.dependencies, path + \".DEP\");\n\n    if (!dep) return [];\n\n    for (var i in dep) {\n      influenced.push(i);\n      influenced = influenced.concat(this.getInfluenced(i));\n    }\n\n    return influenced;\n  },\n  getValue: function getValue(path, skipPartialValueCheck) {\n    var route = path.split(\".\");\n    var value = this.checkCache(path);\n    if (value) return value;\n    if (!skipPartialValueCheck) for (var i = 0; i < route.length; i++) {\n      var partialPath = route.slice(0, i).join(\".\");\n\n      if (this.state.gettingValue[partialPath]) {\n        var partialResult = this.state.gettingValue[partialPath].partialResult;\n        var partialSlot = route.slice(i);\n\n        var partialValue = _.get(partialResult, partialSlot);\n\n        if (partialValue !== undefined) return partialValue;\n      }\n    }\n    this.state.gettingValue[path] = true;\n    var list = this.makeList(path);\n    value = this.listToValue(list, path);\n    delete this.state.gettingValue[path];\n\n    if (value !== undefined) {\n      // let shouldUpdate = (  list.length == 1 && list[0].src == \"wallet\" )\n      this.setCache(path, value); //, shouldUpdate);\n      //this.diffCache( oldCache, path );\n    }\n\n    return value;\n  },\n  setCache: function setCache(path, value, shouldUpdate) {\n    this.state.cache[path] = {\n      value: value,\n      shouldUpdate: shouldUpdate || false,\n      version: this.state.currentVersion\n    };\n  },\n  checkCache: function checkCache(path, ignoreUpdates) {\n    if (!this.state.cache[path]) return null;\n    if (ignoreUpdates) return this.state.cache[path].value;\n    if (this.state.cache[path].shouldUpdate) return null;\n    return this.state.cache[path].value;\n  },\n  prepareCache: function prepareCache(path) {\n    var cache = this.state.loadersCache[path];\n\n    if (!cache) {\n      cache = this.state.loadersCache[path] = {\n        old: {},\n        contains: {},\n        dependsOn: {}\n      };\n    }\n\n    var old = {\n      contains: cache.contains || {},\n      dependsOn: cache.dependsOn || {}\n    };\n    cache.old = old;\n    delete cache.contains;\n    delete cache.dependsOn;\n    return old;\n  },\n  diffCache: function diffCache(oldCache, path) {\n    if (!this.state.loadersCache[path]) this.state.loadersCache[path] = {};\n    var cache = this.state.loadersCache[path] || {};\n    var dependencies = this.state.dependencies;\n\n    var addDependency = function addDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) _.set(dependencies, a + \".DEP\", dep = {});\n      dep[b] = true; //_.set( dependencies, a + \".DEP\",dep );\n    };\n\n    var remDependency = function remDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) return;\n      delete dep[b];\n    };\n\n    var check = function check(newC, oldC) {\n      for (var i in newC) {\n        if (!oldC || !oldC[i]) addDependency(i, path);\n      }\n\n      for (var i in oldC) {\n        if (!newC || !newC[i]) remDependency(i, path);\n      }\n    };\n\n    check(cache.contains, oldCache.contains);\n    check(cache.dependsOn, oldCache.dependsOn);\n  },\n  updateVersionsMap: function updateVersionsMap(path) {\n    var cache = this.state.loadersCache[path] || {};\n    var depOn = cache.dependsOn;\n\n    for (var i in depOn) {\n      var currentVersion = this.getVersion(i);\n      depOn[i].version = currentVersion;\n    }\n  },\n  makeList: function makeList(path) {\n    var list = [];\n    var route = path.substr ? path.split(\".\") : path;\n\n    var walletValue = _.get(this.state.wallet, path);\n\n    if (walletValue !== undefined) {\n      if (!_.isObjectLike(walletValue)) {\n        list.push({\n          src: \"wallet\",\n          value: walletValue,\n          path: [],\n          srcPath: path,\n          version: 1\n        });\n        return list;\n      }\n\n      walletValue = _.cloneDeep(walletValue);\n      list.push({\n        src: \"wallet\",\n        value: walletValue,\n        path: [],\n        srcPath: path,\n        version: 1\n      });\n    }\n\n    var meta = this.state.meta;\n\n    for (var i = 0; i < route.length; i++) {\n      if (!meta) break;\n\n      if (meta.loader) {\n        var item = {\n          src: \"root\",\n          loader: meta.loader,\n          path: [],\n          srcPath: route.slice(0, i),\n          select: route.slice(i)\n        };\n        list.push(item);\n      }\n\n      meta = meta[route[i]];\n    }\n\n    var rootPath = route;\n\n    var iterate = function iterate(obj, route, list) {\n      if (!obj) return;\n\n      if (obj.loader) {\n        var _item = {\n          src: \"sub\",\n          loader: obj.loader,\n          path: route,\n          srcPath: rootPath.concat(route)\n        };\n        list.push(_item);\n      }\n\n      for (var _i in obj) {\n        if (_i == \"loader\") continue;\n        iterate(obj[_i], route.concat(_i), list);\n      }\n    };\n\n    iterate(meta, [], list);\n    return list;\n  },\n  silentSet: function silentSet(path, value, skipPathAffected) {\n    this.historyManager.addInfo({\n      type: \"silentSet\",\n      path: path,\n      value: value\n    });\n\n    _.set(this.state.wallet, path, value);\n\n    if (this.state.cache[path]) this.state.cache[path].shouldUpdate = true;\n    if (!skipPathAffected) this.getAffectedPaths(path);\n  },\n  listToValue: function listToValue(list, path) {\n    if (list.length == 1 && list[0].value) return list[0].value;\n    var result = {};\n    this.state.gettingValue[path] = {\n      partialResult: result\n    };\n    var postponedSteps = list;\n    var hasSteps = true;\n    var snoozeCount = 0;\n\n    while (hasSteps) {\n      snoozeCount++;\n\n      if (snoozeCount > 5) {\n        //console.log( \"postponed more than 5 times\", path, result, _.cloneDeep( this.state.gettingValue ) );\n        this.state.cache[path].shouldUpdate = true;\n        return result;\n      }\n\n      list = postponedSteps;\n      postponedSteps = [];\n      hasSteps = false;\n\n      for (var i = 0; i < list.length; i++) {\n        var step = list[i];\n        var value = void 0;\n\n        if (step.value) {\n          value = step.value;\n        } else if (step.loader) {\n          try {\n            value = this.getFromLoader(step, result, path);\n          } catch (e) {\n            if (e == \"postpone\") {\n              this.state.cache[path].shouldUpdate = true;\n              postponedSteps.push(step);\n              hasSteps = true;\n            } else {\n              console.error(e);\n            }\n\n            continue;\n          }\n        }\n\n        if (step.select) value = _.get(value, step.select);\n\n        if (step.path.length) {\n          _.set(result, step.path, value);\n        } else {\n          if (Object.values(result).length == 0) {\n            result = value;\n          } else //console.log( \"merging\" , _.cloneDeep( result ), value, result);\n            _.merge(result, value);\n        }\n      }\n    }\n\n    return result;\n  },\n  loadersCache: {},\n  addLog: function addLog(lhs, rel, rhs, value) {\n    if (!this.state.loadersCache[lhs]) this.state.loadersCache[lhs] = {\n      version: this.state.currentVersion,\n      cachedValue: {}\n    };\n    var xcache = this.state.loadersCache[lhs];\n    if (!xcache[rel]) xcache[rel] = {};\n    xcache[rel][rhs] = value || true;\n  },\n  getFromLoader: function getFromLoader(step, result, requester, force) {\n    var _this = this;\n\n    var srcPath = step.srcPath.join(\".\");\n    var value;\n\n    try {\n      var logger = {\n        add: function add(path, name) {\n          _this.addLog(srcPath, \"dependsOn\", path, {\n            version: true,\n            name: name,\n            path: path,\n            srcPath: srcPath\n          });\n        }\n      };\n      var loader = step.loader;\n\n      if (loader.prism) {\n        if (loader.loadedPrism) loader = loader.loadedPrism;else {\n          var loadedPrism = this.getFromDispatch(loader.prism);\n          loader.loadedPrism = loadedPrism;\n          loader = loadedPrism;\n        }\n      }\n\n      if (loader.load) {\n        if (this.state.cache[srcPath]) {\n          return {};\n        }\n\n        value = loader.load(result, this, logger, step.loader, step);\n\n        _.set(this.state.wallet, srcPath, value);\n\n        this.state.cache[srcPath] = {\n          loader: true,\n          value: {}\n        };\n        return value;\n      }\n\n      if (!force) {\n        var _value = this.checkCache(srcPath);\n\n        if (_value) return _value;\n      }\n\n      if (step.src == \"sub\") this.addLog(requester, \"contains\", srcPath);\n      var oldCache = this.prepareCache(srcPath);\n\n      if (loader.get) {\n        try {\n          var tb = TB.init(result, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n          if (DataManager.newAPI) value = loader.get(tb, tb.v);else value = loader.get(tb, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n        } catch (e) {\n          if (e && e.type == \"return\") {\n            value = e.value;\n          } else {\n            throw e;\n          }\n        }\n      }\n\n      if (value === \"forceCache\") {\n        return this.checkCache(srcPath, true);\n      } else if (value !== undefined) {\n        this.setCache(srcPath, value);\n        this.diffCache(oldCache, srcPath);\n        if (loader.updateVersionsMap) this.updateVersionsMap(srcPath);\n\n        _.set(this.state.version, srcPath + \".version\", this.state.currentVersion);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (loader && loader.skipCache) this.state.cache[srcPath].shouldUpdate = true;\n    return value;\n  },\n  runUtils: function runUtils(path, args) {\n    var fn = this.getValue(path);\n    if (fn && fn.run) return fn.run.apply(fn, args);\n  },\n  getWallet: function getWallet(path) {\n    return _.get(this.state.wallet, path);\n  },\n  mergeValue: function mergeValue(path, value) {\n    var _this2 = this;\n\n    this.historyManager.addInfo({\n      type: \"mergeValue\",\n      path: path,\n      value: value\n    });\n    var oldValue = path ? _.get(this.state.wallet, path) : this.state.wallet; //this.getValue( path );\n\n    if (!oldValue) {\n      oldValue = {};\n\n      _.set(this.state.wallet, path, oldValue);\n    }\n\n    var changedPaths = [];\n    this.state.currentVersion++;\n    var route = _.isString(path) ? path.split(\".\") : path || [];\n    if (route.length == 1 && route[0] == \"\") route = [];\n    var fn = {\n      addPath: function addPath(relPath) {\n        var fullPath = route.concat(relPath);\n        changedPaths.push(fullPath);\n\n        _.set(_this2.state.version, fullPath.join(\".\") + \".version\", _this2.state.currentVersion);\n      }\n    };\n    this.pauseAll();\n\n    if (_.isObjectLike(value)) {\n      this.setObObj(oldValue, value, fn, []);\n    } else {\n      console.log(\"it's not object\");\n    }\n\n    for (var i in changedPaths) {\n      this.updateVersionForAll(changedPaths[i]);\n      this.getAffectedPaths(changedPaths[i].join(\".\"));\n    }\n\n    this.req_triggers();\n  },\n  pauseAll: function pauseAll() {\n    if (this.state.runningReqTriggers_timer) {\n      this.clearInterval(this.state.runningReqTriggers_timer);\n      delete this.state.runningReqTriggers_timer;\n    }\n\n    if (this.state.runningAgendaTriggers_timer) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n    }\n  },\n  setInterval: function setInterval(callback, delay, name) {\n    var stop = false;\n\n    var fn = function fn() {\n      if (stop) return; //console.log( \"interval\", name );\n\n      callback();\n      window.requestAnimationFrame(fn);\n    };\n\n    window.requestAnimationFrame(fn);\n    return function () {\n      stop = true;\n    };\n  },\n  clearInterval: function clearInterval(stopFn) {\n    if (!stopFn) return;\n    return stopFn();\n  },\n  req_triggers: function req_triggers() {\n    var _this3 = this;\n\n    if (this.state.runningReqTriggers_timer) return; //if ( Object.keys( this.affected ).length == 0 ) return;\n\n    this.state.runningReqTriggers_timer = this.setInterval(function () {\n      //console.log( \"affected::\", _.cloneDeep(this.affected ) );\n      _this3.asyncTriggers();\n    }, 0, \"triggers\");\n  },\n  asyncTriggers: function asyncTriggers() {\n    var keys = Object.keys(this.affected);\n\n    if (keys.length == 0) {\n      this.clearInterval(this.state.runningReqTriggers_timer); //console.log( \"affected_checked\", this.affected_checked );\n\n      this.affected_checked = {};\n      delete this.state.runningReqTriggers_timer;\n      return;\n    } //console.log( \"checking\", keys[0 ] );\n\n\n    this.affected_checked[keys[0]] = this.affected[keys[0]];\n    delete this.affected[keys[0]];\n    this.lazy_checkTriggers(keys[0]);\n  },\n  req_Agenda: function req_Agenda() {\n    var _this4 = this;\n\n    if (this.state.runningAgendaTriggers_timer) return;\n    if (this.state.agenda.tasks.length == 0) return;\n    this.state.runningAgendaTriggers_timer = this.setInterval(function () {\n      _this4.asyncTriggersAgenda();\n    }, 0, \"agenda\");\n  },\n  asyncTriggersAgenda: function asyncTriggersAgenda() {\n    if (this.state.agenda.tasks.length == 0) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n      return;\n    }\n\n    var trigger = this.state.agenda.tasks.shift();\n    if (!trigger) return console.error(trigger); //console.log( \"checking\", keys[0 ] );\n\n    delete this.state.agenda.names[trigger.id];\n    this.runTrigger(trigger, trigger.target, trigger.listener); //this.lazy_checkTriggers( keys[0] );\n  },\n  lazy_checkTriggers: function lazy_checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      if (this.state.agenda.names[path]) return;\n      var triggers = this.state.triggers[path];\n\n      for (var i in triggers) {\n        var trigger = triggers[i];\n        var id = trigger.id || path + \"___\" + i;\n        if (this.state.agenda.names[i]) continue;\n        if (!trigger.path) trigger.target = path;\n        if (!trigger.token) trigger.listener = i;\n        if (!trigger.id) trigger.id = id;\n        this.state.agenda.names[id] = true;\n        this.state.agenda.tasks.push(trigger);\n      }\n\n      this.sortAgenda();\n      this.req_Agenda();\n    }\n  },\n  sortAgenda: function sortAgenda() {\n    this.state.agenda.tasks.sort(function (taskA, taskB) {\n      if (!taskB.salience) return 1;\n      if (!taskA.salience) return -1;\n      return taskA.salience - taskB.salience;\n    });\n  },\n  setObObj: function setObObj(target, source, fn, path) {\n    for (var i in source) {\n      if (source[i] === undefined) continue;else if (_.isObjectLike(source[i])) {\n        if (!target[i]) target[i] = {};\n        this.setObObj(target[i], source[i], fn, path.concat(i));\n      } else {\n        if (target[i] != source[i]) {\n          target[i] = source[i];\n          fn.addPath(path.concat(i));\n        }\n      }\n    }\n  },\n  appendToArray: function appendToArray(path, value, setVersion) {\n    var target = _.get(this.state.wallet, path);\n\n    if (!target) {\n      value = [value];\n      return this.set(path, value, false, setVersion);\n    }\n\n    var index = target.length;\n    var route = _.isArray(path) ? path : path.split(\".\");\n    route.push(index);\n    return this.set(route, value, false, setVersion);\n  },\n  setByLoader: function setByLoader(path, value) {\n    if (_.isArray(path)) path = path.join(\".\");\n\n    var prism = _.get(this.state.meta, path);\n\n    if (!prism || !prism.loader || !prism.loader.set) return false;\n    var tb = TB.init({}, this, {}, prism.loader, {}, this.state.loadersCache[path]);\n    value = prism.loader.set(tb, value);\n    return true;\n  },\n  set: function set(path, value, isLoaders, setVersion) {\n    this.historyManager.startStack({\n      type: \"set\",\n      path: path,\n      value: value\n    });\n\n    try {\n      if (this.setByLoader(path, value)) {\n        return;\n      }\n\n      var target = isLoaders ? this.state.meta : this.state.wallet;\n\n      _.set(target, path, value); //if ( setVersion ) {\n\n\n      this.state.currentVersion++; //}\n\n      this.updateVersionForAll(path.split(\".\"));\n\n      _.set(this.state.version, path + \".version\", this.state.currentVersion);\n\n      var strPath = _.isArray(path) ? path.join(\".\") : path;\n      this.getAffectedPaths(strPath);\n      this.req_triggers();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.historyManager.endStack();\n    }\n  },\n  affected: {},\n  affected_checked: {},\n  markChangeOn: function markChangeOn(path, skipTrigger) {\n    this.getAffectedPaths(path);\n    if (!skipTrigger) this.req_triggers();\n  },\n  getAffectedPaths: function getAffectedPaths(path) {\n    if (this.state.cache[path]) {\n      this.state.cache[path].shouldUpdate = true;\n    }\n\n    if (this.affected[path]) {\n      return;\n    }\n\n    this.affected[path] = {\n      version: this.state.currentVersion,\n      state: 1\n    };\n    var route = path.split(\".\");\n    var strPath = route[0];\n    this.getAffectedPaths(route[0]);\n\n    for (var i = 1; i < route.length - 1; i++) {\n      strPath += \".\" + route[i];\n      this.getAffectedPaths(strPath);\n    }\n\n    var influenced = this.getInfluenced(path);\n\n    for (var i in influenced) {\n      this.getAffectedPaths(influenced[i]);\n    }\n  },\n  markChangedPaths: function markChangedPaths(path) {\n    //let influenced = this.getInfluenced( path );\n    var route = path.split(\".\");\n    var strPath = route[0];\n\n    for (var i = 1; i < route.length; i++) {\n      strPath += \".\" + route[i];\n      if (this.state.cache[strPath]) this.state.cache[strPath].shouldUpdate = true;\n      this.checkTriggers(strPath);\n      this.setUpdateFlag(strPath);\n    }\n  },\n  changedPaths: {},\n  setUpdateFlag: function setUpdateFlag(path) {\n    var influenced = this.getInfluenced(path);\n    var cache = this.state.cache;\n\n    for (var i in influenced) {\n      if (cache[influenced[i]]) {\n        cache[influenced[i]].shouldUpdate = true;\n      }\n\n      this.setUpdateFlag(cache[influenced[i]]);\n      this.checkTriggers(influenced[i]);\n    }\n  },\n  checkTriggers: function checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      this.runTriggers(this.state.triggers[path], path);\n    }\n  },\n  runTriggers: function runTriggers(collection, path) {\n    for (var i in collection) {\n      this.runTrigger(collection[i], path, i);\n    }\n  },\n  runTrigger: function runTrigger(trigger, path, token) {\n    if (_.isFunction(trigger.run)) {\n      return trigger.run(trigger, path, token);\n    }\n\n    var fn = _.get(this.state.wallet, trigger.run);\n\n    if (_.isFunction(fn)) return fn(trigger, path, token);else if (fn.run) return fn.run(trigger, path, token);\n  },\n  run: function run(path, value) {},\n  fetchValues: function fetchValues(target, map, wallet, master, logger, onlyPaths) {\n    for (var i in map) {\n      if (i == \"type\") continue;\n      var value = map[i];\n\n      if (_.isString(value)) {\n        if (value.charAt(0) == \"$\") {\n          var _path = value.substr(2);\n\n          if (logger) logger.add(_path, i);\n          value = master.getValue(_path);\n        } else if (onlyPaths) {\n          var _path2 = value;\n          if (logger) logger.add(_path2, i);\n          value = master.getValue(_path2);\n        }\n      } else if (value.KEY == \"fullPath\") {\n        path = value.path.join(\".\");\n        if (logger) logger.add(path, i);\n        value = master.getValue(path);\n      }\n\n      if (value === undefined) throw \"postpone\";\n      var slot = i;\n      target[slot] = value;\n      if (!target.src) target.src = {};\n      target.src[slot] = {\n        key: map[i],\n        slot: i\n      };\n    }\n\n    return target;\n  },\n  setCombined: function setCombined(path, value) {\n    this.historyManager.startStack({\n      type: \"setCombined\",\n      path: path,\n      value: value\n    });\n    var payload = {\n      loaders: {},\n      loadersPaths: [],\n      basePath: path.split(\".\"),\n      value: value,\n      pins: [],\n      afterOp: []\n    };\n    var isEmpty = this.iterate(value, [], payload);\n\n    if (payload.pins.length) {\n      var currentPins = {};\n\n      for (var i in payload.pins) {\n        var _pin = payload.pins[i];\n\n        var name = _pin.value || _pin.path.slice(-1)[0];\n\n        currentPins[name] = {\n          path: _pin.path,\n          fullPath: payload.basePath.concat(_pin.path)\n        };\n      }\n\n      var pins = _.get(this.state.pins, path + \".pins\");\n\n      if (!pins) _.set(this.state.pins, path + \".pins\", pins = {});\n\n      _.merge(pins, currentPins);\n    }\n\n    if (payload.afterOp.length) {\n      for (var i in payload.afterOp) {\n        var op = payload.afterOp[i];\n\n        if (op.type == \"gluePin\") {\n          var pin = pins[op.pin];\n          var pinKey = {\n            KEY: \"fullPath\",\n            path: pin.fullPath\n          };\n\n          if (op.isLoader) {\n            _.set(payload.loaders, op.dest, pinKey);\n          } else {\n            _.set(value, op.dest, pinKey);\n          }\n        } else if (op.type == \"flags\") {\n          if (op.flags.hasVersion) {\n            this.updateVersion(op.path);\n          }\n        }\n      }\n    }\n\n    if (!isEmpty) this.set(path, value, false, true);\n\n    if (payload.hasLoaders) {\n      //console.log( \"loaders\", payload.loadersPaths );\n      this.set(path, payload.loaders, true, true);\n\n      for (var i in payload.loadersPaths) {\n        var lPath = payload.loadersPaths[i];\n        this.setCache(lPath.join(\".\"), {}, true);\n\n        var loader = _.get(this.state.meta, lPath);\n\n        if (loader.loader && loader.loader.autostart) {\n          this.state.toStart.push({\n            path: lPath.join(\".\")\n          }); //this.getValue(lPath.join(\".\"));\n        } //console.log( \"loader\", loader );\n\n      }\n    }\n\n    this.historyManager.endStack();\n  },\n  runToStart: function runToStart() {\n    var toStart = this.state.toStart;\n\n    while (toStart.length) {\n      var item = toStart.shift();\n      this.getValue(item.path);\n    }\n  },\n  buildModel: function buildModel(input, path) {\n    var modelName = input.MODEL;\n    input = _.cloneDeep(input);\n    var tokens;\n\n    if (modelName.indexOf(\":\") != -1) {\n      tokens = modelName.split(\":\");\n      modelName = tokens.shift();\n      input.tokens = tokens;\n    }\n\n    var mold = this.getValue(modelName);\n\n    if (mold.handleTokens && tokens) {\n      mold.handleTokens(input, tokens, path);\n    }\n\n    var obj = _.cloneDeep(mold.modelObj);\n\n    if (mold.modelSpec) {\n      var spec = mold.modelSpec;\n\n      if (spec.ops) {\n        for (var i in spec.ops) {\n          var op = spec.ops[i];\n\n          if (op.type == \"replaceValue\") {\n            var value = _.get(input, op.source);\n\n            if (!op.dest) obj = value;else _.set(obj, op.dest, value);\n          } else if (op.type == \"eval\") {\n            var _value2 = op.fn(input, op);\n\n            console.log(_value2);\n\n            _.set(input, op.dest, _value2);\n          }\n        }\n      }\n\n      if (spec.isLoader) {\n        obj = {\n          loader: obj\n        };\n      }\n    }\n\n    if (input.pin !== undefined) obj.pin = input.pin;\n    this.historyManager.addInfo({\n      type: \"buildModel\",\n      path: path,\n      input: input,\n      obj: obj\n    });\n    return obj;\n  },\n  iterate: function iterate(obj, path, payload) {\n    while (obj && obj.MODEL) {\n      var newObj = this.buildModel(obj, payload.basePath.concat(path));\n\n      for (var i in obj) {\n        delete obj[i];\n      }\n\n      _.merge(obj, newObj); //really ? it was easier that way then to put inside the loop and on setCombined ? really ? \n      //yea, keeping the traditional approach\n\n    }\n\n    var isEmpty = true;\n\n    for (var i in obj) {\n      var subPath = path.concat(i);\n\n      if (i == \"pin\") {\n        payload.pins.push({\n          subPath: subPath,\n          path: path,\n          value: obj[i]\n        });\n        delete obj[i];\n      } else if (i == \"loader\") {\n        this.setLoader(payload.loaders, path, obj[i], payload.basePath, payload);\n        payload.loadersPaths.push(payload.basePath.concat(path));\n        delete obj[i];\n        payload.hasLoaders = true;\n      } else if (i == \"flags\") {\n        payload.afterOp.push({\n          type: \"flags\",\n          path: payload.basePath.concat(path).join(\".\"),\n          relPath: path,\n          flags: obj.flags\n        });\n      } else if (_.isString(obj[i]) && obj[i].charAt(0) == \"%\") {\n        obj[i] = this.getStaticValue(obj[i], i, obj, subPath, payload);\n        isEmpty = false;\n      } else if (_.isObjectLike(obj[i])) {\n        var subIsEmpty = this.iterate(obj[i], subPath, payload);\n\n        if (subIsEmpty) {//delete obj[ i ];\n        } else {\n          isEmpty = false;\n        }\n\n        isEmpty = false;\n      } else {\n        isEmpty = false;\n      }\n    }\n\n    return isEmpty;\n  },\n  getStaticValue: function getStaticValue(slot, index, obj, path, payload) {\n    if (slot == \"%PATH\") return payload.basePath.concat(path);else {\n      payload.afterOp.push({\n        type: \"gluePin\",\n        dest: path,\n        pin: slot.substring(1)\n      });\n      return {\n        KEY: \"relative path\"\n      };\n    }\n  },\n  getUID: function getUID() {\n    return this.state.nextUID++;\n  },\n  setTrigger: function setTrigger(target, listener, trigger) {\n    if (!this.state.triggers[target]) this.state.triggers[target] = {};\n    this.state.triggers[target][listener] = trigger;\n  },\n  getTrigger: function getTrigger(target, listener) {\n    if (!this.state.triggers[target]) return null;\n    return this.state.triggers[target][listener];\n  },\n  remTrigger: function remTrigger(target, listener) {\n    if (!this.state.triggers[target]) return;\n    delete this.state.triggers[target][listener];\n  },\n  setLoader: function setLoader(loaders, path, value, basePath, payload) {\n    if (_.isString(value)) {\n      var listenerPath = basePath.concat(path).join(\".\");\n      var oldTrigger = this.getTrigger(value, listenerPath);\n      if (oldTrigger && oldTrigger.path) this.remTrigger(oldTrigger.path, listenerPath);\n      this.setTrigger(value, listenerPath, {\n        run: \"base.updateLoader\",\n        loaderPath: value,\n        destination: listenerPath\n      });\n      value = this.getValue(value);\n    }\n\n    this.prepareLoader(value, basePath, path.concat(\"loader\"), payload);\n\n    _.set(loaders, path.concat(\"loader\"), value); //this.markChangeOn( path, true );\n\n  },\n  prepareLoader: function prepareLoader(loader, basePath, loaderPath, payload) {\n    this.deepTransformObj(loader, [], function (obj, slot, path) {\n      if (_.isString(obj) && obj.charAt(0) == \"%\") {\n        if (obj == \"%PATH\") {\n          return payload.basePath.concat(loaderPath);\n        }\n\n        payload.afterOp.push({\n          type: \"gluePin\",\n          dest: loaderPath.concat(path),\n          pin: obj.substring(1),\n          isLoader: true\n        });\n        return {\n          x: 12\n        };\n      }\n    });\n  },\n  deepTransformObj: function deepTransformObj(obj, path, test) {\n    if (!obj || !_.isObject(obj)) return;\n\n    for (var i in obj) {\n      var value = test(obj[i], i, path.concat([i]));\n\n      if (value !== undefined) {\n        obj[i] = value;\n        continue;\n      }\n\n      if (_.isObject(obj[i])) this.deepTransformObj(obj[i], path.concat([i]), test);\n    }\n  },\n  setMap: function setMap(map) {\n    for (var i in map) {\n      this.setCombined(i, map[i]);\n    }\n  },\n  getFromDispatch: function getFromDispatch(path) {\n    return this.getValue(path);\n  },\n  getVersion: function getVersion(path) {\n    var route = path.split(\".\");\n    var version = -1;\n    var versionsTree = this.state.version;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n      if (!versionsTree[slot]) return version;\n      versionsTree = versionsTree[slot];\n      if (versionsTree.version) version = versionsTree.version;\n    }\n\n    return version;\n  },\n  getVersionTree: function getVersionTree(path) {\n    var versionsTree = this.state.version;\n    return _.get(versionsTree, path);\n  },\n  updateVersionForAll: function updateVersionForAll(path) {\n    for (var i = 0; i < path.length; i++) {\n      _.set(this.state.version, path.slice(0, i).concat(\"version\"), this.state.currentVersion);\n      /*\n      \n      var node = _.get( this.state.version, path.slice(0,i) );\n      if ( !node ) break;\n      if ( node.version ) node.version = this.state.currentVersion;\n      */\n\n    }\n  },\n  updateVersion: function updateVersion(path) {\n    _.set(this.state.version, path + \".version\", this.state.currentVersion);\n  },\n  objectDiff: function difference(oldObject, newObject) {\n    function changes(oldO, newO) {\n      if (!_.isObject(oldO) || !_.isObject(newO)) return {\n        change: {\n          from: oldO,\n          to: newO\n        }\n      };\n      var result = {};\n      var hasChanges = false;\n\n      for (var i in newO) {\n        if (oldO[i] === undefined) {\n          result[i] = {\n            change: {\n              from: undefined,\n              to: newO[i],\n              type: \"added\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isFunction(newO[i]) && oldO[i] && newO[i].toString() != oldO[i].toString()) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"function changed\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isObject(newO[i])) {\n          var subChanges = changes(oldO[i], newO[i]);\n\n          if (subChanges) {\n            result[i] = subChanges;\n            hasChanges = true;\n          }\n        } else if (newO[i] != oldO[i]) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"changed\"\n            }\n          };\n          hasChanges = true;\n        }\n      }\n\n      for (var i in oldO) {\n        if (newO[i] === undefined) {\n          hasChanges = true;\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: null,\n              type: \"deleted\"\n            }\n          };\n        }\n      }\n\n      return hasChanges ? result : null;\n    }\n\n    return changes(oldObject, newObject);\n  },\n  act: function act(path, args, tb) {\n    var value = _.isObject(path) ? path : this.getValue(path);\n\n    if (!tb) {\n      tb = this.tb();\n    }\n\n    var act = ACT.init(value, this, args, path, tb);\n    return act;\n  },\n  tb: function tb() {\n    var tb = TB.init({}, this, null, {}, {}, {});\n    return tb;\n  }\n};\n\nvar DataManager = _DataManager.setup();\n\nvar ACT = {\n  master: null,\n  actions: null,\n  args: null,\n  init: function init(actions, master, args, path, tb) {\n    var item = Object.create(this);\n    item.master = master;\n    item.actions = actions;\n    item.args = args;\n    item.path = path;\n    item.tb = tb;\n    return item;\n  },\n  run: function run(name, args) {\n    return this.actions[name].apply(this.actions, [args, this.tb]);\n  }\n};\nvar TB = {\n  master: null,\n  logger: null,\n  spec: null,\n  step: null,\n  cache: null,\n  v: null,\n  init: function init(wallet, master, logger, spec, step, cache) {\n    var item = Object.create(this);\n    Object.assign(item, {\n      wallet: wallet,\n      master: master,\n      logger: logger,\n      spec: spec,\n      step: step,\n      cache: cache\n    });\n    item.v = {};\n    return item;\n  },\n  act: function act(path, args) {\n    var act = this.master.act(path, args, this);\n    return act;\n  },\n  go: function go(name, args) {\n    if (!this.toolbox) this.toolbox = DataManager.getValue(\"toolBox\");\n\n    if (!this.toolbox[name]) {\n      console.log(\"no \", name);\n      return null;\n    }\n\n    if (this.toolbox[name].run) return this.toolbox[name].run(args, this);else if (_.isFunction(this.toolbox[name])) return this.toolbox[name](args, this);\n  },\n  path: function path() {\n    return this.step.srcPath.join(\".\");\n  },\n  fetch: function fetch(paths, target) {\n    return this.run_fetch(paths, target);\n  },\n  run_fetch: function run_fetch(paths, target, prefix) {\n    var _this5 = this;\n\n    var singlePath = false;\n\n    if (_.isString(paths) || paths.KEY) {\n      singlePath = true;\n      paths = {\n        SINGLEPATH: paths\n      };\n    }\n\n    var values = {};\n    this.master.fetchValues(values, paths, this.wallet, this.master, {\n      add: function add(path, slot) {\n        if (!_this5.logger) return;\n        var name = slot !== \"SINGLEPATH\" ? (prefix || []).concat(slot) : prefix || [];\n\n        _this5.logger.add(path, name.join(\".\"));\n      }\n    }, true);\n\n    for (var i in values) {\n      if (values[i] && values[i].type == \"routes\") {\n        var subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n        values[i] = this.run_fetch(values[i], null, subPrefix);\n      } else if (values[i] && values[i].type == \"value\") {//let subPrefix = i != \"SINGLEPATH\" ? (prefix || [] ).concat( i ) : prefix;\n        //values[ i ] = this.run_fetch( values[ i ], null, subPrefix )\n      } else if (values[i] && _.isString(values[i]) && values[i].charAt(0) == \"$\") {\n        var _subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n\n        values[i] = this.run_fetch(values[i].substring(2), null, _subPrefix);\n      }\n    }\n\n    if (singlePath) values = values.SINGLEPATH;\n\n    if (target) {\n      if (target.src) {\n        var src = values.src;\n        delete values.src;\n\n        _.merge(target.src, src);\n      }\n\n      Object.assign(target, values);\n      return target;\n    } else {\n      return values;\n    }\n  },\n  pathOf: function pathOf(path) {\n    var path = this.v.src[path];\n    if (path.key) return path.key;\n    if (_.isString(path)) return path;\n  },\n  set: function set(path, value) {\n    var target = this.v;\n    var route = _.isString(path) ? path.split(\".\") : path;\n    var last_src = null;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n\n      if (target.src && target.src[slot]) {\n        last_src = {\n          src: target.src[slot],\n          left: route.slice(i + 1)\n        };\n      }\n\n      if (!target[slot]) {\n        break;\n      }\n\n      target = target[slot];\n    }\n\n    if (last_src) {\n      var basePath = _.isString(last_src.src.key) ? last_src.src.key.split(\".\") : last_src.src.key.path;\n      var fullPath = basePath.concat(last_src.left).join(\".\");\n      this.master.set(fullPath, value);\n    }\n  },\n  detach: function detach() {\n    var detached = Object.create(this);\n    detached.v = {};\n    detached.logger = null;\n    return detached;\n  },\n  feed: function feed(path) {\n    var feedModel = this.master.getValue(path);\n    var feed = feedModel.init();\n    var start = 1;\n\n    for (var i = start; i < arguments.length; i++) {\n      feed.in(arguments[i]);\n    }\n\n    return feed;\n  }\n};\n\ntry {\n  if (!window.DataManager) {\n    window.DataManager = DataManager;\n    window._DataManager = _DataManager;\n  } //eval( 'export default DataManager' );\n\n} catch (e) {}","module.exports = __webpack_public_path__ + \"static/media/logo.06a44ff7.svg\";"],"sourceRoot":""}
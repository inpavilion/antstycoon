{"version":3,"sources":["units/units/db.js","components/CodeMirrorEditor.js","managers/KeyboardManager.js","managers/TimerManager.js","units/main.js","units/units/brand.js","units/units/bubbleBoard.js","units/units/bubbleFlow.js","units/units/bubbleGuns.js","units/units/bubbleTest.js","units/units/bubbleTypes.js","units/units/parseStringIntoComp.js","units/units/prettyScode.js","units/units/reactAssembler.js","components/MyInput.js","units/units/reactUtils.js","units/units/store.js","units/units/testDataGenerator.js","units/units/testMolds.js","units/units/testTplAssembling.js","units/units/tplObjParse.js","units/units/treeCardsBuilder.js","units/units/treeIterator.js","units/units/uids.js","units/init.js","units/index.js","FlatAnt1.js","App.js","serviceWorker.js","index.js","../../data-department/dataManager.js","logo.svg"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","faker__WEBPACK_IMPORTED_MODULE_1__","faker__WEBPACK_IMPORTED_MODULE_1___default","pouchdb__WEBPACK_IMPORTED_MODULE_2__","pouchdb_find__WEBPACK_IMPORTED_MODULE_3__","PouchDB","plugin","PouchDBFind","cu","window","ub","ctx","serialize","obj","_","cloneDeepWith","value","isFunction","TYPE","body","toString","deserialize","item","fn","eval","e","save","id","db","this","uid","generateUid","_id","get","then","doc","rev","_rev","put","i","catch","err","load","_this","cfg","state","nextId","prefix","init","name","auto_compaction","Date","getTime","Math","random","Object","create","destroy","alert","loadfilter","selector","count","sort","find","test","result","x","y","obj2","run","def","debug","require","Component","DataManager","KeyboardManager","setup","isInitialized","$","on","evt","handleKey","setTrigger","layout","getValue","altKey","push","ctrlKey","metaKey","shiftKey","key","toLowerCase","comb","join","action","TimerManager","wallet","timers","start","delay","clearTimeout","timer","setTimeout","cancel","date","set","end","getRandomFn","str","seed","charCodeAt","sin","floor","getBrand","randomFn","baseBrand","brand","mainColor_hsl","getColor","complementColor_hsl","mainColor","complementColor","fadedColor","baseColor","hue","color","chroma","hsl","getRandom","scale","max","pointsStar","polies","_loop","j","map","points","col","classname","round","concat","getLogo","bubbleBoard","addItem","getId","mergeItem","data","minStep","changed","appendTo","results","console","log","versions","isReady","undefined","completedAt","rewindTo","tb","onchanged","step","createdAt","values","items","hasChanges","slot","bubbleid","isString","charAt","substring","isObject","isMatch","version","evalItems","affected","_evalItems","isCompleteValues","evalItem","node","getNode","bubble","defaultsDeep","trails","rels","bellow","above","uses","checkIfComplete","type","tpl","val","master","evaluateflow","getVersion","bubbleFlow","fns","doubleCheck","evaluate","target","checks","check","shaddow","score","subs","total","resolved","unresolved","tplParams","defined","parameters","mold","param","model","v","targetId","opt","_setup","assign","shaft","fullPath","getFull","route","base","relPath","fetch","it","collection","cb","oldValues","info","sub","paths","stateCurrentId","currentItem","targetid","path","compile","clues","needes","provides","collections","subScore","params","undefinedCount","length","definedCount","bubbleGuns","bubbleTypes","dispatch","bubbleTest","nodeType","tplObjParse","viewAs","dataNode","reactNode","neededValues","reactAssembler","op","cues","pins","mirror","description","newItem","cloneDeep","bubbles","cache","newId","newValues","mirrorBubble","types","phase1","html","trim","nest","document","createElement","innerHTML","specs","childNodes","el","spec","_spec","nodeValue","props","attributes","attr","indexOf","replace","all","char","toUpperCase","class","className","style","_style","componentName","nodeName","children","htmlSlot","keys","forEach","child","match","reg","css","exec","phase2","attrs","_this2","payload","ops","watchAttrs","isArray","iterate","a","b","stage","opValues","handleObj","childrenPath","subPath","handleProp","pin","parent","addOp","prepareAction","concatOp","_this3","split","filter","index","concatParent","parseStringIntoComp","nextUID","makestr","indent","usequouts","js_beautify","indent_size","indent_level","preserve_newlines","max_preserve_newlines","indent_inner_html","trimStart","lines","isObjectLike","isNil","beautify","prettyScode","getter","applyOps","tplid","newOps","MyInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","setState","nextProps","text","React","customComponents","myinput","makeComponent","flattenDeep","component","error","reactUtils","tplComponent","createStore","hapi","store","tpls","parents","change","runWith","src","getItem","getSubs","registerTpl","args","cases","faker","company","catchPhrase","setter","level","generated","uuid","arrayElement","oldPayload","prepare","ret","integrate","addPayload","_case","testDataGenerator","parser","testMolds","parseTpl","renderTpl","assembleTpl","molds","iterateBubbles","shouldAssemble","isRegistered","addBubble","computedAtStep","uids","addedAtStep","inputs","salut","testTplAssembing","value_setter","content","#test","tplId","isUnparsedTpl","isList","parseHtml","_check","payload1","tplsMapping","defaultTpl","usedGlobalStyles","addSubs","nodes","card","useTemplate","skipGlobalStyle","root","globalStyle","title","getMolds","buildTpls","iterator","addGlobalStyles","gbs","styles","makeSelector","treeCardsBuilder","repo","mappings","treeIterator","mub","tests","pending","passes","shift","group","groupEnd","ctxpins","newAPI","TimerManagerBuilder","showhud","currentView","goToCard","placeorder","which","flow","place","restart","parseinput","parse","select","focus","bridge","myUB","bridgeLoader","loadBridge","selectMap","mapview","loadMap","setCombined","input","substr","editStartedAt","firstCharAt","antsDbState","getParent","actions","main","prevStep","startedAt","getWallet","selectItem","add","createMap","merge","ant","allSubs","placedAt","mergeRoot","loader","fnsub","make","old","setupAll","makeUb","tb.db","goSetup","extra","autostart","waiting","c","onready","promise","Promise","resolve","opts","loadItems","saveItems","request_save","setupUb","getItemsToSave","promises","loadFilter","startIds","related","ids","top","notdb","recent","docs","ant1","_this4","customTpl","logo","generateId","triggerChange","setRel","rel","mapView","frame","topic","entry","other","handle","bridgeTitle","mapTitle","uistate","rows","selected","otherTpl","moldsMap","cardMold","background","colors","getBody","setV","memo","cleanV","list","getBodyList","isSelected","getHandle","String","fromCharCode","moldName","titleMold","addVFn","tplSpecs","byLevel","borderColor","makeItem","makeList","stack","clean","getList","stacks","pop","_this5","onbeforeunload","saveAll","loadAll","_this6","tosave","savings","saveitem","loaditem","onload","runOn","starter","done","bubbleitem","orderText","order","viewState","view","changeOrder","bumbAction","placeOrder","dim","height","width","barHeight","label","bubbleList","bumb","textColor","historyManager","recording","runToStart","Frame","_this7","_this8","components","FlatAnt","_this9","scode","react_default","FlatAnt1_Frame","App","FlatAnt1","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker","currentStack","startStack","prevStack","addInfo","skipClone","endStack","_DataManager","gettingValue","meta","loadersCache","triggers","currentVersion","dependencies","agenda","names","tasks","toStart","flags","setCtx","basePath","ctxPath","getCtx","runFn","fnName","targetPath","getInfluenced","influenced","dep","skipPartialValueCheck","checkCache","partialPath","slice","partialResult","partialSlot","partialValue","listToValue","setCache","shouldUpdate","ignoreUpdates","prepareCache","contains","dependsOn","diffCache","oldCache","addDependency","remDependency","newC","oldC","updateVersionsMap","depOn","walletValue","srcPath","rootPath","_item","_i","silentSet","skipPathAffected","getAffectedPaths","postponedSteps","hasSteps","snoozeCount","getFromLoader","addLog","lhs","rhs","cachedValue","xcache","requester","force","logger","prism","loadedPrism","getFromDispatch","_value","TB","skipCache","runUtils","apply","mergeValue","oldValue","changedPaths","addPath","pauseAll","setObObj","updateVersionForAll","req_triggers","runningReqTriggers_timer","clearInterval","runningAgendaTriggers_timer","setInterval","callback","stop","requestAnimationFrame","stopFn","asyncTriggers","affected_checked","lazy_checkTriggers","req_Agenda","asyncTriggersAgenda","trigger","runTrigger","listener","token","sortAgenda","taskA","taskB","salience","source","appendToArray","setVersion","setByLoader","isLoaders","strPath","markChangeOn","skipTrigger","markChangedPaths","checkTriggers","setUpdateFlag","runTriggers","fetchValues","onlyPaths","_path","_path2","KEY","loaders","loadersPaths","afterOp","isEmpty","currentPins","_pin","pinKey","isLoader","dest","hasVersion","updateVersion","hasLoaders","lPath","buildModel","tokens","modelName","MODEL","handleTokens","modelObj","modelSpec","_value2","newObj","setLoader","getStaticValue","getUID","getTrigger","remTrigger","listenerPath","oldTrigger","loaderPath","destination","prepareLoader","deepTransformObj","setMap","versionsTree","getVersionTree","objectDiff","oldObject","newObject","changes","oldO","newO","from","to","subChanges","act","ACT","go","toolbox","run_fetch","singlePath","SINGLEPATH","subPrefix","_subPrefix","pathOf","last_src","left","detach","detached","feed","arguments","in","module","exports","p"],"mappings":"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","file":"static/js/main.aa4ace8a.chunk.js","sourcesContent":["import _ from \"lodash\"\nimport faker from \"faker\"\nimport PouchDB from \"pouchdb\"\nimport PouchDBFind from 'pouchdb-find';\nPouchDB.plugin(PouchDBFind);\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {},\n\n    serialize : function( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( _.isFunction( value ) ) return { TYPE : \"FN\", body : value.toString() };\n        })\n\n        return item;\n    },\n\n    deserialize : function ( obj ) {\n        let item = _.cloneDeepWith( obj, function ( value ) {\n            if ( value && value.TYPE == \"FN\" ) {\n                let fn;\n                try  { \n                    eval( \"fn=\" + value.body )\n                } catch (e ) {\n\n                }\n                return fn;\n            } \n        })\n\n        return item;\n    },\n\n    save: function (value, id) {\n        var db = this.ctx.db;\n\n        let item = this.serialize( value );\n        if (!item.uid) item.uid = id || item.id || this.generateUid();\n        if (!item._id) item._id = item.uid;\n  \n        return db.get(item._id)\n          .then((doc) => {\n            let rev = doc.rev;\n            let _rev = doc._rev;\n\n            item.rev = rev;\n            item._rev = _rev;\n            return db.put(item).then( ( i)=> {\n            })\n          })\n          .catch(err => {\n            return db.put(item);\n          })\n\n\n\n    },\n\n\n\n    load: function (id) {\n        return this.ctx.db.get(id).catch( e => {\n            return null\n        })\n        .then ( item => {\n            if ( item ) item = this.deserialize( item );\n            return item;\n        })\n    },\n\n\n    generateUid : function ( ) {\n        this.cfg.state.nextId++;\n        return this.cfg.state.prefix + \"_\" + this.cfg.state.nextId;\n    },\n\n    init: function (name) {\n        let ctx = {\n            db: new PouchDB(name, {auto_compaction: true}),\n            state: {\n                prefix: new Date().getTime().toString() + \"_\" + Math.random().toString(),\n                nextId: 0,\n                id : \"state\"\n            }\n        }\n\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        item.load(\"state\").then(state => {\n            if ( state ) item.ctx.state = state\n            else item.save( item.ctx.state )\n        })\n\n        return item;\n    },\n\n    destroy : function ( ) {\n        this.ctx.db.destroy( ) \n            .then ( () => {\n\n                alert( \"done cleanup\")\n            })\n    },\n\n    loadfilter : function ( selector, count, sort ) {\n        return this.ctx.db.find( { selector  });\n    }\n\n}\n\nvar test = (result) => {\n    result.obj = ub.serialize( {x : function ( ) {} , y : \"test\"})\n\n    result.obj2 = ub.deserialize( result.obj );\n\n    ub.init(\"testdb\")\n}\n\n\ncu.db = {\n    //test,\n    run: function (name) {\n        return ub.init(name);\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nrequire('codemirror/mode/javascript/javascript');\n\nclass CodeMirrorEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    this.changeValue = this.changeValue.bind(this);\n    this.changeCursor = this.changeCursor.bind(this);\n    this.isBlured = this.isBlured.bind(this);\n  }\n\n  changeValue(editor, data, value) {\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    //window.editor = editor;\n\n\n    let cursor = editor.getCursor();\n    if (data.origin != undefined) {\n      this.props.valueChanged({ scode: value, cursor: { line: cursor.line, ch: cursor.ch } });\n    }\n    else {\n      this.props.valueChanged({ scode: value })\n    }\n\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n  }\n\n  changeCursor(editor, cursor) {\n    this.setState({ caret: editor.cursorCoords(true, \"local\") })\n\n    if (cursor.sticky == undefined) return;\n\n    if (!this.props || !this.props.valueChanged)\n      return;\n\n    this.props.valueChanged({ cursor: { line: cursor.line, ch: cursor.ch } });\n\n  }\n  isBlured() {\n    if (this.props.blured)\n      this.props.blured()\n  }\n\n  render() {\n\n    //this means that setting the value with null will delete the value from wallet ?!?\n    let text = this.props.data.scode || \"\";\n    if (!text.length) text = \"\";\n\n    let cursor = this.props.data.cursor;\n    if (!cursor || !cursor.ch) cursor = 0;\n\n    let popup;\n    let caret = this.state.caret || { right : 0, bottom : 0} \n    if (caret) {\n\n      let left = caret.right + 30;\n      let top = caret.bottom + 0;\n\n      popup = <div className=\"popup\" style={{ transform: \"translate(\" + left + \"px ,\" + top + \"px)\", zIndex: 100 }} > Salut  </div>\n    }\n    else popup = null;\n\n    let style = `\n      .popup { border : 1px solid #999; background : #bbb; padding : 10px; min-width:40px; width : 100px; transition : all 0.2s ease; }\n\n      .popup { opacity : 0.05; position : absolute;pointer-events: none;}\n    `\n    return <div style={{position:\"relative\"}}>\n      <style>{style}</style>\n      {popup}\n      <CodeMirror\n        value={text}\n\n        options={{\n          mode: 'javascript',\n          lineNumbers: true, \n          smartIndent : true,\n        }}\n\n        autoCursor={false}\n\n        cursor={cursor}\n        ///onBeforeChange={this.changeValue}\n        onChange={this.changeValue}\n        onCursor={this.changeCursor}\n        onBlur={this.isBlured}\n      />\n    </div>\n  }\n}\n\nexport default CodeMirrorEditor;","import React, { Component } from 'react';\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"../libs/dataManager\";\nvar DataManager = window.DataManager;\n\n\nvar KeyboardManager = {\n    setup: function () {\n        if (this.isInitialized) return;\n\n        $(\"body\").on(\"keydown\", (evt) => {\n            this.handleKey(evt)\n        })\n\n        DataManager.setTrigger(\"keyboardShortcuts.layout\", \"kbdManager\", {\n            run: () => {\n                this.load();\n            }\n        })\n        this.load();\n    },\n\n    load: function () {\n        let layout = DataManager.getValue(\"keyboardShortcuts.layout\");\n        this.layout = layout || {};\n    },\n\n    handleKey: function (evt) {\n        var name = [];\n        if (evt.altKey) name.push(\"alt\");\n        if (evt.ctrlKey) name.push(\"ctrl\");\n        if (evt.metaKey) name.push(\"meta\");\n        if (evt.shiftKey) name.push(\"shift\");\n\n        name.push(evt.key.toLowerCase())\n        let comb = name.join(\"+\");\n\n        if (this.layout[comb])\n            return this.run(this.layout[comb], comb)\n    },\n\n    run: function (action,comb) {\n        if (_.isFunction(action)) return action(comb, action);\n        else if (action.run)\n            return action.run(comb, action)\n    }\n}\n\nKeyboardManager.setup();\n\nexport default KeyboardManager","var TimerManager = {\n    init : function ( DataManager ) {\n      var item = Object.create( this );\n\n      item.DataManager = DataManager;\n      item.wallet = {timers : {} }\n      return item;\n    },\n    wallet: { timers: {} },\n  \n    start: function (name, action, delay) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n  \n      var timer = window.setTimeout(() => {\n        this.cancel( name );\n        action(name, action, delay);\n      }, delay)\n  \n      this.wallet.timers[name] = timer;\n\n      let date = new Date();\n      this.DataManager.set(\"TimerManager.timer.\"  + name , { start : date.getTime(), end : date.getTime() + delay })\n    },\n  \n    cancel: function (name) {\n      if (this.wallet.timers[name]) window.clearTimeout(this.wallet.timers[name]);\n      delete this.wallet.timers[name]\n      this.DataManager.set(\"TimerManager.timer.\"  + name , \"\")\n\n    }\n  }\n\n  export {TimerManager};","\nvar cu = {}\n\nwindow.cu = cu;\n\nexport default cu;\n","import _ from \"lodash\"\nimport faker from \"faker\"\nimport chroma from \"chroma-js\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    getRandomFn : function ( str ) {\n      var seed = 0;\n      for (var i in str) {\n        seed += str.charCodeAt(i) * i\n      }\n      function getRandom() {\n        var x = Math.sin(seed++) * 10000;\n        return x - Math.floor(x);\n      }\n\n      return getRandom;\n\n    },\n\n    getBrand : function( uid ) {\n      let randomFn = this.getRandomFn( uid );\n\n      let baseBrand = {\n        mainColor : \"#007abc\",\n        complementColor : \"\"\n      }\n\n      let brand = {\n        mainColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n        complementColor_hsl : this.getColor( randomFn() , baseBrand.mainColor ), \n      }\n\n      brand.mainColor = \"hsl( \" + brand.mainColor_hsl[0] + \",\" + brand.mainColor_hsl[1] + \"% ,\" + (brand.mainColor_hsl[2]) + \"%  )\"\n      brand.complementColor = \"hsl( \" + brand.complementColor_hsl[0] + \",\" + brand.complementColor_hsl[1] + \"% ,\" + (brand.complementColor_hsl[2]) + \"%  )\"\n\n      brand.fadedColor = \"hsla( \" + brand.mainColor_hsl[0] + \",\" + 10 + \"% ,\" + (brand.mainColor_hsl[2]) + \"%, 0.5  )\"\n\n      return brand;\n    },\n\n    getColor : function ( seed, baseColor  ) {\n\n        baseColor = baseColor || \"#007abc\";\n        let hue = seed * 360;\n        let color = chroma(\"#007abc\").set(\"hsi.h\", hue).hsl();\n    \n        color[1] = color[1] * 100;\n        color[2] = color[2] * 100;\n\n        return color;\n    },\n    get : function ( seed, count)  {\n\n        var str = seed; //faker.lorem.sentence(10);\n        var seed = 0;\n        for (var i in str) {\n          seed += str.charCodeAt(i) * i\n        }\n        function getRandom() {\n          var x = Math.sin(seed++) * 10000;\n          return x - Math.floor(x);\n        }\n\n        count = Math.max( 2, Math.floor( (getRandom() * 5 )) )\n\n        \n        \n        let scale =  50 / count ;\n\n        let color = this.getColor( getRandom() );\n\n        let pointsStar = [\n            [0, 0, 0.5, 0.5, 1, 0],\n            [0, 0, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 0, 1],\n            [1, 1, 0.5, 0.5, 1, 0],\n        ]\n\n\n        \n        let polies = [];\n        for (var i = 0; i < count; i++) {\n          for (var j = 0; j < count; j++) {\n              let lum = 10; //points[i][j];\n              let x = i;\n              let y = j;\n              let poly = pointsStar.map((points) => {\n                let col = \"hsl( \" + color[0] + \",\" + color[1] + \"% ,\" + (color[2]) + \"%  )\";\n                let classname = Math.round( getRandom( ) * 5 );\n                polies.push(`<polygon\n                  class='poligon poligon_${classname}'\n                  points=\"` + points.join(\" \") + `\" stroke=\"transparent\" fill=\"transparent\" \n                  style=\" strokeWidth: ` + (1 / scale) + `;\n                  fill: `+ col + `;\n                  opacity : `+ getRandom() + `; \n                  transform: scale(` + scale + `) translate( ` + x + `px, ` + y + `px)\" />`)\n\n              })\n            }\n          }\n\n        return \"<svg> \" + polies.join( \"\" ) + \"</svg>\"\n\n\n    }\n}\n\nvar test = (result) => {\n    \n}\n\ncu.brand = {\n    //test,\n\n    getLogo: function (seed, scale, count) {\n        let logo=  ub.get(seed,  count );\n        return logo;\n    },\n\n    getBrand : function ( uid ) {\n      return ub.getBrand( uid );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleBoard = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n\n    addItem : function ( obj ) {\n        let id = this.getId();\n        obj.id = id;\n        this.mergeItem( id, obj );\n        return id;\n    },\n\n    getId : function ( ) {\n        this.ctx.data.state.nextId++;\n\n        let id = \"bubble_\" + this.ctx.data.state.nextId;\n\n        return id;\n    },\n    mergeItem: function (id, value) {\n        let ctx = this.ctx;\n        let result = ctx.data.result[id];\n\n\n        ctx.changed = {};\n\n        this.appendTo(id, value)\n\n        let minStep;\n        let results = ctx.data.result;\n        let changed = ctx.changed;\n\n        console.log( ctx.data );\n        let versions = ctx.data.versions;\n\n        for ( var i in changed ) {\n            if ( !versions[i] ) versions[i] = 0;\n            versions[i]++;\n            let result = results[ i ];\n            if ( !result ) continue;\n            if ( !result.isReady ) continue;\n            if ( minStep == undefined ) minStep = result.completedAt;\n            if ( minStep > result.completedAt ) minStep = result.completedAt;\n        }\n\n        if (minStep !== undefined) {\n            this.rewindTo(minStep)\n        }\n\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( changed )\n        \n        return minStep;\n    },\n\n    rewindTo: function (step) {\n        let ctx = this.ctx;\n        for (var id in ctx.data.result) {\n            let result = ctx.data.result[id];\n            if (result.isReady && (result.completedAt >= step || result.createdAt > step)) {\n                result.isReady = false;\n                result.completedAt = 0;\n            }\n        }\n\n        ctx.data.step = step;\n    },\n\n    appendTo: function (id, values) {\n        let ctx = this.ctx;\n        let item = ctx.data.items[id];\n        let hasChanges = false;\n\n        if (!item) {\n            ctx.data.step++;\n            ctx.data.items[id] = item = {}\n            ctx.data.result[id] = { createdAt: ctx.data.step }\n            hasChanges = true;\n        }\n\n        for (var slot in values) {\n            let value = values[slot];\n            if ( value == \"REMOVE\" && item[slot] !== undefined ) {\n                delete item[slot];\n                hasChanges = true;\n                continue;\n            }\n            if ( value === null && item[slot] !== undefined ) {\n                delete item[slot]\n                hasChanges = true;\n                continue;\n\n            }\n\n            if ( !value ) continue;\n\n            let bubbleid = item[slot] ? item[slot].id : null;\n            if (_.isString(value) && value.charAt(0) == \"#\") {\n                value = {id : value.substring(1) };\n            }\n\n            if ( value.id !== undefined) {\n                if ( value.id == \"#\"  || value.id==\"\" ) value.id = null;\n                value.id = value.id || bubbleid || this.getId();\n                item[slot] = { id: value.id };\n            }\n\n\n            if (value.id && _.isObject(value)) {\n                if ( value.id != bubbleid ) hasChanges = true;\n                this.appendTo(value.id, value)\n            }\n\n            else if ( _.isObject( value ) && !_.isMatch(item[slot], value )) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n            else if ( item[slot]!=value) {\n                hasChanges = true;\n                item[slot] = value;\n            }\n\n        }\n\n        if( hasChanges ) {\n            if ( item.version ) {\n                item.version = item.version ? item.version+1 : 1;\n            }\n            this.ctx.changed[ id ] =true;\n        }\n    },\n\n    evalItems: function (count) {\n        this.ctx.affected = {};\n        this._evalItems( count );\n\n        if ( this.ctx.tb.onchanged)\n            this.ctx.tb.onchanged( this.ctx.affected )\n        \n    },\n\n    _evalItems : function ( count ) {\n\n        if (count<=0) return;\n\n        let ctx = this.ctx;\n\n        let hasChanges = false;\n\n        for (var id in ctx.data.items) {\n            let item = ctx.data.items[id];\n            let result = ctx.data.result[id];\n\n            if (result && result.isReady) continue;\n            let values = this.isCompleteValues(item, id);\n            if (values) {\n                if (!ctx.data.result[id]) ctx.data.result[id] = {};\n\n                this.evalItem(item, id, values, ctx.data.result[id]);\n                if ( ctx.data.result[id].isReady )\n                    hasChanges = true;\n            }\n        }\n\n\n        if (hasChanges) this._evalItems(count - 1);\n    },\n\n    evalItem: function (item, id, values, result) {\n        let ctx = this.ctx;\n\n        result.isReady = true;\n        result.values = values;\n\n        let node = this.ctx.tb.getNode(item, values, result, ctx);\n        if ( node ) \n            result.node = node;\n\n        if ( result.isReady ) {\n            ctx.data.step++;\n            result.completedAt = ctx.data.step;\n            this.ctx.affected[ id ] = true;\n        }\n\n    },\n\n    isCompleteValues(item) {\n        //if (!this.ctx.tb.checkIfComplete(item)) return false;\n\n        let ctx = this.ctx;\n\n        let values = {};\n\n        let bellow = [];\n\n        for (var slot in item) {\n            let value = item[slot];\n            if (value.id) {\n                let bubble = ctx.data.result[value.id];\n\n                if (!bubble || !bubble.isReady) return false;\n\n                let node = bubble.node;\n\n                if ( item[slot+\"_path\"]) {\n                    node = _.get( node, item[slot+\"_path\"] )\n                }\n\n                values[slot] = node;\n            }\n            else values[slot] = value\n        }\n\n        return values;\n    },\n\n    init: function (ctx) {\n        let item = Object.create(this);\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data : {\n                items : {},\n                result : {},\n                step : 1,\n                versions : {},\n                trails : {},\n                rels : {\n                    bellow : {},\n                    above  : {},\n                    uses   : {}\n                },\n\n                state : {\n                    nextId : 8\n                }\n            },  \n            tb: {\n                checkIfComplete: (item) => item.type || item.tpl || item.node,\n                getNode: (item, values, result) => { return { val: values, x: item.tpl } }\n            }\n        })\n\n        ctx.master = item; \n        return item;\n    },\n\n    evaluateflow : function () {\n        this.evalItems(5);\n    },\n\n    getVersion : function ( id ) {\n        let item = this.ctx.data.items[ id ];\n\n        if ( !item ) return null;\n        return item.version;\n    }\n}\n\nvar test = (result) => {\n    let ctx = {\n        data: {\n            items: {},\n            result: {},\n            versions : {},\n            ants : {},\n            step: 1,\n        }\n    }\n\n    let nub = ub.init(ctx);\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salut\",\n        testval: \"#\"\n    })\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n    nub.evalItems(0);\n\n\n\n    nub.mergeItem(\"b1\", {\n        tpl: \"salutare\",\n        testval: { x: 12, elefant: \"test\", tpl: \"test\" }\n    })\n\n\n\n    nub.evalItems(0);\n\n\n    result.ctx = ctx;\n}\n\ncu.bubbleFlow = {\n    //test,\n\n\n    run: function (ctx) {\n        return ub.init( ctx );\n    },\n    init: function () {\n\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\nvar fns = {}\n\nvar ub = {\n\n    ctx: {\n    },\n\n    doubleCheck: function (id) {\n        let tb = fns.evaluate.setup({ data: this.ctx.data, state: this.ctx.state }).target(id);\n\n        for (var i in checks)\n            tb.run(checks[i])\n    },\n\n    check: function (id) {\n        let item = this.ctx.data.items[id];\n        let result = this.ctx.data.result[id];\n        let shaddow = this.ctx.data.shaddow[id];\n\n        if (!shaddow)\n            shaddow = this.ctx.data.shaddow[id] = {}\n\n        let results = this.ctx.data.result;\n\n        let score = shaddow.score = {\n            subs: {\n                total: 0,\n                resolved: [],\n                unresolved: []\n            },\n        };\n\n        for (var slot in item) {\n            if (item[slot].id) {\n                score.subs.total++;\n\n                if (results[item[slot].id] && results[item[slot].id].isReady)\n                    score.subs.resolved.push({ slot: slot, id: item[slot].id });\n                else\n                    score.subs.unresolved.push({ slot: slot, id: item[slot].id });\n\n            }\n        }\n\n        if (result && result.values && result.values.tpl) {\n            let tpl = result.values.tpl;\n            score.tplParams = { total: 0, defined: 0, resolved: 0, unresolved: [] }\n            let parameters = tpl.mold.parameters;\n\n            for (var param in parameters) {\n                score.tplParams.total++;\n                if (result.values[param] || item[param]) {\n                    score.tplParams.defined++;\n                }\n                else {\n                    score.tplParams.unresolved.push(param)\n                }\n            }\n        }\n\n    },\n\n    setup: function (ctx) {\n        let item = Object.create(this);\n\n        item.ctx = ctx;\n\n        _.defaultsDeep(ctx, {\n            data: {\n                items: {},\n                result: {},\n                shaddow: {},\n                trails: {}\n            }\n        })\n\n        return item;\n    }\n}\n\n\n\nfns.evaluate = {\n    target: function (id) {\n\n        let model = this.model || this;\n\n        var item = Object.create(model);\n\n        item.model = model;\n\n        item.setup();\n\n        item.v.targetId = id;\n\n        return item;\n    },\n    setup: function (opt) {\n        this._setup(opt);\n        return this;\n    },\n    _setup: function (opt) {\n        if (opt) Object.assign(this, opt)\n\n        if (this.model && this.model.shaft) {\n            this.shaft = {};\n        }\n\n        this.v = { result: {} };\n    },\n    get: function (key) {\n        if (!_.isString(key)) return key;\n        let id = this.v.targetId;\n\n        let fullPath;\n        if (key == \"values\")\n            fullPath = [\"result\", this.v.targetId, \"values\"]\n        if (key == \"item\")\n            fullPath = [\"items\", this.v.targetId]\n        else\n            fullPath = [key, \"id\"];\n        return _.get(this.data, fullPath)\n    },\n\n    getFull: function (route) {\n        let base = route[0];\n        let id = route[1];\n        let relPath = route[2];\n\n        if (!base) base = \"items\";\n        if (base == \"item\") base = \"items\";\n\n        if (!id) id = this.v.targetId;\n\n        let fullPath = [base, id]\n        if (relPath) fullPath.push(relPath);\n\n        return _.get(this.data, fullPath.join(\".\"))\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.v[i] = this.getFull(map[i])\n        }\n        return this;\n    },\n\n    it: function (collection, cb) {\n        collection = this.get(collection);\n\n        //let subTb = Object.create( this );\n        //subTb.v  = Object.create( this.v )\n\n        //prepare\n        let subTb = this;\n        let oldValues = {\n            slot: subTb.v.slot,\n            value: subTb.v.value,\n            info: subTb.v.info,\n            sub: subTb.v.sub\n        }\n        subTb.v.slot = null;\n        subTb.v.value = null;\n        subTb.v.info = null;\n        subTb.v.sub = null;\n        for (var i in collection) {\n            subTb.v.slot = i;\n            subTb.v.value = collection[i];\n            subTb.v.info = i;\n            subTb.v.sub = {};\n            cb(subTb, subTb.v)\n        }\n\n        //cleanup\n        for (var i in oldValues)\n            subTb[i] = oldValues[i]\n\n    },\n\n    run: function (cb) {\n        try {\n            let result = cb(this, this.v)\n        } catch (e) {\n            if (e && e.type == \"notApplicable\") {\n                return;\n            }\n            console.log(e)\n        }\n\n        if (this.v.result) {\n\n            if (!this.data.trails[this.v.targetId]) {\n                this.data.trails[this.v.targetId] = {};\n            }\n            Object.assign(this.data.trails[this.v.targetId], this.v.result)\n        }\n    },\n\n    result: function (name, value) {\n        this.v.result[name] = value;\n    },\n\n    check: function (paths) {\n        for (var i in paths) {\n            let path = paths[i];\n\n            if (path == \"isCurrentItem\") {\n                let stateCurrentId = this.state.currentItem.targetid;\n                if (!stateCurrentId || this.v.targetId != stateCurrentId)\n                    throw { type: \"notApplicable\", path: paths[i] }\n            }\n            else {\n                let value = _.get(this.v, paths[i]);\n                if (value === undefined) throw { type: \"notApplicable\", path: paths[i] }\n            }\n        }\n    }\n}\n\nfns.compile = Object.assign({}, fns.evaluate, {\n    setup: function (opt) {\n        this._setup(opt);\n\n        this.clues = {\n            needes: {},\n            provides: {},\n            collections: []\n        }\n\n        return this;\n    },\n    fetch: function (map) {\n        for (var i in map) {\n            this.clues.needes[i] = { key: map[i] }\n            this.v[i] = { test: \"test\" }\n        }\n        return this;\n    },\n\n\n    check: function (check) {\n\n    },\n\n    result: function (name, value) {\n        this.clues.provides[name] = value;\n    },\n\n    it: function (collection, cb) {\n        this.clues.collections.push(collection)\n    },\n\n    run: function (cb) {\n        let result = cb(this, this.v);\n    }\n});\n\n\nvar checks = [\n\n    (tb, v) => {\n\n        tb.fetch({\n            item: [\"item\"]\n        })\n\n        v.score = {\n            total: 0,\n            resolved: [],\n            unresolved: []\n        }\n\n        tb.it(v.item, (tb, v) => {\n            let sub = v.value;\n            if (!sub.id) return;\n\n            v.score.total++;\n\n            let result = tb.getFull([\"result\", sub.id]);\n\n            if (!result || !result.isReady) v.score.unresolved.push(sub.id)\n            else v.score.resolved.push(sub.id)\n        })\n\n        tb.result(\"subScore\", v.score)\n        return { subScore: v.score }\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch({\n            values: [\"result\", \"\", \"values\"],\n            item: [\"item\"],\n            parameters: [\"result\", \"\", \"values.tpl.mold.parameters\"]\n        })\n\n        tb.check([\n            \"values.tpl\"\n        ])\n\n        v.score = { total: 0, defined: 0, undefined: [] }\n        v.params = {};\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n            v.score.total++;\n            if (!v.item[param] && !v.values[param])\n                v.score.undefined.push(param)\n        })\n\n        tb.it(v.parameters, (tb, v) => {\n            let param = v.slot;\n            v.params[param] = true;\n        })\n\n\n        v.score.undefinedCount = v.score.undefined.length;\n        v.score.definedCount = v.score.total - v.score.undefinedCount;\n\n        tb.result(\"tplParamsScore\", v.score);\n        tb.result(\"tplParams\", v.params)\n    },\n\n\n\n    (tb, v) => {\n\n        tb.fetch(  {\n            trails : [\"trails\"],\n\n        })\n        tb.check([\n            \"isCurrentItem\"\n        ])\n\n        console.log(\"trails is currentItem\", v.trails);\n    }\n\n]\n\nvar test = (result) => {\n\n    ub.ctx.data = {\n        items: {\n            bubble1: {\n                slot1: \"salut\",\n                slot2: { id: \"bubble2\" }\n            },\n            bubble2: {\n                test: \"salut\"\n            }\n        },\n        result: {},\n        trails: {}\n    }\n\n    let tb = fns.evaluate.target(\"bubble1\");\n\n    tb.run(checks[0]);\n    tb.run(checks[1]);\n\n    result.tb = tb.v.result;\n    result.trails = ub.ctx.data.trails;\n}\n\ncu.bubbleGuns = {\n    //test,\n\n    setup: function (ctx) {\n        return ub.setup(ctx);\n    },\n    init: function () {\n\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar ub = {\n    ctx: {\n        tb: {\n\n            onchanged: function (changed) { },\n            getNode: function (item, values, result, ctx) {\n                return cu.bubbleTypes.dispatch.getNode(item, values, result, ctx)\n            }\n        },\n\n        data: {\n            state: {\n                nextId: 0\n            }\n        }\n    }\n}\n\n\nvar test = (result) => {\n    ub.ctx.data = { state: { nextId: 0 } };\n    ub.ctx.tb.guns = cu.bubbleGuns.setup(ub.ctx);\n    ub.ctx.tb.flow = cu.bubbleFlow.run(ub.ctx)\n\n    ub.ctx.tb.flow.mergeItem(\"item1\", {\n        id: \"item1\",\n        tpl: {\n            id: \"item2\",\n            type: \"tpl\",\n            main: \"<div style='border:1px solid #007abc'>{h1} {salut} {someothervalue}</div>\"\n        },\n        tpl_path: \"main\",\n        h1: \"noh\",\n        salut: {\n            id: \"item3\",\n            tpl: {\n                id: \"item4\",\n                type: \"tpl\",\n                main: \"<div style='border:1px solid #007abc'>{text}</div>\"\n            },\n            tpl_path: \"main\",\n            text: \"salutare\"\n        }\n    });\n\n\n    ub.ctx.tb.flow.mergeItem(\"item5\", {\n        id: \"item5\",\n        type: \"mirror\",\n        model: \"item1\",\n        data: {\n            id: \"item6\",\n            version: 1,\n            node: {\n                h1: \"hh1\",\n                salut: {\n                    text: \"hey\"\n                }\n            }\n        }\n    })\n\n\n\n    ub.ctx.tb.flow.evaluateflow();\n\n    ub.ctx.tb.flow.mergeItem(\"item6\", {\n        node: {\n            h1: \"hh11\",\n            salut: {\n                text: \"testchanged\"\n            }\n        }\n    })\n\n    ub.ctx.tb.flow.evaluateflow();\n\n\n    result.items = ub.ctx.data.items;\n    result.result = ub.ctx.data.result;\n    result.shaddow = ub.ctx.data.shaddow;\n    //result.item6_1 = ub.ctx.data.result.item5.mirror.node.children[0][0];\n    //result.item6_2 = ub.ctx.data.result.item5.mirror.node.children[0][2].children\n}\n\ncu.bubbleTest = {\n    //test,\n\n    init: function () {\n    },\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport { types } from \"util\";\nvar cu = window.cu;\n\nvar type = {}\n\n\ntype.dispatch = {\n    getNode: function (item, values, result, ctx) {\n        let nodeType = values.type;\n        if (!nodeType) {\n            if (values.tpl) nodeType = \"reactNode\"\n\n            else if (values.node) nodeType = \"dataNode\"\n        }\n\n        if (nodeType && type[nodeType]) {\n            return type[nodeType].getNode(item, values, result, ctx)\n        }\n        else result.isReady = false;\n    }\n}\n\ntype.tpl = {\n    getNode: function (item, values, result, ctx) {\n        delete values.type;\n        let tpl = cu.tplObjParse.run(values);\n        result.viewAs = \"object\";\n        return tpl;\n    }\n}\n\ntype.dataNode = {\n    getNode: function (item, values, result, ctx) {\n        return item.node;\n    }\n}\n\ntype.reactNode = {\n    getNode: function (item, values, result, ctx) {\n\n        let tpl = values.tpl;\n        if (!tpl || !tpl.mold) {\n            result.isReady = false;\n            return;\n        }\n\n        let neededValues = [];\n        let node = cu.reactAssembler.run(tpl, values, (data, path, op) => {\n            let value = _.get(data, path);\n            if (value !== undefined) return value;\n            neededValues.push(path);\n            return \"dummyvalue\"\n        });\n\n        if (neededValues.length) {\n            node = [neededValues, node];\n        }\n        result.viewAs = \"reactComponent\"\n\n        result.cues = { pins: tpl.mold.pins }\n\n        return node;\n\n    }\n\n}\n\ntype.mirror = {\n\n    description: \"\",\n\n\n    getNode: function (item, values, result, ctx) {\n\n\n        let model = ctx.data.items[item.model];\n        let data = values.data;\n\n        let newItem = _.cloneDeep(model);\n\n        if (!result.bubbles) result.bubbles = {};\n        if (!result.cache) result.cache = { data: {} };\n\n        if (!_.isMatch(result.cache.data, data)) {\n            result.cache.data = data;\n\n            for (var i in newItem) {\n                if (i != \"tpl\" && newItem[i].id && data[i]) {\n                    if (result.bubbles[i]) {\n                        ctx.master.mergeItem(result.bubbles[i].id, { data: data[i] })\n                    }\n                }\n            }\n        }\n\n        for (var i in newItem) {\n            if (i != \"tpl\" && newItem[i].id && data[i]) {\n\n                if (result.bubbles[i]) {\n                    newItem[i] = { id: result.bubbles[i].id }\n                }\n                else {\n                    let newId = ctx.master.addItem({ type: \"mirror\", data: data[i], model: newItem[i].id })\n                    result.bubbles[i] = { id: newId, model: newItem[i].id };\n                }\n\n                newItem[i] = { id: result.bubbles[i].id }\n            }\n            else if (data[i]) {\n                newItem[i] = data[i]\n            }\n        }\n\n        newItem.id = item.id;\n\n        let newValues = ctx.master.isCompleteValues(newItem);\n\n        if (!newValues) {\n            result.isReady = false;\n            return;\n        }\n\n        result.mirror = {};\n        ctx.master.evalItem(item, item.id, newValues, result.mirror)\n        if (result.mirror.viewAs) result.viewAs = result.mirror.viewAs;\n        return result.mirror.node;\n    }\n}\n\nvar ub = {\n}\n\n\nvar test = (result) => {\n\n}\n\ncu.bubbleTypes = {\n    //test,\n\n    mirror: type.mirrorBubble,\n\n    types: type,\n    dispatch: type.dispatch,\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar phase1 = {\n\n    run: function (html) {\n        html = html.trim();\n\n        let nest = document.createElement('div');\n        nest.innerHTML = html;\n\n        let specs = [];\n\n        for (var i = 0; i < nest.childNodes.length; i++) {\n            let el = nest.childNodes[i];\n\n            let spec = this._spec(el);\n\n            specs.push(spec);\n        }\n\n        return specs.length == 1 ? specs[0] : specs;\n    },\n\n\n    _spec: function (el) {\n\n        if (el.nodeType == 3) {\n            return el.nodeValue\n        }\n\n        let props = {};\n        for (var i = 0; i < el.attributes.length; i++) {\n            let attr = el.attributes[i];\n            let name = attr.name;\n            if (name.indexOf(\"_\") != -1) {\n                name = name.replace(/\\_(.)/g, (all, char) => { return char.toUpperCase() })\n            }\n            props[name] = attr.value;\n        }\n\n        if (props.class) {\n            props.className = props.class;\n            delete props.class;\n        }\n\n        if (props.style) {\n            props.style = this._style(props.style);\n        }\n\n\n        let spec = {\n          type: \"node\",\n          componentName: el.nodeName.toLowerCase(),\n          props: props,\n          children: null,\n      };\n\n        if ( props.htmlSlot ) {\n          props[ props.htmlSlot ] = el.innerHTML;\n          return spec;\n        }\n\n        if (Object.keys(props) == 0) props = null;\n\n        let children = []\n        el.childNodes.forEach(child => {\n            children.push(this._spec(child))\n        })\n        if (children.length == 0) children = null;\n        spec.children = children;\n\n        return spec;\n    },\n\n    _style: function (str) {\n        str = str + \";\";\n        let reg = /\\s*([^:\\s]+)\\s*\\:\\s*([^;]+)\\s*\\;+/g\n        let css = {};\n        let match;\n        while (match = reg.exec(str)) {\n            css[match[1]] = match[2]\n        }\n\n        return css;\n    },\n\n}\n\nvar phase2 = {\n    run: function (obj , attrs ) {\n      let payload = {\n        ops: [],\n        pins: {},\n        parameters : {},\n        attrs : {},\n        watchAttrs : attrs || []\n      }\n  \n      if ( _.isArray( obj ) )\n        payload.tpl = obj.map(( obj, i)  => this.iterate(obj, [i], payload) )\n      else \n        payload.tpl = this.iterate(obj, [], payload)\n\n      payload.ops.sort ( (a,b) => a.stage - b.stage )\n  \n      return { ops: payload.ops, tpl: payload.tpl, pins : payload.pins , parameters : payload.parameters, attrs : payload.attrs}\n    },\n    iterate: function (obj, path, payload) {\n      if (!obj) return;\n  \n      if (_.isString(obj)) {\n        return this.opValues(obj, path, payload, false);\n      }\n  \n      obj = this.handleObj(obj, path, payload);\n  \n      let childrenPath = path.concat([\"children\"])\n      for (var i in obj.children) {\n        obj.children[i] = this.iterate(obj.children[i], childrenPath.concat(i), payload)\n      }\n  \n      let subPath = path.concat([\"props\"])\n      for (var i in obj.props) {\n        if (i == \"style\") continue;\n        obj.props[i] = this.handleProp(obj.props[i], subPath.concat(i), obj, payload)\n      }\n  \n      if (obj.props && obj.props.style) {\n        let subPath = path.concat([\"props\", \"style\"])\n        for (var i in obj.props.style) {\n          obj.props.style[i] = this.handleProp(obj.props.style[i], subPath.concat(i), obj, payload)\n        }\n      }\n  \n      if (obj.props && obj.props.pin) {\n        payload.pins[ obj.props.pin ] = path;\n      }\n\n      if (obj.props && obj.props.id) {\n        payload.pins[ obj.props.id ] = path;\n      }\n\n      if ( obj.props )\n        payload.watchAttrs.forEach( attr => {\n            if ( !obj.props[attr] ) return ;\n            if ( !payload.attrs[attr] ) payload.attrs[ attr ] = [];\n            payload.attrs[ attr ].push({  path, value : obj.props[attr] } );\n        })\n  \n      return obj;\n    },\n  \n    handleObj: function (obj, path) {\n      return obj;\n    },\n  \n    handleProp: function (obj, path, parent, payload) {\n      if (!_.isString(obj)) return obj;\n  \n      return this.opValues(obj, path, payload, true)\n    },\n    addOp: function (payload, path, op) {\n\n        if ( !op.stage ) op.stage = 0;\n      payload.parameters[ op.action ] = op.path;\n      payload.ops.push(op)\n    },\n  \n    prepareAction: function (item) {\n      return item;\n    },\n    opValues: function (value, path, payload, concatOp) {\n      if (!_.isString(value)) return value;\n      if (value.indexOf(\"{\") == -1) return value;\n  \n      let ops = payload.ops;\n      let values = value.split(/(\\{[^}\\n\\:\\;]+)\\}/g);\n      values = values.map((item, i) => {\n        if (item == \"\") return null\n        if (item.charAt(0) !== \"{\") return item;\n  \n        item = item.substring(1);\n        let action = this.prepareAction(item)\n        return { type: \"value\", action: action };\n      })\n        .filter(item => item)\n  \n  \n      if (values.length == 0) return null;\n      else if (values.length == 1) {\n        values = values[0];\n        if (values.type) {\n          values.path = path;\n        }\n        if ( _.isObject( values ))\n          this.addOp(payload, values.path, values)\n        return values;\n      }\n      else if (!concatOp) {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.stage = 0;\n            this.addOp(payload, path, item);\n  \n            return item;\n          }\n          else return item;\n        })\n        return values;\n      }\n      else {\n        values = values.map((item, i) => {\n          if (item.type) {\n            item.path = path.concat(i);\n            item.index = i;\n            item.concatParent = true;\n            item.stage = 0;\n\n            this.addOp(payload, path, item);\n            return item;\n          }\n          else return item;\n        })\n        this.addOp(payload, path, { path: path, type: \"concat\", ops: values, stage : 1 });\n        return values;\n      }\n  \n    }\n  \n  }\n\n\nvar ub = {\n    run : function ( html , attrs ) {\n        var result = phase1.run( html );\n        result = phase2.run( result, attrs );\n\n        return result;\n    }\n}\n\nvar test = (result) => {\n    result.output = ub.run( \"<div>Salut {#test} </div>\");\n}\n\ncu.parseStringIntoComp = {    \n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n    def: `\n        @obj string \n        transform it into componentsObjects\n    `\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport js_beautify from \"js-beautify\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n\n    makestr : function ( obj, indent ) {\n        if ( _.isFunction( obj ) ) return obj.toString();\n        if ( _.isString( obj ) ) {\n \n            let usequouts = '\"';\n            if ( obj.indexOf( \"\\n\") != -1 ) usequouts = \"`\";\n            if ( obj.indexOf('\"') != -1 ) usequouts = \"`\";\n            \n            if (usequouts == \"`\") {\n                obj = js_beautify.html( obj, { \n                    indent_size : 2,\n                    indent_level : indent + 1,\n                    preserve_newlines : true,\n                    max_preserve_newlines : 0,\n                    indent_inner_html: true,\n                } )\n\n                obj = obj.trimStart();\n            }\n            return usequouts + obj + usequouts\n        }\n        if ( _.isArray(obj)) {\n            let lines = [];\n            for ( var i in obj ) {\n                let value = this.makestr( obj[i] , indent + 1);\n\n                lines.push( value)\n            }\n\n            return \"[\" + lines.join(\",\\n\") + \"]\";\n        }\n\n        if ( _.isObjectLike(obj)) {\n            let lines = [];\n            let multiLine = false;\n            for ( var i in obj ) {\n                let slot = i;\n                let value = this.makestr( obj[i], indent + 1 );\n\n                if ( !slot.match( /^[a-z0-9$_]+$/) ) slot = '\"' + slot + '\"'\n\n                if ( value.indexOf(\"\\n\") != -1 ) multiLine = false;\n                lines.push( slot + \":\" + value )\n            }\n\n            return \"{\" + lines.join(\",\") + \"}\"\n        }\n        \n        if ( _.isNil( obj )) return \"null\"\n\n        return obj.toString();\n    },\n\n    beautify : function ( str ) {\n        return js_beautify.js_beautify( str, {\n            indent_size :2 ,\n            indent_level : -1, \n            max_preserve_newlines : 1,\n            preserve_newlines : true\n        } )\n    }\n}\n\nvar test = (result) => {\n\n    var obj = {\n        tpl : `<div>s\nce mai faci <span>\nsdf</span>\n        alut</div>`,\n        fn : function ( ) {\n\n        },\n        \"#b ce mai faci\" : \"\",\n        x : {\n            \"test\" : \"salut\" \n        }\n    }\n\n    result.str = ub.makestr( obj ,10 )\n    result.beuaty = js_beautify.js_beautify( result.str, {\n        indent_size :2 ,\n        indent_level : -1, \n        max_preserve_newlines : 1,\n        preserve_newlines : true\n    } )\n}\n\ncu.prettyScode = {\n    //test,\n\n    run: function (name) {\n        let str =  ub.makestr(name, 1)\n        return ub.beautify( str );\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {}\n    },\n\n    run: function (model, data, getter ) {\n        model = _.cloneDeep( model );\n        let obj = model.mold.tpl;\n\n        this.applyOps( model.mold.ops, obj , data,  getter );\n\n\n        if ( obj.props ) \n            obj.props.tplid = model.uid;\n        \n\n        return obj;\n    },\n\n    applyOps : function ( ops, obj, data, getter ) {\n        let get = getter || _.get;\n\n        let newOps = [];\n        for (var i = 0; i < ops.length; i++) {\n\n            let op = ops[i];\n\n            if (op.type == \"value\") {\n                let value = get(data, op.action, op, newOps);\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"computedValue\") {\n                let value = op.value;\n                _.set(obj, op.path, value)\n            }\n            else if (op.type == \"concat\") {\n                let value = get(obj, op.path, op, newOps).join(\"\");\n                _.set(obj, op.path, value)\n            }\n        }\n\n        if ( newOps.length ) \n            this.applyOps( newOps, obj, data, getter )\n    },\n\n\n}\n\n\nvar inputs = {\n    data: {\n        \"#color\": 12,\n        \"#handle\": \"handle\",\n        \"#test2\": \"test2\",\n        \"#test1\": \"test1\",\n        \"#title\": \"title it is\",\n    }\n}\n\nvar test = (result) => {\n\n    let mold = cu.tests.get(\"mold.x\");\n\n    if (!mold) return \"pending\";\n\n    let value = ub.run(mold, inputs.data);\n\n    result.value = value;\n    result.mold = mold;\n\n    cu.tests.pin( \"reactTree\", value)\n\n    //result.mold = value;\n}\n\ncu.reactAssembler = {\n    //test,\n\n    run: function (mold, data, getter) {\n        return ub.run(mold, data, getter)\n    },\n\n    init: function () {\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","\nimport React, { Component } from 'react';\n\nclass MyInput extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        value : \"\"\n      }\n\n      this.onChange = this.onChange.bind( this );\n    }\n\n    onChange ( evt ) {\n      this.setState( {value : evt.target.value});\n\n      if ( this.props.onChange ) this.props.onChange( evt );\n    }\n  \n\n    componentWillReceiveProps(nextProps) {\n      if ( nextProps.value!==undefined && nextProps.value.text!==undefined) this.setState({value : nextProps.value.text})\n    }\n\n    render () {\n\n      let props = Object.assign({}, this.props, {value : this.state.value, onChange : this.onChange })\n      \n      return React.createElement(\"input\", props, null);\n    }\n  }\n\n  export default MyInput;","import _ from \"lodash\"\nimport faker from \"faker\"\nimport React, { Component } from 'react';\nimport MyInput from \"../../components/MyInput\"\nvar cu = window.cu;\n\n\nvar customComponents = {\n  myinput : MyInput\n}\n\n\nvar ub = {\n\n    makeComponent : function (obj, i ) {\n        if (!obj) return null;\n        if (_.isString(obj)) return obj;\n        if (_.isArray(obj)) return obj.map((obj, i) => this.makeComponent(obj, i))\n        if ( !obj.componentName) return null;\n    \n        let children = null;\n        if (obj.children) children = obj.children.map((obj, i) => this.makeComponent(obj, i));\n    \n        let props = null;\n        if (obj.props) props = _.cloneDeep(obj.props);\n    \n        if (props && !props.key) props.key = i;\n        if (!props) props = { key: i }\n    \n        if (obj.componentName == \"style\") {\n          children = [_.flattenDeep(children).join(\"\")]\n        }\n    \n        let component = obj.componentName;\n        if (customComponents[component]) component = customComponents[component];\n    \n        var node;\n        try {\n          node = React.createElement(component, props, children)\n        } catch (e) {\n          console.error(e)\n          node = \"error\"\n        }\n        return node;\n        },\n\n}\n\nvar test = (result) => {\n}\n\ncu.reactUtils = {\n    //test,\n\n    makeComponent: function (tplComponent) {\n        return ub.makeComponent(tplComponent, 1)\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nimport $ from \"jquery\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    createStore : function ( tb, hapi, fns  ) {\n        if ( tb.cache.store ) return tb.cache.store;\n\n        let tpls = {\n          changeValueTpl : ( path ) =>  {\n            return function ( evt ) {\n              let value = evt.target.value;\n              hapi.set( path, value )\n            }\n          }, \n          runActionTpl : ( action ) => {\n            return function ( evt ) {\n              if ( hapi[action] ) return hapi[action]( evt );\n            }\n          },\n          runWithActionTpl : ( action ) => {\n            return function ( evt ) {\n                let target = evt.target;\n                let attr = $(target).attr( action[1])\n                if ( attr === undefined ) {\n                    target = $(target).parents(\"[\" + action[1] + \"]\")\n                    attr = $(target[0]).attr( action[1])\n\n                }\n\n              if ( hapi[action[0]] ) return hapi[action[0]]( attr, evt );\n            }\n          }\n\n        }\n\n\n        let store = {}\n  \n        for ( var i in fns.change ) {\n          store[i]  = tpls.changeValueTpl( fns.change[ i ])\n        }\n  \n  \n        for ( var i in fns.run ) {\n            store[i]  = tpls.runActionTpl( fns.run[ i ])\n          }\n\n          \n            \n        for ( var i in fns.runWith ) {\n            store[i]  = tpls.runWithActionTpl( fns.runWith[ i ])\n          }\n  \n        tb.cache.store = store;\n        return store;\n      }\n\n}\n\nvar test = (result) => {\n}\n\ncu.store = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    get : function ( tb, hapi,  fns ) {\n        return ub.createStore( tb, hapi, fns )\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            data: {\n\n                items: {},\n                subs: {},\n            },\n\n            src: {\n                getItem: function (id) {\n\n                },\n\n                getSubs: function (id) {\n\n                }\n            },\n\n            tpls: [],\n            registerTpl: function (args, master) {\n                this.tpls.push(args.path);\n            },\n\n            cases: [\n                result => {\n                    let isApplicable = !result.obj.item;\n\n                    if (!isApplicable) return;\n\n                    let id = result.obj.id;\n                    let item = ub.ctx.payload.data.items[id]\n\n                    if (!item) {\n                        item = {\n                            text: faker.company.catchPhrase(),\n                            id: id\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"items\", id], _.cloneDeep(item) )\n                    }\n\n\n                    result.obj.item = item;\n                    return \"applied\";\n                },\n\n                result => {\n                    let isApplicable = !result.obj.subs && result.obj.item && result.obj.level < 4;\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let id = result.obj.id;\n\n                    let subs = ub.ctx.payload.data.subs[id];\n\n                    if (!subs && !ub.ctx.payload.generated) {\n                        subs = {};\n\n                        let count = 4;\n                        for (var i = 0; i < count; i++) {\n                            let id = faker.random.uuid();\n                            let tpl = null;\n                            if (obj.level == 1) tpl = faker.random.arrayElement([null, \"columns\"]);\n                            let sub = {\n                                id: id,\n                                level: result.obj.level + 1,\n                                tpl: tpl\n                            }\n\n                            subs[id] = sub;\n                        }\n\n                        if (ub.ctx.payload.setter)\n                            ub.ctx.payload.setter([\"subs\", id], _.cloneDeep( subs ) )\n\n                    }\n\n                    if ( !subs ) subs = {}\n\n                    result.obj.subs = subs;\n                    result.subs = subs;\n\n                    return \"applied\";\n                }\n            ]\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run: function (obj, attrs) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs || [];\n\n        let mold = this.it(obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar inputs = {\n    items: { level: 0 },\n    subs: {},\n}\nvar test = (result) => {\n    let value = ub.run(inputs.items);\n\n    result.x = value;\n\n\n    cu.tests.pin(\"testRepo\", value)\n    //result.mold = value;\n}\n\ncu.testDataGenerator = {\n    //test,\n\n    run: function (id, data, generated,  setter) {\n\n        ub.ctx.payload.data = data;\n        ub.ctx.payload.setter = setter;\n        ub.ctx.payload.generated = generated;\n\n        return ub.run({ id: id || \"root\", level: 0 }, [])\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb : {}\n    },\n\n    run : function ( str ) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run( mold , [\"comp\"] );\n\n        return mold;\n    },\n\n\n}\n\n\nvar inputs = {\n    tplTree : {\n        x : `<div> <div id='title' comp='salut' class='{#test1} {#test2}' style='color : {#color}'> {#handle} : {#title}\n        \n        \n            <style>\n                @input \n                .column  { x : 12; background : {styleforred}red;}\n            </style>\n        </div> `\n    }\n}\nvar test = (result) => {\n    let value = ub.run( inputs.tplTree);\n\n    result.x = value.x.mold;\n\n    cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n}\n\ncu.testMolds = {\n    //test,\n\n    run: function (obj) {\n        return ub.run(obj, [])\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport $ from \"jquery\"\n\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n\n        wallet: {}\n    },\n\n    run: function (str) {\n        let mold = str;\n        mold = this.ctx.tb.parser.run(mold, [\"comp\"]);\n\n        return mold;\n    },\n\n    parseTpl: function (obj) {\n        let mold = this.ctx.tb.parser.run(obj, [\"comp\"]);\n        return mold;\n    },\n\n    renderTpl: function (mold, data, getter) {\n        return this.ctx.tb.reactAssembler.run(mold, data, getter)\n    },\n\n    assembleTpl: function (mold, data) {\n        if (_.isString(mold)) mold = _.get(this.ctx.payload.molds, mold);\n        return this.ctx.tb.reactAssembler.run(mold, data, (data, path) => {\n            let value = _.get( data, path );\n            if ( value.node ) return value.node;\n            return value;\n        })\n    },\n\n\n    iterateBubbles: function (bubbles, count ) {\n        if ( count == undefined ) count = 0;\n\n        if ( count && count > 5 ) return;\n\n        bubbles = bubbles || this.ctx.payload.bubbles;\n\n        let changed = false;\n        for (var i = 0; i< bubbles.length; i++ ) {\n            let bubble = bubbles[i];\n\n            if ( bubble.isReady ) continue;\n\n\n            let shouldAssemble = true;\n\n            for (var j in bubble) {\n                if (bubble[j].tpl) {\n                    if ( !bubble[j].isRegistered ) {\n                        bubble[j].isRegistered = true;\n                        this.addBubble( bubble[j] )\n                    }\n                    if (!bubble[j].isReady) {\n                        shouldAssemble = false;\n                        continue;\n                    }\n                }\n            }\n\n            if (shouldAssemble) {\n                let node = ub.assembleTpl(bubble.tpl, bubble);\n                bubble.node = node;\n                bubble.isReady = true;\n                bubble.computedAtStep = this.ctx.payload.step++;\n                changed = true;\n            }\n        }\n        if ( changed)\n            this.iterateBubbles( bubbles, count+1)\n\n    },\n\n    addBubble: function (bubble) {\n        bubble.uid = cu.uids.run(\"bubble\");\n        bubble.addedAtStep = this.ctx.payload.step;\n        this.ctx.payload.bubbles.push(bubble);\n        //this.iterateBubbles();\n    },\n\n    start: function (molds) {\n        this.ctx.payload = {\n            bubbles: [],\n            molds: molds,\n            step : 0,\n        }\n    }\n\n}\n\n\nvar inputs = {\n    tplTree: {\n        x: `\n            <div><input id='order' syncwith={value} />\n            {value} \n            <div id='menu'> </div>\n            <div id='bar'> </div>\n            <div id='window' > {content}</div>\n            </div>\n        `,\n        y: \"salut {#test} salutare din alt template \"\n    }\n}\nvar test = (result) => {\n\n    ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n    ub.addBubble({\n        tpl: \"x\", \n        value : \"salutare\", \n        value_setter : () => { console.log( \"setting\")},\n        content : {\n            tpl : \"y\",\n            \"#test\" : \"yo\"\n        }\n    })\n\n    ub.iterateBubbles();\n\n    result.bubbles = ub.ctx.payload;\n    //cu.tests.pin( \"mold\", value)\n    //result.mold = value;\n    //return nodes;\n}\n\nlet data = window.salut = { value: \"elefant\" }\ncu.testTplAssembing = {\n    //test,\n\n    run: function () {\n        ub.start(ub.parseTpl(_.cloneDeep(inputs.tplTree)));\n\n        ub.addBubble({\n            tpl: \"x\", \n            value : \"salutare\", \n            value_setter : () => { console.log( \"setting\")},\n            content : {\n                tpl : \"y\",\n                \"#test\" : \"yo\"\n            }\n        })\n    \n        ub.iterateBubbles();\n    \n        //result.bubbles = ub.ctx.payload;\n        return ub.ctx.payload.bubbles[0].node;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\n\nvar ub = {\n\n    ctx: {\n        payload: {\n            tpls: {},\n            registerTpl: function (args, result,  master) {\n\n                result.obj.uid = cu.uids.run();\n\n                if ( result.obj.mold.props ) result.obj.mold.props.tplId = result.obj.uid;\n                //this.tpls.push(args.path);\n\n                this.tpls[ args.path.join(\".\") ] = result.obj.uid;\n            }\n        },\n\n        tb: {\n            //parseHtml: cu.parseStringIntoComp\n        }\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: obj,\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.sub) {\n            let ret = this.it(result.sub[i], path.concat(i));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n        let checks = {\n            isString: result => result.obj && result.obj.trim,\n            isUnparsedTpl: result => result.obj && result.obj.html && !result.obj.mold,\n            isList: result => true\n        }\n\n        let cases = {\n            \"isString\": (result) => {\n                result.values = result.obj = { html: result.obj };\n                result.sub = [];\n                return \"applied\";\n            },\n            \"isUnparsedTpl\": (result) => {\n                result.sub = [];\n                let obj = Object.assign({}, result.obj, {\n                    mold: this.ctx.tb.parseHtml.run( result.obj.html, this.ctx.payload.attrs )\n                })\n\n                result.values = result.obj = obj;\n\n                result.ops.push({ name: \"registerTpl\", path: result.path })\n                return \"applied\";\n            },\n        }\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _check = checks[i];\n                if (!_check(result)) continue;\n\n                let _case = cases[i];\n                let ret = _case(result);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op, result, this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.values;\n    }\n}\n\nvar test = (result) => {\n    let value = ub.run({ x: `\n        <div pin = \"test\" > \n        <input id=\"dalut\" test=\"{salut}\" />\n            <div> \n                    <div xid='x{#tes}'> \n                    </div>\n            </div>\n\n        </div>\n    `, y: { a: { b: `\n    \n        <div id='yo'> Salutare </div>\n    ` } } }, []);\n    //value = ub.it(value, []);\n\n    result.mold = value;\n}\n\ncu.tplObjParse = {\n    //test,\n\n    run: function (obj, attrs ) {\n        return ub.run(obj, attrs )\n    },\n\n    init : function ( ) {\n        ub.ctx.tb.parseHtml = cu.parseStringIntoComp;\n    },\n    \n    def: `\n        @obj with string or .html slots \n        transform it into componentsObjects\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        tb: {},\n        payload1: {\n            tplsMapping: [\n                \"map\",\n                \"topic\",\n                \"item\",\n                \"entry\"\n            ],\n            defaultTpl: \"item\",\n            usedGlobalStyles: {},\n\n\n            addSubs: function (args, result, master) {\n                result.obj.subs = result.values;\n                //console.log( arguments );\n\n                let obj = result.obj;\n                let content = [];\n                for (var i in result.values) {\n                    let item = result.values[i];\n                    if (item.nodes && item.nodes.card)\n                        content.push(item.nodes.card)\n                }\n\n                if (content) {\n                    result.obj.nodes.content = master.ctx.payload.useTemplate(obj.tpl + \".content\", { subs: content });\n                }\n\n                let data = result.obj.nodes;\n                result.obj.nodes.card = master.ctx.payload.useTemplate(obj.tpl + \".card\", data)\n\n            },\n\n            useTemplate: function (tpl, data, skipGlobalStyle) {\n\n                if (!skipGlobalStyle) {\n                    let route = tpl.split(\".\");\n                    let root = ub.ctx.wallet.molds;\n\n                    for (var i = 0; i < route.length; i++) {\n                        let step = route[i];\n                        if (root[step].globalStyle) {\n                            let id = root[step].globalStyle.uid;\n                            this.usedGlobalStyles[id] = { parent: root[step] };\n                        }\n                        if (root[step])\n                            root = root[step];\n                        else break;\n                    }\n                }\n\n                let mold = _.get(ub.ctx.wallet.molds, tpl); // .item.title;\n                return ub.ctx.tb.reactAssembler.run(mold, data)\n            },\n            cases: [\n                (result, master) => {\n\n                    let isApplicable = !result.obj.data\n                    if (!isApplicable) return;\n\n                    let tpls = master.ctx.payload.tplsMapping;\n\n                    let defaultTpl = tpls[result.obj.level] || master.ctx.payload.defaultTpl;\n\n\n                    let obj = {\n                        tpl: result.obj.tpl || defaultTpl,\n                        data: result.obj.item,\n                        level: result.obj.level,\n                        nodes: {}\n                    }\n\n                    result.subs = result.obj.subs;\n                    result.obj = obj;\n                    result.ops.push({ name: \"addSubs\", args: \"subs\" })\n\n                    return \"applied\"\n                },\n\n                (result, master) => {\n                    let isApplicable = !result.obj.nodes.title\n                    if (!isApplicable) return;\n\n                    let obj = result.obj;\n\n                    let mold = ub.ctx.wallet.molds.item.title;\n                    let values = {\n                        title: result.obj.data.text,\n                        level: result.obj.level\n                    }\n\n                    result.obj.nodes.title = master.ctx.payload.useTemplate(obj.tpl + \".title\", values);\n\n                    return \"applied\"\n                },\n\n\n            ]\n\n        },\n\n    },\n\n    getMolds: function (tpls) {\n        let molds = this.ctx.tb.parser.run(tpls);\n        return molds;\n    },\n\n\n    buildTpls: function (data) {\n        let node = this.ctx.tb.iterator.run(data, { payload: this.ctx.payload1 });\n        return node;\n    },\n\n    addGlobalStyles: function (nodes, gbs) {\n        let styles = [];\n        gbs = gbs || this.ctx.payload1.usedGlobalStyles\n\n\n        var parent;\n\n        let makeSelector = (path) => \"[tplid='\" + parent[path].uid + \"']\";\n\n        let getter = (data, path) => {\n            if (parent[path]) {\n                return makeSelector(path)\n            }\n            else if (path == \"*\")\n\n                return Object.keys(parent).filter(item => item != \"globalStyle\").map(item => makeSelector(item)).join(\",\")\n\n            return _.get(data, path)\n        }\n\n        let data = { color: \"red\" }\n        for (var i in gbs) {\n            parent = gbs[i].parent;\n            let style = ub.ctx.tb.reactAssembler.run(parent.globalStyle, data, getter)\n            styles.push(style)\n        }\n\n        if (styles.length) {\n            nodes = [nodes, styles];\n        }\n        return nodes;\n    }\n}\n\nvar input = {\n    tpls: {\n        map: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div>{subs}</div>\",\n            card: \"<div class='map'>{title} {content} </div>\",\n            style: `\n\n            `\n        },\n        topic: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='topic'>{title} {content} </div>\"\n        },\n        item: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='item'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n        entry: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\"\n        },\n\n        summart: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>summary</div>\",\n            card: \"<div class='entry'>{title} {content} </div>\",\n            style: `\n            \n            `\n        },\n\n        columns: {\n            title: \"<div class='title level{level}'>{title}</div>\",\n            content: \"<div class='content'>{subs}</div>\",\n            card: \"<div class='columns'>{title} {content} </div>\",\n            globalStyle: `<style htmlSlot='content'>\n               {content} { display : flex; background : hsla(100, 50%, 70%, 0.4)}\n               {content}>* { flex-basis : 100px; padding :0px 10px; border-left : 1px solid red; }\n         \n            </style>`\n        },\n    }\n}\n\nvar test = (result) => {\n    let wallet = {\n        molds: ub.getMolds(input.tpls),\n        repo: cu.tests.get(\"testRepo\"),\n    }\n\n    ub.ctx.wallet = wallet;\n\n    wallet.tpls = ub.buildTpls(wallet.repo);\n\n    let card = wallet.tpls.nodes.card;\n    card = ub.addGlobalStyles(card)\n    cu.tests.pin(\"testRoot\", card)\n    Object.assign(result, wallet)\n}\n\ncu.treeCardsBuilder = {\n    //test,\n\n    run: function (obj) {\n\n        let wallet = ub.ctx.wallet = {\n            molds : obj.molds,\n            repo  : obj.data\n        };\n\n        Object.assign(ub.ctx.payload1, {\n            tplsMapping: obj.mappings.tplsMapping,\n            defaultTpl: obj.mappings.defaultTpl, \n            usedGlobalStyles: {},\n        });\n\n        wallet.tpls = ub.buildTpls(wallet.repo);\n\n        let card = wallet.tpls.nodes.card;\n        card = ub.addGlobalStyles(card)\n\n        return card;\n    },\n\n    init: function () {\n        ub.ctx.tb.parser = cu.tplObjParse;\n        ub.ctx.tb.reactAssembler = cu.reactAssembler;\n        ub.ctx.tb.iterator = cu.treeIterator;\n    },\n\n    def: `\n    `,\n\n    debug: {\n        ub: ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n    },\n\n    run : function ( obj, attrs ) {\n        let oldPayload = this.ctx.payload;\n\n        this.ctx.payload.attrs = attrs;\n\n        let mold = this.it( obj, []);\n\n        this.ctx.payload = oldPayload;\n\n        return mold;\n    },\n\n\n    it: function (obj, path) {\n        let oldPayload = null;\n        let result = {\n            oldPayload: null,\n\n            obj: obj,\n            sub: obj,\n\n            master: this,\n            path: path,\n            values: {},\n            ops: []\n        }\n\n        this.prepare(result);\n\n        for (var i in result.subs) {\n            let ret = this.it(result.subs[i], path.concat([i]));\n            result.values[i] = ret;\n        }\n\n        return this.integrate(result)\n    },\n\n    addPayload: function (result, obj) {\n        if (!result.oldPayload) {\n            result.oldPayload = this.ctx.payload;\n            this.ctx.payload = Object.create(this.ctx.payload);\n        }\n        Object.assign(this.ctx.payload, obj);\n    },\n\n    prepare: function (result) {\n\n        let cases = this.ctx.payload.cases;\n\n        let hasChanges = true;\n        let applied = false;\n        let count = 0;\n        while (hasChanges && count < 5) {\n            hasChanges = false;\n            count++;\n            for (var i in cases) {\n                let _case = cases[i];\n                let ret = _case(result, this);\n                if (ret == \"applied\") {\n                    hasChanges = true;\n                    applied = true;\n                    break;\n                }\n            }\n        }\n    },\n\n    integrate: function (result) {\n        if (result.ops.length) {\n            for (var i in result.ops) {\n                let op = result.ops[i];\n                this.ctx.payload[op.name](op.args, result,  this)\n            }\n        };\n\n        if (result.oldPayload) this.ctx.payload = result.oldPayload;\n\n        return result.obj;\n    }\n}\n\nvar test = (result) => {\n}\n\ncu.treeIterator = {\n    //test,\n\n    run: function (obj, ctx ) {\n        let mub = Object.create( ub )\n        mub.ctx = ctx;\n        if ( !ctx.payload ) ctx.payload = { cases : [] }\n        return mub.run(obj, [])\n    },\n\n    init : function ( ) {\n        //ub.ctx.tb.parser = cu.tplObjParse;\n        //ub.ctx.tb.reactAssembler = cu.reactAssembler;\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nimport faker from \"faker\"\nvar cu = window.cu;\n\n\n\nvar ub = {\n\n    ctx: {\n        nextUID : 0\n    },\n\n    run : function (name ) {\n        return (name || \"uid\" ) +\"_\"+ this.ctx.nextUID++;\n    },\n\n}\n\nvar test = (result) => {\n}\n\ncu.uids = {\n    //test,\n\n    run: function (name) {\n        return ub.run(name);\n    },\n    \n    def: `\n    `,\n\n    debug : {\n        ub : ub\n    }\n}","import _ from \"lodash\"\nvar cu = window.cu;\n\nfor (var i in cu) {\n    if (cu[i].init) cu[i].init();\n}\n\n\n\ncu.tests = {\n    wallet: {\n        test: {},\n        pins: {},\n        pending: []\n    },\n    pin: function (name, value) {\n        this.wallet.pins[name] = value;\n    },\n    get: function (name) {\n        let value = _.get(this.wallet.pins, name);\n        if (!value) value = _.get(this.wallet.test, name);\n        return value;\n    }\n}\n\n\nfor (var i in cu) {\n    if (cu[i].test) {\n        cu.tests.wallet.pending.push(i);\n\n    }\n}\n\n\nlet passes = 0;\nwhile (passes < 5 && cu.tests.wallet.pending.length) {\n    let i = cu.tests.wallet.pending.shift();\n    passes++;\n    let result = {};\n    let ret;\n    try {\n        ret = cu[i].test(result);\n    } catch (e) {\n        console.log(\"error when running \", i, e)\n    }\n\n    if (ret == \"pending\") {\n        cu.tests.wallet.pending.push(i)\n        continue;\n    }\n    console.group(\"test for \", i)\n\n    cu.tests.wallet.test[i] = result;\n\n    if (ret) console.log(ret)\n    if (Object.keys(result)) {\n        for (var i in result) console.log(i, result[i])\n    }\n    console.groupEnd();\n}\n\nif (cu.tests.wallet.pending.length)\n    console.error(\"error with tests : \")\n\n\n","\nimport cu from './main.js';\nimport './units/brand.js';\nimport './units/bubbleBoard.js';\nimport './units/bubbleFlow.js';\nimport './units/bubbleGuns.js';\nimport './units/bubbleTest.js';\nimport './units/bubbleTypes.js';\nimport './units/db.js';\nimport './units/parseStringIntoComp.js';\nimport './units/prettyScode.js';\nimport './units/reactAssembler.js';\nimport './units/reactUtils.js';\nimport './units/store.js';\nimport './units/testDataGenerator.js';\nimport './units/testMolds.js';\nimport './units/testTplAssembling.js';\nimport './units/tplObjParse.js';\nimport './units/treeCardsBuilder.js';\nimport './units/treeIterator.js';\nimport './units/uids.js';\nimport './init.js';\nexport default cu;\n   ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager\";\nimport KeyboardManager from \"./managers/KeyboardManager\"\nimport StaticManager from \"./managers/StaticManager\"\nimport { TimerManager as TimerManagerBuilder } from \"./managers/TimerManager\"\nimport PouchDB from \"pouchdb\"\nimport js_beautify from \"js-beautify\"\nimport { fchown, link, fstat } from 'fs';\nimport { debug } from 'util';\nimport faker from 'faker'\nimport { timingSafeEqual } from 'crypto';\nimport cu from \"./units/\"\nimport { delay } from 'q';\n\nvar fns = window.fns = {}\n\nvar ctxpins = window.ctxpins = {};\n\nvar customComponents = {\n  codemirror: CodeMirrorEditor\n}\n\nvar DataManager = window.DataManager;\nDataManager.newAPI = true;\n\nvar TimerManager = TimerManagerBuilder.init(DataManager);\n\n//--------------------\nwindow.$ = $;\n\nvar pinedTasks = `\n`\n\nvar hapi = {\n  showhud: function () {\n    let currentView = DataManager.getValue(\"workingant.viewState.path\");\n\n    console.log(currentView);\n    currentView = currentView == \"antView.map.nodes\" ? \"bridge\" : \"map\"\n\n    this.goToCard(currentView);\n\n    //DataManager.set(\"workingant.viewState.path\", currentView);\n  },\n  placeorder: function (evt) {\n    if (evt.which !== 13) return;\n\n    flow.place();\n    DataManager.set(\"workingant.data.input\", { text: \"\" })\n    flow.restart();\n  },\n  set: function (path, value) {\n    DataManager.set(path, value)\n  },\n  parseinput: function () {\n    let text = DataManager.getValue(\"workingant.data.input\");\n    if (_.isString(text))\n      flow.parse(text)\n  },\n\n  select: function (id) {\n    console.log( \"selecting\", id )\n    flow.change({ parent: id })\n    DataManager.set(\"repo.uistate.selected\", id)\n\n    $(\"#order\").focus();\n  },\n\n  goToCard: function (id) {\n    var cards = {\n      bridge: \"antView.bridge.nodes\",\n      map: \"antView.map.nodes\"\n    }\n\n    let path = cards[id];\n\n    if (id == \"bridge\") {\n      myUB.bridgeLoader.loadBridge();\n    }\n\n    DataManager.set(\"workingant.viewState.path\", path);\n\n  },\n\n  selectMap: function (id) {\n    console.log(\"selecting map\", id);\n    myUB.mapview.loadMap(id)\n    this.goToCard(\"map\");\n  },\n}\n\nDataManager.setTrigger(\"workingant.data.input\", \"ada\", {\n  run: hapi.parseinput\n})\n\n\nDataManager.setCombined(\"ub.flow\", {\n  start: function () {\n    this.wallet = {\n      step: { createdAt: new Date().getTime() },\n    }\n  },\n\n  parse: function (input) {\n    var result = input.match(/^(\\.[^\\s]+\\s+)*/)\n    var text = input.substr(result[0].length)\n    var dirs = result[0].trim().split(\" \");\n\n    if (!this.wallet.step.editStartedAt) this.wallet.step.firstCharAt = new Date().getTime();\n\n    this.wallet.step.text = text;\n  },\n\n  place: function () {\n    let ant = {\n      text: this.wallet.text,\n      id: myUB.antsDbState.getId(),\n      times: {\n        createdAt: this.wallet.step.createdAt,\n        firstCharAt: this.wallet.step.firstCharAt,\n        addedAt: new Date().getTime()\n      }\n    };\n\n    let parent = this.getParent();\n\n\n\n  }\n\n})\n\nvar flow = {\n\n  start: function () {\n    this.wallet = {\n      step: {},\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  restart: function () {\n    let prevStep = this.wallet.step;\n    this.wallet = {\n      step: {\n        parent: prevStep.parent\n      },\n      startedAt: new Date().getTime(),\n      actions: this.main,\n      parser: this.parser\n    }\n  },\n\n  parse: function (text) {\n    this.wallet.parser.parse(this.wallet, text)\n  },\n\n  change: function (values) {\n    this.wallet.actions.change(this.wallet, values)\n  },\n\n  place: function () {\n    this.wallet.actions.place(this.wallet)\n  },\n\n  parser: {\n    parse: function (wallet, text) {\n      wallet.actions.change(wallet, { text: text, x: text.substr(1) })\n    }\n  },\n\n  main: {\n    place: function (wallet) {\n      if (wallet.step.text == \"destroy\") {\n        myUB.db.destroy();\n        return;\n      }\n      else if (wallet.step.text.indexOf(\".m\") == 0) {\n        let id = this.createMap(wallet.step.text.substr(2).trim());\n        hapi.selectMap(id);\n        return;\n      }\n      else if ( wallet.step.text.indexOf(\".t\") == 0 ) {\n        let text = wallet.step.text.substr( 2 ).trim();\n        let root = DataManager.getWallet(\"repo.root\");\n        let parent = root.id;\n\n        wallet.step.text = text;\n        wallet.step.parent = parent;\n        wallet.step.selectItem = true;\n      }\n\n      this.add(wallet)\n    },\n    change: function (wallet, values) {\n      _.merge(wallet.step, values)\n    },\n\n    createMap: function (name) {\n      let ant = {\n        id: myUB.antsDbState.getId(),\n        text: name,\n        startedAt: myUB.antsDbState.getTime(),\n        type: \"map\",\n\n        rels: {\n          sub: {},\n          allSubs: {}\n        }\n      }\n\n      myUB.mapview.mergeItem(ant.id, ant);\n      DataManager.set(\"repo.items.\" + ant.id, ant);\n\n      return ant.id;\n    },\n    add: function (wallet) {\n\n      let parent = wallet.step.parent;\n      if (!parent) {\n        let root = DataManager.getWallet(\"repo.root\");\n        parent = root.id;\n      }\n\n      let state = DataManager.getWallet(\"repo.state\");\n      state.nextId++;\n\n      let id = myUB.antsDbState.getId();\n\n      let ant = {\n        text: wallet.step.text,\n        id: id,\n        startedAt: wallet.startedAt,\n        placedAt: new Date().getTime()\n      }\n\n\n      myUB.mapview.mergeItem(id, ant);\n      myUB.mapview.mergeRoot(_.set({}, \"rels.sub.\" + parent + \".\" + id, { id: id, parent: parent }))\n      myUB.mapview.mergeRoot(_.set({}, \"rels.allSubs.\" + id, { id: id, parent: parent }))\n      //DataManager.markChangeOn(\"repo\")\n      //DataManager.markChangeOn(\"repo.items\")\n      DataManager.set(\"repo.items.\" + id, ant);\n      DataManager.set(\"repo.root.rels.sub.\" + parent + \".\" + id, { id: id, parent: parent })\n      DataManager.set(\"repo.root.rels.allSubs.\" + id, { id: id, parent: parent })\n\n      if ( wallet.step.selectItem ) {\n        hapi.select( id );\n      }\n    }\n  }\n}\nflow.start();\n\n\nlet myUB = window.myUB = {};\n\nDataManager.setCombined(\"fnsub\", {\n  loader: {\n    get: function () {\n\n      let fns = myUB;\n\n      if (!fns.fnsub || !fns.fnsub.isReady) {\n        this.make(fns, \"fnsub\", \"ub.fnsub\", {\n          old: fns.fnsub\n        })\n\n        this.setupAll(fns);\n      }\n\n      fns.fnsub.makeUb(\"mapview\", \"ub.mapView\", {\n        \"tb.db\": \"db\",\n        \"state\": \"antsDbState\",\n      })\n\n      fns.fnsub.makeUb(\"antsDbState\", \"ub.antsDbState\", {\n        \"tb.db\": \"db\"\n      })\n\n\n      fns.fnsub.makeUb(\"bridgeLoader\", \"ub.loaders.bridge\", {\n        \"tb.db\": \"db\"\n      })\n\n      fns.fnsub.makeUb(\"db\", \"ub.db\", {})\n\n      fns.fnsub.setupAll();\n\n    },\n\n    setupAll: function (fns) {\n      for (var i in fns) {\n        if (fns[i].goSetup)\n          this.setup(fns, fns[i])\n      }\n\n      return true;\n    },\n\n    make: function (fns, name, path, extra) {\n      let obj = Object.create(DataManager.getValue(path));\n      obj.goSetup = true;\n      obj.extra = extra;\n      obj.uid = cu.uids.run();\n\n      if (fns[name]) _.merge(fns[name], obj)\n      else\n        fns[name] = obj;\n    },\n\n    setup: function (fns, obj) {\n      delete obj.goSetup;\n\n      let values = {};\n      for (var i in obj.extra) {\n        let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n        if (!target) {\n          target = {};\n          _.set(fns, obj.extra[i], target)\n        }\n        _.set(values, i, target)\n      }\n\n      if (obj.setup)\n        obj.setup(values);\n\n      obj.isReady = true;\n    },\n\n    autostart: true\n\n  }\n})\n\nmyUB.fnsub = {\n  subs: [],\n  waiting: {},\n  makeUb: function (a, b, c) {\n    this.subs.push([a, b, c])\n  },\n  onready: function (sub) {\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n}\n\n\nDataManager.setCombined(\"ub.antsDbState\", {\n  setup: function (opts) {\n    _.merge(this, opts);\n\n    this.wallet = {\n      state: {\n        prefix: \"ants\",\n        id: \"antsDbState\",\n        nextId: 1\n      }\n    };\n\n    myUB.fnsub.onready(this.tb.db)\n      .then(() => {\n        return this.tb.db.loadItems([\"antsDbState\"])\n      })\n      .catch(() => {\n      })\n      .then((state) => {\n        console.log(\"state\", state)\n        if (!state[0]) {\n          console.log(\"state\", this.wallet.state)\n\n          this.tb.db.saveItems(this.uid, [this.wallet.state])\n        }\n        else {\n          console.log(\"state\", state[0])\n          this.wallet.state = state[0];\n          this.isReady = true;\n        }\n      })\n  },\n\n  getId: function () {\n    this.wallet.state.nextId++;\n    this.tb.db.request_save(this.uid, [this.wallet.state], 100)\n    return \"ant_\" + this.wallet.state.nextId;\n  },\n\n  getTime: function () {\n    return new Date().getTime();\n  }\n})\n\nDataManager.setCombined(\"ub.fnsub\", {\n  setup: function (opts) {\n\n    _.merge(this, opts)\n\n    this.fns = myUB;\n\n    this.waiting = this.waiting || {};\n\n    if (this.old.subs) {\n      for (var i in this.old.subs) {\n        let sub = this.old.subs[i];\n        this.makeUb(sub[0], sub[1], sub[2])\n      }\n      this.setupAll();\n      delete this.subs;\n    }\n  },\n\n\n  setupAll: function () {\n    let fns = this.fns;\n    for (var i in fns) {\n      if (fns[i].goSetup)\n        this.setupUb(fns[i])\n    }\n\n    return true;\n  },\n\n  makeUb: function (name, path, extra) {\n\n    let fns = this.fns;\n    let obj = Object.create(DataManager.getValue(path));\n    obj.goSetup = true;\n    obj.extra = extra;\n    obj.uid = fns[name] && fns[name].id ? fns[name].uid : cu.uids.run();\n\n\n    if (fns[name]) _.merge(fns[name], obj)\n    else\n      fns[name] = obj;\n  },\n\n  setupUb: function (obj) {\n    let fns = this.fns;\n    delete obj.goSetup;\n\n    let values = {};\n    for (var i in obj.extra) {\n      let target = _.isString(obj.extra[i]) ? _.get(fns, obj.extra[i]) : obj.extra[i];\n      if (!target) {\n        target = { uid: cu.uids.run() };\n        _.set(fns, obj.extra[i], target)\n      }\n      _.set(values, i, target)\n    }\n\n    if (obj.setup)\n      obj.setup(values);\n\n    obj.isReady = true;\n\n    if (this.waiting[obj.uid]) {\n      this.waiting[obj.uid].forEach(payload => {\n        payload.resolve()\n      })\n\n      this.waiting[obj.uid] = [];\n    }\n  },\n\n  onready: function (sub) {\n\n    if (sub.isReady) return Promise.resolve();\n\n    let payload = {};\n    let promise = new Promise((resolve) => {\n      payload.resolve = resolve;\n    })\n\n    if (!this.waiting[sub.uid]) this.waiting[sub.uid] = [];\n    this.waiting[sub.uid].push(payload);\n\n    return promise;\n  }\n\n\n});\n\nDataManager.setCombined(\"ub.db\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    this.timers = {};\n  },\n\n  destroy: function () {\n    this.db.destroy();\n  },\n  request_save: function (id, src, delay) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    this.timers[id] = window.setTimeout(() => {\n      this.saveItems(id, src)\n    }, delay || 1000)\n  },\n\n  saveItems: function (id, src) {\n    if (this.timers[id]) window.clearTimeout(this.timers[id]);\n\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.save(items[i], items[i].id));\n\n    return Promise.all(promises).then(() => { console.log(\"saved all\", id) })\n  },\n\n  loadItems: function (src) {\n    let items = (_.isArray(src)) ? src : src.getItemsToSave();\n    let promises = [];\n    for (var i in items)\n      promises.push(this.db.load(items[i]))\n\n    return Promise.all(promises);\n  },\n\n  loadFilter: function (filter, count, sort) {\n    return this.db.loadfilter(filter, count, sort)\n  }\n})\n\nDataManager.setCombined(\"ub.loaders.map\", {\n  load: function (id) {\n    let startIds = [id, \"info_\" + id]\n    this.tb.db.loadItems(startIds)\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0])\n          this.wallet.root = items[0];\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n});\n\n\nDataManager.setCombined(\"ub.loaders.bridge\", {\n  setup: function (opts) {\n    _.merge(this, opts)\n  },\n\n  loadBridge: function () {\n    let items = {\n      top: {\n        notdb: true,\n        text: \"top\",\n        id: \"top\"\n      },\n      recent: {\n        notdb: true,\n        text: \"recent\",\n        id: \"recent\"\n      },\n      all: {\n        notdb: true,\n        text: \"all\",\n        id: \"all\"\n      },\n\n      root: {\n        notdb: true,\n        text: \"\",\n        id: \"root\"\n      }\n    };\n    let rels = {\n      sub: {\n        root: { top: true, recent: true, all: true },\n        top: {},\n        recent: {},\n        all: {}\n      }\n    }\n\n    items.root.rels = rels;\n\n    this.tb.db.loadFilter({ type: \"map\" }, 10, \"dateChanged\")\n      .then(result => {\n        console.log(\"loaded bridges\", result.docs)\n\n        for (var i in result.docs) {\n          let item = result.docs[i];\n          if (!item.brand) item.brand = cu.brand.getBrand(item.id + item.startedAt);\n\n          items[item.id] = item;\n\n          if (item.text.indexOf(\"ma\") != -1) {\n            rels.sub.top[item.id] = true;\n          }\n\n          if (item.startedAt) {\n            rels.sub.recent[item.id] = { date: item.startedAt }\n          }\n\n          rels.sub.all[item.id] = true;\n        }\n      })\n      .then(() => {\n\n        DataManager.setCombined(\"bridgeRepo\", {\n          items: items,\n          root: items.root\n        })\n      })\n  }\n})\n\nDataManager.setCombined(\"ub.mapView\", {\n  setup: function (args) {\n    this.wallet = {\n      items: {},\n      root: {\n        id: \"ant1\",\n        text: \"the first map\",\n        rels: { sub: {} },\n        type: \"map\",\n        notdb : true,\n      },\n      changed: {},\n      state: { nextId: 1 }\n    };\n\n    this.wallet.items.ant1 = this.wallet.root;\n\n    _.merge(this, args)\n\n    return this;\n  },\n  loadMap: function (id) {\n    let startIds = [id, \"info_\" + id]\n\n    let root = DataManager.getWallet(\"repo.root\")\n\n    let start = Promise.resolve();\n\n    if (root.id !== id) {\n      if (!root.notdb)\n        start = start.then(  () => this.saveItems() ) ;\n\n\n      start = start.then ( ()=> {\n      this.wallet.items = {}\n      this.wallet.root = {\n        id: id,\n        notdb: true,\n        rels: { sub: {} },\n      }\n      this.wallet.items[id] = this.wallet.root;\n      DataManager.set(\"repo.items\", this.wallet.items)\n      DataManager.set(\"repo.root\", this.wallet.root)\n    })\n    }\n\n    console.log(\"loading\", id)\n\n    start.then( ()=> this.tb.db.loadItems(startIds) )\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[items[i].id] = items[i];\n        }\n        if (items[0]) {\n          let item = items[0];\n          this.wallet.root = item;\n          if ( true || !item.brand ) item.brand = cu.brand.getBrand(item.id + item.startedAt)\n\n          let customTpl =  {\n            logo : cu.brand.getLogo( item.id + item.startedAt,  10, 5)\n          }\n          let customMolds = cu.tplObjParse.run(customTpl);\n          DataManager.setCombined( \"customTpl\", customTpl);\n\n        }\n      })\n      .then(() => {\n        let root = this.wallet.root;\n        let related = _.get(root, \"rels.allSubs\") || {};\n        let ids = Object.keys(related);\n        return this.tb.db.loadItems(ids)\n      })\n      .then(items => {\n        for (var i in items) {\n          let item = items[i];\n          if (!item) continue;\n          this.wallet.items[item.id] = item;\n        }\n      })\n      .then(() => {\n        console.log(\"done\", this.wallet)\n\n        DataManager.set(\"repo.items\", this.wallet.items)\n        DataManager.set(\"repo.root\", this.wallet.root)\n\n        //notify;\n      })\n  },\n\n  getItemsToSave: function () {\n    let changed = this.wallet.changed;\n    this.wallet.changed = {};\n\n    let items = [];\n    for (var i in changed) {\n      if (this.wallet.items[i].notdb) continue;\n      items.push(this.wallet.items[i])\n    }\n    return items;\n  },\n  saveItems: function () {\n    let items = this.getItemsToSave();\n    return this.tb.db.saveItems(this.uid, items);\n  },\n  generateId: function () {\n    return this.tb.state.getId();\n  },\n  mergeItem: function (id, value) {\n    if (!id) id = this.generateId();\n    if (!this.wallet.items[id]) this.wallet.items[id] = { id: id, createdAt: new Date().getTime() };\n    _.merge(this.wallet.items[id], value);\n    this.triggerChange(id);\n    return id;\n  },\n  mergeRoot: function (value) {\n    _.merge(this.wallet.root, value);\n    this.triggerChange(this.wallet.root.id);\n\n  },\n\n  triggerChange: function (id) {\n    this.wallet.changed[id] = true;\n    this.tb.db.request_save(this.uid, this);\n  },\n\n  setRel: function (rel, a, b, value) {\n    _.set(this.wallet.root, [\"rels\", rel, a, b], value);\n    this.triggerChange(this.wallet.root.id)\n  },\n\n})\nDataManager.setCombined(\"repo\", {\n  items: {},\n  root: {\n    id: \"ant1\",\n    text: \"the first map\",\n    rels: { sub: {} }\n  },\n  state: {\n    nextId: 2\n  }\n})\n\n\nDataManager.setCombined(\"antView.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      title: `<div >item : {value.text}</div>`,\n      item: `<div on_click={actions.select} antid={id}>item : {item.text}</div>`,\n      mapView: {\n        logo: cu.brand.getLogo(faker.company.catchPhrase(), 10, 5),\n\n        frame: `<div class='map'>{title} {content}\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        \n        <style>\n          .map { font-size : 15px; margin : 10px;\n            line-height: 23px;\n            background : {colors.background}\n            }\n          .topic>.text { \n              border-bottom : 1px solid {root.brand.fadedColor} ; \n              display : inline-block;\n              padding-left : 5px;\n              padding-right: 25px;\n            }\n          .topic { \n            margin-bottom : 5px;\n            margin-top : 20px;\n            position : sticky;\n            top : 20px;\n            background : {colors.background}\n          }\n          .content { margin-left : 1px; padding-left : 10px;}\n\n          .mapviewtitle { position:sticky; top : -30px; margin-bottom : 20px; background : {background}; z-index:200; } \n          .logo { display : inline-block;width : 50px; height : 50px; }\n\n          .selected.title { font-size : 19px;}\n\n          .selected.content { \n            border-left :  1px dotted {root.brand.fadedColor};\n          }\n\n          .selected.content::after {\n            content: \">\";\n            display: inline-block;\n            border-bottom: 1px solid {root.brand.fadedColor} ;\n            overflow: hidden;\n            position: relative;\n            left: -10px;\n            padding-left : 10px;\n            top: 8px;\n            width: 40px;\n            margin: 0px;\n          }\n\n          .mapviewtitle { font-variant: petite-caps;}\n\n          polygon.poligon {\n            fill: {root.brand.mainColor} !important;\n          }\n\n          .handle { \n            display: inline-block;\n            font-variant: petite-caps;\n            font-size: 0.7em;\n            color: #999;          }\n        </style>\n      </div>`,\n\n        title: `\n        <div class='mapviewtitle '> <svg class='logo'>{logo}</svg> {item.text}</div>`,\n      },\n\n\n      map: {\n        topic: \"<div on_click={actions.select} antid={id} class='title topic {isSelected}'><span class='text'>{handle} {item.text} </span></div>\",\n        item: \"<div on_click={actions.select} antid={id} class='title item {isSelected}'>{handle} {item.text}</div>\",\n        entry: \"<div on_click={actions.select} antid={id} class='title entry {isSelected}'>{handle} {item.text}</div>\",\n        other: `<div on_click={actions.select} antid={id} class='{isSelected}'>{item.text}</div>`,\n        card: `<div class='{isSelected}'>{title} <div id='content' class='content {isSelected}'>{content}</div></div>`,\n\n      },\n\n      handle : \"<span class='handle'>{handle}.</span>\",\n\n      bridgeTitle: `<div>{value.text}</div>`,\n      frame: \"<div>{maptitle}{items}</div>\",\n\n      mapTitle: \"\"\n    }\n  }\n})\n\n\n\nDataManager.setCombined(\"antView.map\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          uistate: \"repo.uistate\",\n          items: \"repo.items\",\n          root: \"repo.root\",\n          repo: \"repo\",\n          molds: \"antView.molds\",\n          customTpl : \"customTpl\"\n        }, v);\n\n        v.rows = Object.values(v.items);\n\n        let rows = [];\n\n        v.data = {}\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"select\", \"antid\"] } });\n\n        v.selected = v.uistate.selected;\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = [\"map.topic\", \"map.item\", \"map.entry\"]\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n\n        v.colors = {\n          background : \"#000\"\n        }\n\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      setV: function (value, v, memo) {\n        memo = memo || {};\n        for (var i in value) {\n          if (memo[i] === undefined)\n            memo[i] = v[i];\n          v[i] = value[i]\n        }\n\n        return memo;\n      },\n      cleanV: function (v, memo) {\n        for (var i in memo)\n          v[i] = memo[i];\n      },\n\n      getBody: function (v, id, sub) {\n        let list = this.getBodyList(v, id, sub);\n\n        let logo = v.customTpl.logo ? cu.reactAssembler.run(v.customTpl.logo, v) : \"\";\n        let memo = this.setV({ logo: logo, item: v.repo.root }, v, memo)\n\n        let title = cu.reactAssembler.run(v.molds.mapView.title, v);\n        memo = this.setV({ content: list, title: title }, v, memo)\n        let node = cu.reactAssembler.run(v.molds.mapView.frame, v)\n        this.cleanV(v, memo);\n        return node;\n      },\n      getBodyList: function (v, id, sub) {\n        let related = sub[id];\n\n        if (!related) return null;\n        if (v.level > 5) return null;\n        let level = v.level != undefined ? v.level + 1 : 0\n\n        let list = [];\n        let memo = this.setV({\n          id: null,\n          item: null,\n          level: 0,\n          isSelected: null,\n          content: null,\n          title: null,\n          handle : null,\n        }, v, memo);\n\n\n        let count = 1;\n        for (var i in related) {\n\n          _.merge(v, {\n            id: i,\n            item: v.items[i],\n            level: level,\n            isSelected: v.selected == i ? \"selected\" : \"\",\n            count : count \n          })\n\n          let item = this.getItem(v, sub);\n          list.push(item);\n\n          count++;\n        }\n\n        this.cleanV(v, memo);\n        return list;\n      },\n\n      getHandle : function ( v, level, count ) {\n        let handle;\n        if ( level == 0 ) {\n          handle =  String.fromCharCode(64 + count) \n        }\n\n        else if ( level == 1 )  {\n          handle =  count + \"\" ;\n        }\n\n          if ( handle == undefined ) return \"\";\n\n          let node =  cu.reactAssembler.run( v.molds.handle, { handle : handle });\n\n          console.log( \"handle\", node);\n          return node;\n        },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n\n        if (!moldName) moldName = v.otherTpl;\n        let titleMold = _.get(v.molds, moldName);\n\n        console.log( v.handle );\n        v.handle = this.getHandle( v, v.level, v.count );\n\n        v.title = cu.reactAssembler.run(titleMold, v);\n        v.content = this.getBodyList(v, v.id, sub);\n\n        if (v.isSelected && !v.content) v.content = [];\n\n\n        let node;\n        if (v.content) {\n          let cardMold = _.get(v.molds, v.cardMold);\n\n          node = cu.reactAssembler.run(cardMold, v)\n        }\n        else node = v.title;\n\n        return node;\n      },\n\n\n\n    }\n  }\n})\n\n\n\n\nDataManager.setCombined(\"antViewBridge.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      root: {\n        bridge: `<div class='bridge'>{content}</div>`,\n        card: `<div class='card'><div class='title'><span>{item.text}</span></div> <div class='content'>{content}</div></div>`,\n        item: `<div class='title' antid='{id}' on_click='{actions.select}' style='--color:{item.brand.fadedColor}'>{item.text}</div>`,\n        style: `\n          <style>\n            .title { \n              border-left : 2px solid var(--color);\n              margin-bottom : 5px;\n              padding-left : 4px;\n            }\n\n            .card {\n              margin : 20px 10px;\n            \n              border : 1px solid {brand.borderColor};\n\n              padding : 10px;\n            }\n            .bridge { font-size : 18px; margin : 10px;\n              line-height: 25px;\n              }\n\n            .card>.content { \n            }\n            .card>.title{\n              position: sticky;\n              top: 0px;\n              background : {brand.background};\n              padding-bottom : 10px;\n\n            }\n\n            .card>.title>span{ \n              border-bottom : 1px solid {brand.borderColor};\n              width : fit-content;\n              padding-left: 5px;\n              padding-right : 24px;\n              padding-bottom : 5px;\n              display : inline-block;\n              font-variant: petite-caps;\n            }\n          </style>\n        `\n      },\n    }\n  }\n})\n\nDataManager.setCombined(\"antView.bridge\", {\n  nodes: {\n    loader: {\n      get: function (tb, v) {\n        tb.fetch({\n          items: \"bridgeRepo.items\",\n          root: \"bridgeRepo.root\",\n          repo: \"bridgeRepo\",\n          molds: \"antViewBridge.molds\"\n        }, v);\n\n\n        this.addVFn(v);\n\n        v.tplSpecs = {\n          byLevel: [\"root.bridge\", \"root.card\", \"root.item\"],\n\n        }\n\n        v.brand = {\n          borderColor: \"#333\",\n          background : \"#000\"\n        }\n\n        v.actions = cu.store.get(tb, hapi, { runWith: { select: [\"selectMap\", \"antid\"] } });\n\n\n        v.color = \"#007abc\"\n        v.otherTpl = \"map.other\";\n        v.moldsMap = []\n        v.defaultTpl = {\n          card: \"root.card\",\n          title: \"root.title\"\n        }\n        v.cardMold = \"map.card\";\n        v.background = \"#000\";\n        v.level = 0;\n        v.subs = v.root.rels.sub;\n\n        v.id = \"root\";\n        v.item = v.root;\n\n        let node = this.makeItem(v);\n\n        let style = cu.reactAssembler.run(v.molds.root.style, v)\n\n        return [node, style];\n        v.body = this.getBody(v, v.root.id, v.root.rels.sub);\n        return v.body;\n      },\n\n      makeItem: function (v) {\n        let moldName = v.mold || v.tplSpecs.byLevel[v.level];\n        if (!moldName) console.error(\"no mold\", v);\n        let mold = _.get(v.molds, moldName);\n\n        let params = mold.mold.parameters;\n\n\n        if (params.content) {\n          let collection = v.subs[v.id];\n          let level = v.level + 1;\n          v.content = this.makeList(v, collection, (value, i) => {\n            return {\n              id: i,\n              item: v.items[i],\n              level: level\n            }\n          })\n        }\n\n\n        let node = cu.reactAssembler.run(mold, v)\n\n        return node;\n      },\n\n\n      makeList: function (v, collection, prepare) {\n        let list = [];\n        v.stack();\n\n        for (var i in collection) {\n          v.set(prepare(collection[i], i));\n          let node = this.makeItem(v);\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n      getBody: function (v, id, sub) {\n\n        v.stack();\n\n\n        v.set({\n          content: this.getList(v, id, sub),\n        })\n\n\n        debugger;\n        let moldName = v.moldsMap[v.level] || v.defaultTpl.card || \"other\";\n        let mold = _.get(v.molds, moldName)\n        let node = cu.reactAssembler.run(mold, v)\n\n\n        v.clean();\n        return node;\n      },\n\n      getItem: function (v, sub) {\n        let item = v.item;\n\n\n        let moldName = v.mold;\n        if (!moldName && v.moldsMap) {\n          moldName = v.moldsMap[v.level]\n        }\n        if (!moldName) moldName = v.defaultTpl.title;\n        let titleMold = _.get(v.molds, moldName);\n\n        v.set({\n          title: cu.reactAssembler.run(titleMold, v),\n          content: this.getList(v, v.id, sub)\n        })\n\n        let node;\n        if (v.content) {\n          let moldName = v.moldsMap[v.level] || v.defaultTpl.card || \"other\";\n          let mold = _.get(v.molds, moldName)\n          node = cu.reactAssembler.run(mold, v)\n        }\n        else\n          node = this.getList(v, v.id, sub)\n\n        return node;\n      },\n\n\n      getList: function (v, id, sub) {\n        let related = sub[id];\n        let list = [];\n        v.stack();\n\n        for (var i in related) {\n\n          let item = v.items[i];\n          v.set({\n            id: i,\n            item: v.items[i],\n            level: v.level + 1\n          });\n\n          let node = this.getItem(v, sub);\n\n          console.log(\"related\", i, node, related)\n          list.push(node);\n        }\n\n        v.clean();\n\n        return list;\n      },\n\n\n      addVFn: function (v) {\n        v.set = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n\n        }\n\n        v.get = function (value) {\n          let v = this;\n          let memo = v.memo;\n          for (var i in value) {\n            if (memo[i] === undefined)\n              memo[i] = v[i];\n            v[i] = value[i]\n          }\n        }\n\n        v.clean = function () {\n          let v = this;\n          let memo = v.memo;\n\n          for (var i in memo)\n            v[i] = memo[i];\n\n          v.memo = v.stacks.pop();\n        }\n\n        v.stack = function () {\n\n          let v = this;\n\n          if (!v.stacks) v.stacks = [];\n\n          v.stacks.push(v.memo);\n\n          v.memo = {};\n        }\n\n\n      },\n\n\n    }\n  }\n})\n\nDataManager.setCombined(\"dbSavings\", {\n  items: {\n    /*\n    repoitems: { path: \"repo.items\", onload: [\"repo\", \"evaluateflow\"] },\n    bubblestate: \"repo.state\",\n    antsitems: \"repo.ants\",\n    */\n  }\n})\n\nDataManager.setCombined(\"tb.persisitence\", {\n  setup: function () {\n    this.db = cu.db.run(\"thisdb\");\n    window.onbeforeunload = () => { return this.saveAll() };\n    this.loadAll();\n\n  },\n\n  request_save: function () {\n    if (this.timer) window.clearTimeout(this.timer);\n\n    this.timer = window.setTimeout(() => {\n      this.saveAll()\n    }, 60000)\n  },\n\n  saveAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items\n    let savings = []\n    for (var i in tosave) {\n      savings.push(this.saveitem(i, tosave[i]))\n    }\n\n  },\n  saveitem: function (id, target) {\n    let path = target.path || target;\n    let repo = DataManager.getWallet(path);\n    return this.db.save({ repo }, id)\n  },\n\n  loadAll: function () {\n    let tosave = DataManager.getValue(\"dbSavings\").items;\n\n    for (var i in tosave)\n      this.loaditem(i, tosave[i]);\n  },\n\n  loaditem: function (id, target) {\n    let path = target.path || target;\n    let onload = target.onload || null;\n    this.db.load(id).then((items) => {\n      if (items && items.repo) DataManager.set(path, items.repo)\n      if (onload) DataManager.runOn(onload[0], onload[1])\n    })\n  },\n\n  starter: {\n    loader: {\n      autostart: true,\n      get: (tb) => {\n        if (tb.cache.done) return 1;\n        tb.cache.done = true;\n        let v = tb.fetch({ tb: \"tb.persisitence\" });\n        v.tb.setup();\n\n        return 1;\n      }\n    }\n  }\n\n})\n\n\n\n\nDataManager.setCombined(\"ui.molds\", {\n  loader: {\n    get: function (tb) {\n      let molds = cu.tplObjParse.run(this.tpls);\n      return molds;\n    },\n    tpls: {\n      main: `\n          <div id='frame'>\n            <div id='easel'>{view}</div>\n            <div id='bar'>\n              <myinput id='order' auto_complete=\"off\" value={order.value} on_key_press={order.place} on_change={order.change}></myinput>\n              <div id='bumb' on_click='{bumb.action}'>{picture}</div>\n            </div>\n          </div>\n          <style>\n            * { box-sizing : border-box}\n            body , window, html {\n              color : {textColor};\n              height : 100%; width : 100%; background : {background} }\n            #frame { height : 100%; width : 100%;}\n            #frame { display : flex; flex-direction : column; }\n            #easel { flex : 1; overflow : auto; }\n            #bar   { border-top: 1px solid #999; width : 100%; flex-basis : {dim.barHeight}px ; display : flex;flex-direction:row; }\n\n            #order {  padding-left : 10px; outline: none; flex : 1; border : 0px none transparent; width: 100%;}\n            #bumb  { flex-basis : {dim.barHeight}px; background : {color} } \n\n          </style>\n          \n  `,\n      bubbleitem: `<div on_click={selectitem} targetid={targetid}>{label}</div>`,\n\n    }\n  }\n})\n\nDataManager.setCombined(\"workingant\", {\n  data: {\n    input: { text: \"\" },\n    currentView: 'main',\n\n    selected: \"\"\n  }\n})\n\n\nDataManager.setCombined(\"antsFrame.ui\", {\n  loader: {\n    paths: { molds: \"ui.molds\", orderText: \"workingant.data\", node: \"antsFrame.prepare\" },\n    get: function (tb, v) {\n\n      tb.fetch(this.paths, v);\n\n      _.set(v.node, v.molds.main.mold.pins.order.concat([\"props\", \"value\"]), v.orderText.input)\n\n      return v.node;\n    }\n  }\n\n})\n\nDataManager.setCombined(\"workingant.viewState\", {\n  path: \"antView.map.nodes\"\n})\n\nDataManager.setCombined(\"antsFrame.prepare\", {\n  loader: {\n    paths: { molds: \"ui.molds\", data: \"bubbles.data\", repo: \"repo\", viewState: \"workingant.viewState\" },\n    get: function (tb, v) {\n      tb.fetch(this.paths, v);\n\n      tb.fetch({ view: v.viewState.path }, v)\n\n\n      let store = cu.store.get(tb, hapi,\n        { change: { changeOrder: \"workingant.data.input\" }, run: { bumbAction: \"showhud\", placeOrder: \"placeorder\" } });\n\n      v.dim = {\n        window: {\n          height: \"400\",\n          width: \"200\",\n        },\n        barHeight: \"50\"\n      }\n\n      v.data = {\n        label: \"main\",\n        bubbleList: \"TestList\",\n        order: {\n          change: store.changeOrder,\n          place: store.placeOrder\n        },\n        bumb: {\n          action: store.bumbAction\n        },\n        dim: v.dim,\n\n        view: v.view,\n\n        color: \"#999\",\n        background: \"#000\",\n        textColor: \"#eee\"\n      }\n\n\n      v.node = cu.reactAssembler.run(v.molds.main, v.data)\n      return v.node;\n    },\n    autostart: true\n  }\n})\n\n\n\nDataManager.setCombined(\"test\", {\n  loader: {\n    get: function () {\n      //myUB.mapview.loadMap(\"ant1\")\n      myUB.bridgeLoader.loadBridge();\n    },\n    autostart: true\n  }\n})\n\n//DataManager = window._DataManager.setup();\nDataManager.historyManager.recording = false;\nDataManager.runToStart();\n//------------------\n\n\n\nclass Frame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  path = \"antsFrame.ui\"\n\n  componentDidMount() {\n    DataManager.setTrigger(this.path, \"asd\", {\n      run: () => {\n        this.setState({ \"version\": new Date().getTime() })\n      }\n    })\n  }\n\n  render() {\n    let components = DataManager.getValue(this.path);\n    let node = cu.reactUtils.makeComponent(components || []) || \"empty\";\n    return node\n  }\n}\n\nclass FlatAnt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: { scode: \"salut\" }\n    }\n  }\n\n  _style() {\n    return `\n      html, window, body{ width : 100%; height : 100%; overflow : auto; padding: 0px; margin:0px;}\n      #root, .main { width : 100%; height : 100%;}\n      \n    `\n  }\n\n  render() {\n    let style = this._style();\n    let components = [\n      <Frame key=\"1\"></Frame>\n    ]\n    return [\n      <style>{style}</style>,\n      components]\n      ;\n  }\n}\n\nexport default FlatAnt;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeMirrorEditor from \"./components/CodeMirrorEditor\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport go from \"gojs\";\nimport \"./libs/dataManager.js\";\n\nimport FlatAnt from \"./FlatAnt1\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = <FlatAnt />\n    return content;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","var historyManager = {\n  setup: function setup(info) {\n    var item = Object.create(this);\n    item.wallet = {\n      currentStack: {\n        info: [{\n          type: \"startedWith\",\n          info: info\n        }]\n      },\n      stacks: []\n    };\n    item.recording = true;\n    item.wallet.stacks.push(item.wallet.currentStack);\n    return item;\n  },\n  startStack: function startStack(info) {\n    if (!this.recording) return;\n    var stack = {\n      info: [],\n      prevStack: this.wallet.currentStack,\n      index: this.wallet.stacks.length,\n      start: info\n    };\n    this.addInfo({\n      type: \"subStack\",\n      stack: stack\n    }, true);\n    this.wallet.stacks.push(stack);\n    this.wallet.currentStack = stack;\n    if (info) this.addInfo(info);\n  },\n  addInfo: function addInfo(info, skipClone) {\n    if (!this.recording) return;\n    if (!skipClone) info = _.cloneDeep(info);\n    this.wallet.currentStack.info.push(info);\n  },\n  endStack: function endStack(info) {\n    if (!this.recording) return;\n    if (info) this.addInfo(info);\n    this.wallet.currentStack = this.wallet.currentStack.prevStack;\n  }\n};\nvar _DataManager = {\n  setup: function setup() {\n    var item = Object.create(this);\n    item.state = {\n      ctx: {},\n      gettingValue: {},\n      wallet: {},\n      meta: {},\n      cache: {},\n      version: {},\n      loadersCache: {},\n      triggers: {},\n      currentVersion: 1,\n      dependencies: {},\n      nextUID: 1,\n      agenda: {\n        names: {},\n        tasks: []\n      },\n      pins: {},\n      toStart: [],\n      flags: {}\n    };\n    item.historyManager = historyManager.setup(this);\n    return item;\n  },\n  state: {\n    gettingValue: {},\n    wallet: {},\n    meta: {},\n    cache: {},\n    version: {},\n    loadersCache: {},\n    triggers: {},\n    currentVersion: 1,\n    dependencies: {},\n    nextUID: 1,\n    agenda: {\n      names: {},\n      tasks: []\n    },\n    pins: {},\n    toStart: [],\n    flags: {}\n  },\n  setCtx: function setCtx(basePath, ctxPath, value, names) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    if (!ctx) _.set(this.state.ctx, [basePath, \"ctx\"].join(\".\"), ctx = {\n      names: []\n    });\n\n    _.set(ctx, ctxPath, value);\n\n    ctx.names.push({\n      names: names,\n      path: ctxPath\n    });\n  },\n  getCtx: function getCtx(basePath, name) {\n    var ctx = _.get(this.state.ctx, [basePath, \"ctx\"].join(\".\"));\n\n    ;\n    if (!ctx) return null;\n    var ctxPath;\n\n    for (var i in ctx.names) {\n      if (ctx.names[i].names.indexOf(name) != -1) {\n        ctxPath = ctx.names[i].path;\n        break;\n      }\n    }\n\n    if (!ctxPath) return null;\n\n    var target = _.get(ctx, ctxPath);\n\n    return target;\n  },\n  runOn: function runOn(basePath, name, args) {\n    var target = this.getCtx(basePath, name);\n    if (!target) return null;\n    return target[name](args);\n  },\n  runFn: function runFn(path, args) {\n    var route = path.split(\".\");\n    var fnName = route.pop();\n    var targetPath = route.join(\".\");\n    var target = this.getValue(targetPath);\n    if (!target[fnName]) return undefined;\n\n    if (_.isFunction(target[fnName])) {\n      return target[fnName](args, path, this);\n    } else if (_.isFunction(target[fnName].run)) {\n      return target[fnName].run(args, path, this);\n    }\n  },\n  getInfluenced: function getInfluenced(path) {\n    var influenced = [];\n\n    var dep = _.get(this.state.dependencies, path + \".DEP\");\n\n    if (!dep) return [];\n\n    for (var i in dep) {\n      influenced.push(i);\n      influenced = influenced.concat(this.getInfluenced(i));\n    }\n\n    return influenced;\n  },\n  getValue: function getValue(path, skipPartialValueCheck) {\n    var route = path.split(\".\");\n    var value = this.checkCache(path);\n    if (value) return value;\n    if (!skipPartialValueCheck) for (var i = 0; i < route.length; i++) {\n      var partialPath = route.slice(0, i).join(\".\");\n\n      if (this.state.gettingValue[partialPath]) {\n        var partialResult = this.state.gettingValue[partialPath].partialResult;\n        var partialSlot = route.slice(i);\n\n        var partialValue = _.get(partialResult, partialSlot);\n\n        if (partialValue !== undefined) return partialValue;\n      }\n    }\n    this.state.gettingValue[path] = true;\n    var list = this.makeList(path);\n    value = this.listToValue(list, path);\n    delete this.state.gettingValue[path];\n\n    if (value !== undefined) {\n      // let shouldUpdate = (  list.length == 1 && list[0].src == \"wallet\" )\n      this.setCache(path, value); //, shouldUpdate);\n      //this.diffCache( oldCache, path );\n    }\n\n    return value;\n  },\n  setCache: function setCache(path, value, shouldUpdate) {\n    this.state.cache[path] = {\n      value: value,\n      shouldUpdate: shouldUpdate || false,\n      version: this.state.currentVersion\n    };\n  },\n  checkCache: function checkCache(path, ignoreUpdates) {\n    if (!this.state.cache[path]) return null;\n    if (ignoreUpdates) return this.state.cache[path].value;\n    if (this.state.cache[path].shouldUpdate) return null;\n    return this.state.cache[path].value;\n  },\n  prepareCache: function prepareCache(path) {\n    var cache = this.state.loadersCache[path];\n\n    if (!cache) {\n      cache = this.state.loadersCache[path] = {\n        old: {},\n        contains: {},\n        dependsOn: {}\n      };\n    }\n\n    var old = {\n      contains: cache.contains || {},\n      dependsOn: cache.dependsOn || {}\n    };\n    cache.old = old;\n    delete cache.contains;\n    delete cache.dependsOn;\n    return old;\n  },\n  diffCache: function diffCache(oldCache, path) {\n    if (!this.state.loadersCache[path]) this.state.loadersCache[path] = {};\n    var cache = this.state.loadersCache[path] || {};\n    var dependencies = this.state.dependencies;\n\n    var addDependency = function addDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) _.set(dependencies, a + \".DEP\", dep = {});\n      dep[b] = true; //_.set( dependencies, a + \".DEP\",dep );\n    };\n\n    var remDependency = function remDependency(a, b) {\n      var dep = _.get(dependencies, a + \".DEP\");\n\n      if (!dep) return;\n      delete dep[b];\n    };\n\n    var check = function check(newC, oldC) {\n      for (var i in newC) {\n        if (!oldC || !oldC[i]) addDependency(i, path);\n      }\n\n      for (var i in oldC) {\n        if (!newC || !newC[i]) remDependency(i, path);\n      }\n    };\n\n    check(cache.contains, oldCache.contains);\n    check(cache.dependsOn, oldCache.dependsOn);\n  },\n  updateVersionsMap: function updateVersionsMap(path) {\n    var cache = this.state.loadersCache[path] || {};\n    var depOn = cache.dependsOn;\n\n    for (var i in depOn) {\n      var currentVersion = this.getVersion(i);\n      depOn[i].version = currentVersion;\n    }\n  },\n  makeList: function makeList(path) {\n    var list = [];\n    var route = path.substr ? path.split(\".\") : path;\n\n    var walletValue = _.get(this.state.wallet, path);\n\n    if (walletValue !== undefined) {\n      if (!_.isObjectLike(walletValue)) {\n        list.push({\n          src: \"wallet\",\n          value: walletValue,\n          path: [],\n          srcPath: path,\n          version: 1\n        });\n        return list;\n      }\n\n      walletValue = _.cloneDeep(walletValue);\n      list.push({\n        src: \"wallet\",\n        value: walletValue,\n        path: [],\n        srcPath: path,\n        version: 1\n      });\n    }\n\n    var meta = this.state.meta;\n\n    for (var i = 0; i < route.length; i++) {\n      if (!meta) break;\n\n      if (meta.loader) {\n        var item = {\n          src: \"root\",\n          loader: meta.loader,\n          path: [],\n          srcPath: route.slice(0, i),\n          select: route.slice(i)\n        };\n        list.push(item);\n      }\n\n      meta = meta[route[i]];\n    }\n\n    var rootPath = route;\n\n    var iterate = function iterate(obj, route, list) {\n      if (!obj) return;\n\n      if (obj.loader) {\n        var _item = {\n          src: \"sub\",\n          loader: obj.loader,\n          path: route,\n          srcPath: rootPath.concat(route)\n        };\n        list.push(_item);\n      }\n\n      for (var _i in obj) {\n        if (_i == \"loader\") continue;\n        iterate(obj[_i], route.concat(_i), list);\n      }\n    };\n\n    iterate(meta, [], list);\n    return list;\n  },\n  silentSet: function silentSet(path, value, skipPathAffected) {\n    this.historyManager.addInfo({\n      type: \"silentSet\",\n      path: path,\n      value: value\n    });\n\n    _.set(this.state.wallet, path, value);\n\n    if (this.state.cache[path]) this.state.cache[path].shouldUpdate = true;\n    if (!skipPathAffected) this.getAffectedPaths(path);\n  },\n  listToValue: function listToValue(list, path) {\n    if (list.length == 1 && list[0].value) return list[0].value;\n    var result = {};\n    this.state.gettingValue[path] = {\n      partialResult: result\n    };\n    var postponedSteps = list;\n    var hasSteps = true;\n    var snoozeCount = 0;\n\n    while (hasSteps) {\n      snoozeCount++;\n\n      if (snoozeCount > 5) {\n        //console.log( \"postponed more than 5 times\", path, result, _.cloneDeep( this.state.gettingValue ) );\n        this.state.cache[path].shouldUpdate = true;\n        return result;\n      }\n\n      list = postponedSteps;\n      postponedSteps = [];\n      hasSteps = false;\n\n      for (var i = 0; i < list.length; i++) {\n        var step = list[i];\n        var value = void 0;\n\n        if (step.value) {\n          value = step.value;\n        } else if (step.loader) {\n          try {\n            value = this.getFromLoader(step, result, path);\n          } catch (e) {\n            if (e == \"postpone\") {\n              this.state.cache[path].shouldUpdate = true;\n              postponedSteps.push(step);\n              hasSteps = true;\n            } else {\n              console.error(e);\n            }\n\n            continue;\n          }\n        }\n\n        if (step.select) value = _.get(value, step.select);\n\n        if (step.path.length) {\n          _.set(result, step.path, value);\n        } else {\n          if (Object.values(result).length == 0) {\n            result = value;\n          } else //console.log( \"merging\" , _.cloneDeep( result ), value, result);\n            _.merge(result, value);\n        }\n      }\n    }\n\n    return result;\n  },\n  loadersCache: {},\n  addLog: function addLog(lhs, rel, rhs, value) {\n    if (!this.state.loadersCache[lhs]) this.state.loadersCache[lhs] = {\n      version: this.state.currentVersion,\n      cachedValue: {}\n    };\n    var xcache = this.state.loadersCache[lhs];\n    if (!xcache[rel]) xcache[rel] = {};\n    xcache[rel][rhs] = value || true;\n  },\n  getFromLoader: function getFromLoader(step, result, requester, force) {\n    var _this = this;\n\n    var srcPath = step.srcPath.join(\".\");\n    var value;\n\n    try {\n      var logger = {\n        add: function add(path, name) {\n          _this.addLog(srcPath, \"dependsOn\", path, {\n            version: true,\n            name: name,\n            path: path,\n            srcPath: srcPath\n          });\n        }\n      };\n      var loader = step.loader;\n\n      if (loader.prism) {\n        if (loader.loadedPrism) loader = loader.loadedPrism;else {\n          var loadedPrism = this.getFromDispatch(loader.prism);\n          loader.loadedPrism = loadedPrism;\n          loader = loadedPrism;\n        }\n      }\n\n      if (loader.load) {\n        if (this.state.cache[srcPath]) {\n          return {};\n        }\n\n        value = loader.load(result, this, logger, step.loader, step);\n\n        _.set(this.state.wallet, srcPath, value);\n\n        this.state.cache[srcPath] = {\n          loader: true,\n          value: {}\n        };\n        return value;\n      }\n\n      if (!force) {\n        var _value = this.checkCache(srcPath);\n\n        if (_value) return _value;\n      }\n\n      if (step.src == \"sub\") this.addLog(requester, \"contains\", srcPath);\n      var oldCache = this.prepareCache(srcPath);\n\n      if (loader.get) {\n        try {\n          var tb = TB.init(result, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n          if (DataManager.newAPI) value = loader.get(tb, tb.v);else value = loader.get(tb, this, logger, step.loader, step, this.state.loadersCache[srcPath]);\n        } catch (e) {\n          if (e && e.type == \"return\") {\n            value = e.value;\n          } else {\n            throw e;\n          }\n        }\n      }\n\n      if (value === \"forceCache\") {\n        return this.checkCache(srcPath, true);\n      } else if (value !== undefined) {\n        this.setCache(srcPath, value);\n        this.diffCache(oldCache, srcPath);\n        if (loader.updateVersionsMap) this.updateVersionsMap(srcPath);\n\n        _.set(this.state.version, srcPath + \".version\", this.state.currentVersion);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    if (loader && loader.skipCache) this.state.cache[srcPath].shouldUpdate = true;\n    return value;\n  },\n  runUtils: function runUtils(path, args) {\n    var fn = this.getValue(path);\n    if (fn && fn.run) return fn.run.apply(fn, args);\n  },\n  getWallet: function getWallet(path) {\n    return _.get(this.state.wallet, path);\n  },\n  mergeValue: function mergeValue(path, value) {\n    var _this2 = this;\n\n    this.historyManager.addInfo({\n      type: \"mergeValue\",\n      path: path,\n      value: value\n    });\n    var oldValue = path ? _.get(this.state.wallet, path) : this.state.wallet; //this.getValue( path );\n\n    if (!oldValue) {\n      oldValue = {};\n\n      _.set(this.state.wallet, path, oldValue);\n    }\n\n    var changedPaths = [];\n    this.state.currentVersion++;\n    var route = _.isString(path) ? path.split(\".\") : path || [];\n    if (route.length == 1 && route[0] == \"\") route = [];\n    var fn = {\n      addPath: function addPath(relPath) {\n        var fullPath = route.concat(relPath);\n        changedPaths.push(fullPath);\n\n        _.set(_this2.state.version, fullPath.join(\".\") + \".version\", _this2.state.currentVersion);\n      }\n    };\n    this.pauseAll();\n\n    if (_.isObjectLike(value)) {\n      this.setObObj(oldValue, value, fn, []);\n    } else {\n      console.log(\"it's not object\");\n    }\n\n    for (var i in changedPaths) {\n      this.updateVersionForAll(changedPaths[i]);\n      this.getAffectedPaths(changedPaths[i].join(\".\"));\n    }\n\n    this.req_triggers();\n  },\n  pauseAll: function pauseAll() {\n    if (this.state.runningReqTriggers_timer) {\n      this.clearInterval(this.state.runningReqTriggers_timer);\n      delete this.state.runningReqTriggers_timer;\n    }\n\n    if (this.state.runningAgendaTriggers_timer) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n    }\n  },\n  setInterval: function setInterval(callback, delay, name) {\n    var stop = false;\n\n    var fn = function fn() {\n      if (stop) return; //console.log( \"interval\", name );\n\n      callback();\n      window.requestAnimationFrame(fn);\n    };\n\n    window.requestAnimationFrame(fn);\n    return function () {\n      stop = true;\n    };\n  },\n  clearInterval: function clearInterval(stopFn) {\n    if (!stopFn) return;\n    return stopFn();\n  },\n  req_triggers: function req_triggers() {\n    var _this3 = this;\n\n    if (this.state.runningReqTriggers_timer) return; //if ( Object.keys( this.affected ).length == 0 ) return;\n\n    this.state.runningReqTriggers_timer = this.setInterval(function () {\n      //console.log( \"affected::\", _.cloneDeep(this.affected ) );\n      _this3.asyncTriggers();\n    }, 0, \"triggers\");\n  },\n  asyncTriggers: function asyncTriggers() {\n    var keys = Object.keys(this.affected);\n\n    if (keys.length == 0) {\n      this.clearInterval(this.state.runningReqTriggers_timer); //console.log( \"affected_checked\", this.affected_checked );\n\n      this.affected_checked = {};\n      delete this.state.runningReqTriggers_timer;\n      return;\n    } //console.log( \"checking\", keys[0 ] );\n\n\n    this.affected_checked[keys[0]] = this.affected[keys[0]];\n    delete this.affected[keys[0]];\n    this.lazy_checkTriggers(keys[0]);\n  },\n  req_Agenda: function req_Agenda() {\n    var _this4 = this;\n\n    if (this.state.runningAgendaTriggers_timer) return;\n    if (this.state.agenda.tasks.length == 0) return;\n    this.state.runningAgendaTriggers_timer = this.setInterval(function () {\n      _this4.asyncTriggersAgenda();\n    }, 0, \"agenda\");\n  },\n  asyncTriggersAgenda: function asyncTriggersAgenda() {\n    if (this.state.agenda.tasks.length == 0) {\n      this.clearInterval(this.state.runningAgendaTriggers_timer);\n      delete this.state.runningAgendaTriggers_timer;\n      return;\n    }\n\n    var trigger = this.state.agenda.tasks.shift();\n    if (!trigger) return console.error(trigger); //console.log( \"checking\", keys[0 ] );\n\n    delete this.state.agenda.names[trigger.id];\n    this.runTrigger(trigger, trigger.target, trigger.listener); //this.lazy_checkTriggers( keys[0] );\n  },\n  lazy_checkTriggers: function lazy_checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      if (this.state.agenda.names[path]) return;\n      var triggers = this.state.triggers[path];\n\n      for (var i in triggers) {\n        var trigger = triggers[i];\n        var id = trigger.id || path + \"___\" + i;\n        if (this.state.agenda.names[i]) continue;\n        if (!trigger.path) trigger.target = path;\n        if (!trigger.token) trigger.listener = i;\n        if (!trigger.id) trigger.id = id;\n        this.state.agenda.names[id] = true;\n        this.state.agenda.tasks.push(trigger);\n      }\n\n      this.sortAgenda();\n      this.req_Agenda();\n    }\n  },\n  sortAgenda: function sortAgenda() {\n    this.state.agenda.tasks.sort(function (taskA, taskB) {\n      if (!taskB.salience) return 1;\n      if (!taskA.salience) return -1;\n      return taskA.salience - taskB.salience;\n    });\n  },\n  setObObj: function setObObj(target, source, fn, path) {\n    for (var i in source) {\n      if (source[i] === undefined) continue;else if (_.isObjectLike(source[i])) {\n        if (!target[i]) target[i] = {};\n        this.setObObj(target[i], source[i], fn, path.concat(i));\n      } else {\n        if (target[i] != source[i]) {\n          target[i] = source[i];\n          fn.addPath(path.concat(i));\n        }\n      }\n    }\n  },\n  appendToArray: function appendToArray(path, value, setVersion) {\n    var target = _.get(this.state.wallet, path);\n\n    if (!target) {\n      value = [value];\n      return this.set(path, value, false, setVersion);\n    }\n\n    var index = target.length;\n    var route = _.isArray(path) ? path : path.split(\".\");\n    route.push(index);\n    return this.set(route, value, false, setVersion);\n  },\n  setByLoader: function setByLoader(path, value) {\n    if (_.isArray(path)) path = path.join(\".\");\n\n    var prism = _.get(this.state.meta, path);\n\n    if (!prism || !prism.loader || !prism.loader.set) return false;\n    var tb = TB.init({}, this, {}, prism.loader, {}, this.state.loadersCache[path]);\n    value = prism.loader.set(tb, value);\n    return true;\n  },\n  set: function set(path, value, isLoaders, setVersion) {\n    this.historyManager.startStack({\n      type: \"set\",\n      path: path,\n      value: value\n    });\n\n    try {\n      if (this.setByLoader(path, value)) {\n        return;\n      }\n\n      var target = isLoaders ? this.state.meta : this.state.wallet;\n\n      _.set(target, path, value); //if ( setVersion ) {\n\n\n      this.state.currentVersion++; //}\n\n      this.updateVersionForAll(path.split(\".\"));\n\n      _.set(this.state.version, path + \".version\", this.state.currentVersion);\n\n      var strPath = _.isArray(path) ? path.join(\".\") : path;\n      this.getAffectedPaths(strPath);\n      this.req_triggers();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.historyManager.endStack();\n    }\n  },\n  affected: {},\n  affected_checked: {},\n  markChangeOn: function markChangeOn(path, skipTrigger) {\n    this.getAffectedPaths(path);\n    if (!skipTrigger) this.req_triggers();\n  },\n  getAffectedPaths: function getAffectedPaths(path) {\n    if (this.state.cache[path]) {\n      this.state.cache[path].shouldUpdate = true;\n    }\n\n    if (this.affected[path]) {\n      return;\n    }\n\n    this.affected[path] = {\n      version: this.state.currentVersion,\n      state: 1\n    };\n    var route = path.split(\".\");\n    var strPath = route[0];\n    this.getAffectedPaths(route[0]);\n\n    for (var i = 1; i < route.length - 1; i++) {\n      strPath += \".\" + route[i];\n      this.getAffectedPaths(strPath);\n    }\n\n    var influenced = this.getInfluenced(path);\n\n    for (var i in influenced) {\n      this.getAffectedPaths(influenced[i]);\n    }\n  },\n  markChangedPaths: function markChangedPaths(path) {\n    //let influenced = this.getInfluenced( path );\n    var route = path.split(\".\");\n    var strPath = route[0];\n\n    for (var i = 1; i < route.length; i++) {\n      strPath += \".\" + route[i];\n      if (this.state.cache[strPath]) this.state.cache[strPath].shouldUpdate = true;\n      this.checkTriggers(strPath);\n      this.setUpdateFlag(strPath);\n    }\n  },\n  changedPaths: {},\n  setUpdateFlag: function setUpdateFlag(path) {\n    var influenced = this.getInfluenced(path);\n    var cache = this.state.cache;\n\n    for (var i in influenced) {\n      if (cache[influenced[i]]) {\n        cache[influenced[i]].shouldUpdate = true;\n      }\n\n      this.setUpdateFlag(cache[influenced[i]]);\n      this.checkTriggers(influenced[i]);\n    }\n  },\n  checkTriggers: function checkTriggers(path) {\n    if (this.state.triggers[path]) {\n      this.runTriggers(this.state.triggers[path], path);\n    }\n  },\n  runTriggers: function runTriggers(collection, path) {\n    for (var i in collection) {\n      this.runTrigger(collection[i], path, i);\n    }\n  },\n  runTrigger: function runTrigger(trigger, path, token) {\n    if (_.isFunction(trigger.run)) {\n      return trigger.run(trigger, path, token);\n    }\n\n    var fn = _.get(this.state.wallet, trigger.run);\n\n    if (_.isFunction(fn)) return fn(trigger, path, token);else if (fn.run) return fn.run(trigger, path, token);\n  },\n  run: function run(path, value) {},\n  fetchValues: function fetchValues(target, map, wallet, master, logger, onlyPaths) {\n    for (var i in map) {\n      if (i == \"type\") continue;\n      var value = map[i];\n\n      if (_.isString(value)) {\n        if (value.charAt(0) == \"$\") {\n          var _path = value.substr(2);\n\n          if (logger) logger.add(_path, i);\n          value = master.getValue(_path);\n        } else if (onlyPaths) {\n          var _path2 = value;\n          if (logger) logger.add(_path2, i);\n          value = master.getValue(_path2);\n        }\n      } else if (value.KEY == \"fullPath\") {\n        path = value.path.join(\".\");\n        if (logger) logger.add(path, i);\n        value = master.getValue(path);\n      }\n\n      if (value === undefined) throw \"postpone\";\n      var slot = i;\n      target[slot] = value;\n      if (!target.src) target.src = {};\n      target.src[slot] = {\n        key: map[i],\n        slot: i\n      };\n    }\n\n    return target;\n  },\n  setCombined: function setCombined(path, value) {\n    this.historyManager.startStack({\n      type: \"setCombined\",\n      path: path,\n      value: value\n    });\n    var payload = {\n      loaders: {},\n      loadersPaths: [],\n      basePath: path.split(\".\"),\n      value: value,\n      pins: [],\n      afterOp: []\n    };\n    var isEmpty = this.iterate(value, [], payload);\n\n    if (payload.pins.length) {\n      var currentPins = {};\n\n      for (var i in payload.pins) {\n        var _pin = payload.pins[i];\n\n        var name = _pin.value || _pin.path.slice(-1)[0];\n\n        currentPins[name] = {\n          path: _pin.path,\n          fullPath: payload.basePath.concat(_pin.path)\n        };\n      }\n\n      var pins = _.get(this.state.pins, path + \".pins\");\n\n      if (!pins) _.set(this.state.pins, path + \".pins\", pins = {});\n\n      _.merge(pins, currentPins);\n    }\n\n    if (payload.afterOp.length) {\n      for (var i in payload.afterOp) {\n        var op = payload.afterOp[i];\n\n        if (op.type == \"gluePin\") {\n          var pin = pins[op.pin];\n          var pinKey = {\n            KEY: \"fullPath\",\n            path: pin.fullPath\n          };\n\n          if (op.isLoader) {\n            _.set(payload.loaders, op.dest, pinKey);\n          } else {\n            _.set(value, op.dest, pinKey);\n          }\n        } else if (op.type == \"flags\") {\n          if (op.flags.hasVersion) {\n            this.updateVersion(op.path);\n          }\n        }\n      }\n    }\n\n    if (!isEmpty) this.set(path, value, false, true);\n\n    if (payload.hasLoaders) {\n      //console.log( \"loaders\", payload.loadersPaths );\n      this.set(path, payload.loaders, true, true);\n\n      for (var i in payload.loadersPaths) {\n        var lPath = payload.loadersPaths[i];\n        this.setCache(lPath.join(\".\"), {}, true);\n\n        var loader = _.get(this.state.meta, lPath);\n\n        if (loader.loader && loader.loader.autostart) {\n          this.state.toStart.push({\n            path: lPath.join(\".\")\n          }); //this.getValue(lPath.join(\".\"));\n        } //console.log( \"loader\", loader );\n\n      }\n    }\n\n    this.historyManager.endStack();\n  },\n  runToStart: function runToStart() {\n    var toStart = this.state.toStart;\n\n    while (toStart.length) {\n      var item = toStart.shift();\n      this.getValue(item.path);\n    }\n  },\n  buildModel: function buildModel(input, path) {\n    var modelName = input.MODEL;\n    input = _.cloneDeep(input);\n    var tokens;\n\n    if (modelName.indexOf(\":\") != -1) {\n      tokens = modelName.split(\":\");\n      modelName = tokens.shift();\n      input.tokens = tokens;\n    }\n\n    var mold = this.getValue(modelName);\n\n    if (mold.handleTokens && tokens) {\n      mold.handleTokens(input, tokens, path);\n    }\n\n    var obj = _.cloneDeep(mold.modelObj);\n\n    if (mold.modelSpec) {\n      var spec = mold.modelSpec;\n\n      if (spec.ops) {\n        for (var i in spec.ops) {\n          var op = spec.ops[i];\n\n          if (op.type == \"replaceValue\") {\n            var value = _.get(input, op.source);\n\n            if (!op.dest) obj = value;else _.set(obj, op.dest, value);\n          } else if (op.type == \"eval\") {\n            var _value2 = op.fn(input, op);\n\n            console.log(_value2);\n\n            _.set(input, op.dest, _value2);\n          }\n        }\n      }\n\n      if (spec.isLoader) {\n        obj = {\n          loader: obj\n        };\n      }\n    }\n\n    if (input.pin !== undefined) obj.pin = input.pin;\n    this.historyManager.addInfo({\n      type: \"buildModel\",\n      path: path,\n      input: input,\n      obj: obj\n    });\n    return obj;\n  },\n  iterate: function iterate(obj, path, payload) {\n    while (obj && obj.MODEL) {\n      var newObj = this.buildModel(obj, payload.basePath.concat(path));\n\n      for (var i in obj) {\n        delete obj[i];\n      }\n\n      _.merge(obj, newObj); //really ? it was easier that way then to put inside the loop and on setCombined ? really ? \n      //yea, keeping the traditional approach\n\n    }\n\n    var isEmpty = true;\n\n    for (var i in obj) {\n      var subPath = path.concat(i);\n\n      if (i == \"pin\") {\n        payload.pins.push({\n          subPath: subPath,\n          path: path,\n          value: obj[i]\n        });\n        delete obj[i];\n      } else if (i == \"loader\") {\n        this.setLoader(payload.loaders, path, obj[i], payload.basePath, payload);\n        payload.loadersPaths.push(payload.basePath.concat(path));\n        delete obj[i];\n        payload.hasLoaders = true;\n      } else if (i == \"flags\") {\n        payload.afterOp.push({\n          type: \"flags\",\n          path: payload.basePath.concat(path).join(\".\"),\n          relPath: path,\n          flags: obj.flags\n        });\n      } else if (_.isString(obj[i]) && obj[i].charAt(0) == \"%\") {\n        obj[i] = this.getStaticValue(obj[i], i, obj, subPath, payload);\n        isEmpty = false;\n      } else if (_.isObjectLike(obj[i])) {\n        var subIsEmpty = this.iterate(obj[i], subPath, payload);\n\n        if (subIsEmpty) {//delete obj[ i ];\n        } else {\n          isEmpty = false;\n        }\n\n        isEmpty = false;\n      } else {\n        isEmpty = false;\n      }\n    }\n\n    return isEmpty;\n  },\n  getStaticValue: function getStaticValue(slot, index, obj, path, payload) {\n    if (slot == \"%PATH\") return payload.basePath.concat(path);else {\n      payload.afterOp.push({\n        type: \"gluePin\",\n        dest: path,\n        pin: slot.substring(1)\n      });\n      return {\n        KEY: \"relative path\"\n      };\n    }\n  },\n  getUID: function getUID() {\n    return this.state.nextUID++;\n  },\n  setTrigger: function setTrigger(target, listener, trigger) {\n    if (!this.state.triggers[target]) this.state.triggers[target] = {};\n    this.state.triggers[target][listener] = trigger;\n  },\n  getTrigger: function getTrigger(target, listener) {\n    if (!this.state.triggers[target]) return null;\n    return this.state.triggers[target][listener];\n  },\n  remTrigger: function remTrigger(target, listener) {\n    if (!this.state.triggers[target]) return;\n    delete this.state.triggers[target][listener];\n  },\n  setLoader: function setLoader(loaders, path, value, basePath, payload) {\n    if (_.isString(value)) {\n      var listenerPath = basePath.concat(path).join(\".\");\n      var oldTrigger = this.getTrigger(value, listenerPath);\n      if (oldTrigger && oldTrigger.path) this.remTrigger(oldTrigger.path, listenerPath);\n      this.setTrigger(value, listenerPath, {\n        run: \"base.updateLoader\",\n        loaderPath: value,\n        destination: listenerPath\n      });\n      value = this.getValue(value);\n    }\n\n    this.prepareLoader(value, basePath, path.concat(\"loader\"), payload);\n\n    _.set(loaders, path.concat(\"loader\"), value); //this.markChangeOn( path, true );\n\n  },\n  prepareLoader: function prepareLoader(loader, basePath, loaderPath, payload) {\n    this.deepTransformObj(loader, [], function (obj, slot, path) {\n      if (_.isString(obj) && obj.charAt(0) == \"%\") {\n        if (obj == \"%PATH\") {\n          return payload.basePath.concat(loaderPath);\n        }\n\n        payload.afterOp.push({\n          type: \"gluePin\",\n          dest: loaderPath.concat(path),\n          pin: obj.substring(1),\n          isLoader: true\n        });\n        return {\n          x: 12\n        };\n      }\n    });\n  },\n  deepTransformObj: function deepTransformObj(obj, path, test) {\n    if (!obj || !_.isObject(obj)) return;\n\n    for (var i in obj) {\n      var value = test(obj[i], i, path.concat([i]));\n\n      if (value !== undefined) {\n        obj[i] = value;\n        continue;\n      }\n\n      if (_.isObject(obj[i])) this.deepTransformObj(obj[i], path.concat([i]), test);\n    }\n  },\n  setMap: function setMap(map) {\n    for (var i in map) {\n      this.setCombined(i, map[i]);\n    }\n  },\n  getFromDispatch: function getFromDispatch(path) {\n    return this.getValue(path);\n  },\n  getVersion: function getVersion(path) {\n    var route = path.split(\".\");\n    var version = -1;\n    var versionsTree = this.state.version;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n      if (!versionsTree[slot]) return version;\n      versionsTree = versionsTree[slot];\n      if (versionsTree.version) version = versionsTree.version;\n    }\n\n    return version;\n  },\n  getVersionTree: function getVersionTree(path) {\n    var versionsTree = this.state.version;\n    return _.get(versionsTree, path);\n  },\n  updateVersionForAll: function updateVersionForAll(path) {\n    for (var i = 0; i < path.length; i++) {\n      _.set(this.state.version, path.slice(0, i).concat(\"version\"), this.state.currentVersion);\n      /*\n      \n      var node = _.get( this.state.version, path.slice(0,i) );\n      if ( !node ) break;\n      if ( node.version ) node.version = this.state.currentVersion;\n      */\n\n    }\n  },\n  updateVersion: function updateVersion(path) {\n    _.set(this.state.version, path + \".version\", this.state.currentVersion);\n  },\n  objectDiff: function difference(oldObject, newObject) {\n    function changes(oldO, newO) {\n      if (!_.isObject(oldO) || !_.isObject(newO)) return {\n        change: {\n          from: oldO,\n          to: newO\n        }\n      };\n      var result = {};\n      var hasChanges = false;\n\n      for (var i in newO) {\n        if (oldO[i] === undefined) {\n          result[i] = {\n            change: {\n              from: undefined,\n              to: newO[i],\n              type: \"added\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isFunction(newO[i]) && oldO[i] && newO[i].toString() != oldO[i].toString()) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"function changed\"\n            }\n          };\n          hasChanges = true;\n        } else if (_.isObject(newO[i])) {\n          var subChanges = changes(oldO[i], newO[i]);\n\n          if (subChanges) {\n            result[i] = subChanges;\n            hasChanges = true;\n          }\n        } else if (newO[i] != oldO[i]) {\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: newO[i],\n              type: \"changed\"\n            }\n          };\n          hasChanges = true;\n        }\n      }\n\n      for (var i in oldO) {\n        if (newO[i] === undefined) {\n          hasChanges = true;\n          result[i] = {\n            change: {\n              from: oldO[i],\n              to: null,\n              type: \"deleted\"\n            }\n          };\n        }\n      }\n\n      return hasChanges ? result : null;\n    }\n\n    return changes(oldObject, newObject);\n  },\n  act: function act(path, args, tb) {\n    var value = _.isObject(path) ? path : this.getValue(path);\n\n    if (!tb) {\n      tb = this.tb();\n    }\n\n    var act = ACT.init(value, this, args, path, tb);\n    return act;\n  },\n  tb: function tb() {\n    var tb = TB.init({}, this, null, {}, {}, {});\n    return tb;\n  }\n};\n\nvar DataManager = _DataManager.setup();\n\nvar ACT = {\n  master: null,\n  actions: null,\n  args: null,\n  init: function init(actions, master, args, path, tb) {\n    var item = Object.create(this);\n    item.master = master;\n    item.actions = actions;\n    item.args = args;\n    item.path = path;\n    item.tb = tb;\n    return item;\n  },\n  run: function run(name, args) {\n    return this.actions[name].apply(this.actions, [args, this.tb]);\n  }\n};\nvar TB = {\n  master: null,\n  logger: null,\n  spec: null,\n  step: null,\n  cache: null,\n  v: null,\n  init: function init(wallet, master, logger, spec, step, cache) {\n    var item = Object.create(this);\n    Object.assign(item, {\n      wallet: wallet,\n      master: master,\n      logger: logger,\n      spec: spec,\n      step: step,\n      cache: cache\n    });\n    item.v = {};\n    return item;\n  },\n  act: function act(path, args) {\n    var act = this.master.act(path, args, this);\n    return act;\n  },\n  go: function go(name, args) {\n    if (!this.toolbox) this.toolbox = DataManager.getValue(\"toolBox\");\n\n    if (!this.toolbox[name]) {\n      console.log(\"no \", name);\n      return null;\n    }\n\n    if (this.toolbox[name].run) return this.toolbox[name].run(args, this);else if (_.isFunction(this.toolbox[name])) return this.toolbox[name](args, this);\n  },\n  path: function path() {\n    return this.step.srcPath.join(\".\");\n  },\n  fetch: function fetch(paths, target) {\n    return this.run_fetch(paths, target);\n  },\n  run_fetch: function run_fetch(paths, target, prefix) {\n    var _this5 = this;\n\n    var singlePath = false;\n\n    if (_.isString(paths) || paths.KEY) {\n      singlePath = true;\n      paths = {\n        SINGLEPATH: paths\n      };\n    }\n\n    var values = {};\n    this.master.fetchValues(values, paths, this.wallet, this.master, {\n      add: function add(path, slot) {\n        if (!_this5.logger) return;\n        var name = slot !== \"SINGLEPATH\" ? (prefix || []).concat(slot) : prefix || [];\n\n        _this5.logger.add(path, name.join(\".\"));\n      }\n    }, true);\n\n    for (var i in values) {\n      if (values[i] && values[i].type == \"routes\") {\n        var subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n        values[i] = this.run_fetch(values[i], null, subPrefix);\n      } else if (values[i] && values[i].type == \"value\") {//let subPrefix = i != \"SINGLEPATH\" ? (prefix || [] ).concat( i ) : prefix;\n        //values[ i ] = this.run_fetch( values[ i ], null, subPrefix )\n      } else if (values[i] && _.isString(values[i]) && values[i].charAt(0) == \"$\") {\n        var _subPrefix = i != \"SINGLEPATH\" ? (prefix || []).concat(i) : prefix;\n\n        values[i] = this.run_fetch(values[i].substring(2), null, _subPrefix);\n      }\n    }\n\n    if (singlePath) values = values.SINGLEPATH;\n\n    if (target) {\n      if (target.src) {\n        var src = values.src;\n        delete values.src;\n\n        _.merge(target.src, src);\n      }\n\n      Object.assign(target, values);\n      return target;\n    } else {\n      return values;\n    }\n  },\n  pathOf: function pathOf(path) {\n    var path = this.v.src[path];\n    if (path.key) return path.key;\n    if (_.isString(path)) return path;\n  },\n  set: function set(path, value) {\n    var target = this.v;\n    var route = _.isString(path) ? path.split(\".\") : path;\n    var last_src = null;\n\n    for (var i = 0; i < route.length; i++) {\n      var slot = route[i];\n\n      if (target.src && target.src[slot]) {\n        last_src = {\n          src: target.src[slot],\n          left: route.slice(i + 1)\n        };\n      }\n\n      if (!target[slot]) {\n        break;\n      }\n\n      target = target[slot];\n    }\n\n    if (last_src) {\n      var basePath = _.isString(last_src.src.key) ? last_src.src.key.split(\".\") : last_src.src.key.path;\n      var fullPath = basePath.concat(last_src.left).join(\".\");\n      this.master.set(fullPath, value);\n    }\n  },\n  detach: function detach() {\n    var detached = Object.create(this);\n    detached.v = {};\n    detached.logger = null;\n    return detached;\n  },\n  feed: function feed(path) {\n    var feedModel = this.master.getValue(path);\n    var feed = feedModel.init();\n    var start = 1;\n\n    for (var i = start; i < arguments.length; i++) {\n      feed.in(arguments[i]);\n    }\n\n    return feed;\n  }\n};\n\ntry {\n  if (!window.DataManager) {\n    window.DataManager = DataManager;\n    window._DataManager = _DataManager;\n  } //eval( 'export default DataManager' );\n\n} catch (e) {}","module.exports = __webpack_public_path__ + \"static/media/logo.06a44ff7.svg\";"],"sourceRoot":""}